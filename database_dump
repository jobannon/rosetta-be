--
-- PostgreSQL database dump
--

-- Dumped from database version 11.5
-- Dumped by pg_dump version 11.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE public.alembic_version OWNER TO postgres;

--
-- Name: languages; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.languages (
    id integer NOT NULL,
    name character varying
);


ALTER TABLE public.languages OWNER TO postgres;

--
-- Name: languages_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.languages_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.languages_id_seq OWNER TO postgres;

--
-- Name: languages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.languages_id_seq OWNED BY public.languages.id;


--
-- Name: method_results; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.method_results (
    id integer NOT NULL,
    method_id integer,
    search_result_id integer,
    relevance_rating double precision
);


ALTER TABLE public.method_results OWNER TO postgres;

--
-- Name: method_results_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.method_results_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.method_results_id_seq OWNER TO postgres;

--
-- Name: method_results_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.method_results_id_seq OWNED BY public.method_results.id;


--
-- Name: methods; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.methods (
    id integer NOT NULL,
    name character varying,
    snippet text,
    syntax text,
    description text,
    docs_url character varying,
    language_id integer
);


ALTER TABLE public.methods OWNER TO postgres;

--
-- Name: methods_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.methods_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.methods_id_seq OWNER TO postgres;

--
-- Name: methods_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.methods_id_seq OWNED BY public.methods.id;


--
-- Name: search_results; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.search_results (
    id integer NOT NULL,
    method_id integer,
    target_language_id integer,
    source_language_id integer
);


ALTER TABLE public.search_results OWNER TO postgres;

--
-- Name: search_results_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.search_results_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.search_results_id_seq OWNER TO postgres;

--
-- Name: search_results_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.search_results_id_seq OWNED BY public.search_results.id;


--
-- Name: languages id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.languages ALTER COLUMN id SET DEFAULT nextval('public.languages_id_seq'::regclass);


--
-- Name: method_results id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.method_results ALTER COLUMN id SET DEFAULT nextval('public.method_results_id_seq'::regclass);


--
-- Name: methods id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.methods ALTER COLUMN id SET DEFAULT nextval('public.methods_id_seq'::regclass);


--
-- Name: search_results id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_results ALTER COLUMN id SET DEFAULT nextval('public.search_results_id_seq'::regclass);


--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.alembic_version (version_num) FROM stdin;
98d187a6d123
\.


--
-- Data for Name: languages; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.languages (id, name) FROM stdin;
1	Ruby
2	JavaScript
\.


--
-- Data for Name: method_results; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.method_results (id, method_id, search_result_id, relevance_rating) FROM stdin;
4662	145	55	0.784744730556094727
6975	126	118	0.896062669609186901
6979	130	118	0.951082523657291401
6983	134	118	0.950912459946551158
6985	136	118	0.941060715945927218
6986	137	118	0.931528287455558268
6987	138	118	0.892822906185585241
6988	139	118	0.905316144434031855
6989	140	118	0.896404308117840776
6990	142	118	0.937929435446620108
6991	143	118	0.897186728049364057
6992	144	118	0.906576226962730769
6993	145	118	0.756894229851905354
6994	109	119	0.845730044477483789
6995	110	119	0.895329697229655608
6996	111	119	0.900708708146515491
6997	112	119	0.896375438738089558
6998	113	119	0.933244938053024331
6999	114	119	0.867414073912081585
7000	141	119	0.852822241903827272
7001	115	119	0.912515508788935725
7002	116	119	0.875695764253252684
7003	117	119	0.89206343206507277
7004	118	119	0.917425850871746995
7005	119	119	0.941186686243248971
7006	120	119	0.885466671537015082
7007	121	119	0.918657551015157003
7008	122	119	0.840024597046249322
7009	123	119	0.900029415361442098
7010	124	119	0.946342400710947218
7011	125	119	0.918637895625344036
7012	126	119	0.869786905897722784
7013	127	119	0.959419527319090748
7014	128	119	0.909971353377548864
7015	129	119	0.932335155794638659
7016	130	119	0.932715907431622693
7017	131	119	0.897373835623530458
7018	132	119	0.912992852412286005
7019	133	119	0.945302206206445561
2	2	1	0.902433373920852211
3	3	1	0.898730932363643542
5	5	1	0.914958094290027169
6	6	1	0.905667463055907396
7	7	1	0.902906518849192485
9	9	1	0.900204990919653669
10	10	1	0.865865456839577718
11	11	1	0.888240881035292307
12	25	1	0.866396610158975733
14	13	1	0.67184316256152754
15	14	1	0.67184316256152754
16	15	1	0.623430965160098216
18	17	1	0.846630962456674352
19	18	1	0.886741043573970988
20	19	1	0.878139989575212221
22	21	1	0.888276081252681649
23	22	1	0.868604724146561868
24	23	1	0.882960812405032214
25	24	1	0.851527477000473709
27	27	1	0.873777511929809791
28	28	1	0.867195343069364299
29	29	1	0.887855533156256649
31	31	1	0.867502920642190034
32	32	1	0.898736743043080377
33	33	1	0.863232994730808501
35	35	1	0.884978080819811885
36	36	1	0.891574529853257802
37	37	1	0.874561436156881422
38	38	1	0.824769992674561858
40	40	1	0.879036722480166288
41	56	1	0.869895917390537621
42	57	1	0.85251835414095789
44	42	1	0.891832180664572371
45	43	1	0.882654426325358621
46	44	1	0.877654191886090285
48	46	1	0.915259078972403106
49	47	1	0.876927298511652631
50	48	1	0.893746519855228017
51	49	1	0.890998152239664054
53	51	1	0.827574346860105448
54	52	1	0.86680544327249065
55	53	1	0.864434511966935548
57	55	1	0.876696697674085645
58	58	1	0.888276081252681649
59	59	1	0.868604724146561868
61	61	1	0.892390827244765039
62	62	1	0.67184316256152754
63	63	1	0.67184316256152754
64	64	1	0.885051364036803845
66	66	1	0.900225239984113634
67	67	1	0.389047883550474038
68	68	1	0.880877182714301932
70	70	1	0.893480298239266335
71	100	1	0.582912137184611878
72	71	1	0.886129786400796204
74	73	1	0.879315324230695694
75	74	1	0.874967414004466426
76	75	1	0.827574346860105448
77	76	1	0.882254542805910646
79	78	1	0.854512741281648336
80	79	1	0.879849404073019148
81	80	1	0.865582329221967428
83	82	1	0.901082686821516377
84	83	1	0.891832180664572371
85	84	1	0.882654426325358621
87	86	1	0.877415709879967975
88	87	1	0.850654965491948079
89	88	1	0.607146366066367071
90	89	1	0.888240881035292307
92	91	1	0.888078282265025276
93	92	1	0.879617315605928041
94	93	1	0.873447508091798053
96	95	1	0.879699392112243683
97	96	1	0.872918660168292559
98	97	1	0.914542555625674658
100	99	1	0.882699877858621806
101	101	1	0.872132838991123593
102	102	1	0.882509970372128083
103	103	1	0.879534414945901344
105	105	1	0.861044470049499688
106	106	1	0.891900999890335444
107	107	1	0.909740993147797661
109	1	2	0.860293296006641395
110	2	2	0.929565756342767058
111	3	2	0.906125684117668362
113	5	2	0.896619527721592147
114	6	2	0.898671708635782052
115	7	2	0.911323006161708693
116	8	2	0.895024721445629501
118	10	2	0.910241537791643074
119	11	2	0.923364272025315014
120	25	2	0.875876909064022158
122	13	2	0.689615602769276914
123	14	2	0.689615602769276914
124	15	2	0.591662137767807184
126	17	2	0.891506136307244179
127	18	2	0.910555238483157448
128	19	2	0.927885554049399208
129	20	2	0.768903085483989557
131	22	2	0.918460840114138199
132	23	2	0.918393540762460603
133	24	2	0.851070996633008336
135	27	2	0.929764076070191292
136	28	2	0.898173987787109773
137	29	2	0.912414210537349502
139	31	2	0.912511059651862411
4671	116	56	0.931458190995448132
4675	120	56	0.901774956100265923
4679	124	56	0.959296684457293658
4684	129	56	0.919422934683692628
4688	133	56	0.907380451784206343
4692	137	56	0.913650220877293417
4697	143	56	0.89339762555136959
4701	110	57	0.927885554049399208
4705	114	57	0.910108092658432177
4710	118	57	0.960530648733438075
4714	122	57	0.871239881964682716
4718	126	57	0.910987088716427862
4723	131	57	0.928475389472219748
4727	135	57	0.963118918094974741
4731	139	57	0.934806038410395557
4736	145	57	0.761137331427098607
4740	112	58	0.814985892842394977
4744	115	58	0.819835224548492336
4749	120	58	0.838424646157645448
4753	124	58	0.803117504106985791
4757	128	58	0.805670444260103702
4762	133	58	0.809489651456070658
4766	137	58	0.837938556195002793
4770	142	58	0.821293490878190924
4774	109	59	0.888276081252681649
4775	110	59	0.920668724371673686
4776	111	59	0.930240256382888653
4777	112	59	0.923861999579194126
4778	113	59	0.942658871261906617
4779	114	59	0.904959033488801579
4780	141	59	0.888898858105628298
4781	115	59	0.935449301005771394
4782	116	59	0.895125458500185989
4783	117	59	0.924942007464579774
4784	118	59	0.926629933683621565
4785	119	59	0.944798515639636238
4786	120	59	0.91248246947318834
4787	121	59	0.923880800741869179
4788	122	59	0.885553110366489094
187	78	2	0.861160278104725618
188	79	2	0.920200987570979345
190	81	2	0.895329697229655608
191	82	2	0.914359440274392532
192	83	2	0.917918251275569363
194	85	2	0.924126960088516913
195	86	2	0.889337525399342299
196	87	2	0.876279880463077476
197	88	2	0.594657441412622112
199	90	2	0.922836480160558081
200	91	2	0.919750240988675194
201	92	2	0.915553190150250273
203	94	2	0.92513176190967239
204	95	2	0.906223592362732422
205	96	2	0.905959425087303094
207	98	2	0.699485930424996627
208	99	2	0.931127416506347449
209	101	2	0.902445182242601507
210	102	2	0.894378201899611036
212	104	2	0.918292658805103135
213	105	2	0.867473963523008651
214	106	2	0.916427572450875139
216	108	2	0.891413302732007362
217	1	3	0.907670955928467804
218	2	3	0.954526624666274803
220	4	3	0.928885807902292693
221	5	3	0.942068510897560496
222	6	3	0.937769429270033816
223	7	3	0.94350457344641725
225	9	3	0.952225455659208464
226	10	3	0.929915731076785823
227	11	3	0.936861458348589471
229	12	3	0.944429527527391399
230	13	3	0.705287097584551659
231	14	3	0.705287097584551659
233	16	3	0.945588526945678742
234	17	3	0.903454253165954957
235	18	3	0.92107039310933625
236	19	3	0.952137954918578222
238	21	3	0.930240256382888653
239	22	3	0.919712619838250922
240	23	3	0.945245725428250805
242	26	3	0.875320249645312187
243	27	3	0.947565867676197437
244	28	3	0.908461356253601582
246	30	3	0.92170117174544075
247	31	3	0.91054551193344091
248	32	3	0.947336419824710618
249	33	3	0.901807449470441225
251	35	3	0.921302908657142039
252	36	3	0.928880548872710654
253	37	3	0.926996071491542506
255	39	3	0.92420365604759025
256	40	3	0.936933855458409348
257	56	3	0.916343542867386063
259	41	3	0.949100248529935242
260	42	3	0.924414234969643589
261	43	3	0.915380209562408842
262	44	3	0.923635435520936854
264	46	3	0.947991800951969443
265	47	3	0.930703279796638472
266	48	3	0.909526556439747114
268	50	3	0.923635435520936854
269	51	3	0.901390805940081252
270	52	3	0.930619980652085399
272	54	3	0.928500776087440305
273	55	3	0.911934849121901037
274	58	3	0.930240256382888653
275	59	3	0.919712619838250922
277	61	3	0.936559430266377002
278	62	3	0.705287097584551659
279	63	3	0.705287097584551659
281	65	3	0.944429871709182467
282	66	3	0.933199987689184884
283	67	3	0.32781541001962472
285	69	3	0.92303289207213135
286	70	3	0.919396328323008549
287	100	3	0.589211539722126809
288	71	3	0.928857736532332279
290	73	3	0.943396381057946098
291	74	3	0.944013856029330967
292	75	3	0.901390805940081252
294	77	3	0.742401453182301108
295	78	3	0.887522726644572546
296	79	3	0.922042063343387563
298	81	3	0.900708708146515491
299	82	3	0.943071833052277042
300	83	3	0.924414234969643589
301	84	3	0.915380209562408842
303	86	3	0.937783584770029544
304	87	3	0.914646697200447667
305	88	3	0.62926499692287563
307	90	3	0.926934133047961017
308	91	3	0.941611983880681902
309	92	3	0.93673390837388093
311	94	3	0.936714794186621069
312	95	3	0.927138505918581046
313	96	3	0.909528040164577001
314	97	3	0.920259762623355182
316	99	3	0.947521939970902061
317	101	3	0.921498127212042606
318	102	3	0.928965373005589901
320	104	3	0.931615393695751082
321	105	3	0.900435187841799767
322	106	3	0.928817024437130545
324	108	3	0.926560243001935957
4789	123	59	0.9315005911731008
4790	124	59	0.949436453395991142
4791	125	59	0.950875159008614745
4792	126	59	0.9082172936809223
4793	127	59	0.954340557334369066
4794	128	59	0.934867196674697976
4795	129	59	0.940386252669461187
4796	130	59	0.934842077589898013
4797	131	59	0.912897166473012889
4798	132	59	0.916703394863332299
4799	133	59	0.940198811694571313
4800	134	59	0.940039259981393149
4801	135	59	0.948614270616460531
4802	136	59	0.94183692345216985
4803	137	59	0.933547948761251578
4804	138	59	0.894136669960214459
4805	139	59	0.913845031778470096
4806	140	59	0.90147782946956434
4807	142	59	0.924076842939114962
4808	143	59	0.911130219486894988
4809	144	59	0.906605773884734512
4810	145	59	0.801370941985565022
4811	109	60	0.868604724146561868
4814	112	60	0.912710679930240021
4818	115	60	0.9306344333372355
4823	120	60	0.892826096244159872
4827	124	60	0.949891031040891676
4831	128	60	0.920911586590505538
4836	133	60	0.936426729475065223
4840	137	60	0.929272539454571667
4844	142	60	0.91777003836792681
4849	110	61	0.918393540762460603
4853	114	61	0.903018531082235176
4857	117	61	0.930682251194186128
4862	122	61	0.872608576252186685
4866	126	61	0.905121531943807622
4870	130	61	0.952062220091955846
4875	135	61	0.955235846594107985
4879	139	61	0.93359476370881711
372	46	4	0.947880299502569024
373	47	4	0.928564779783838001
375	49	4	0.898743557900420709
376	50	4	0.915983237527939642
377	51	4	0.879603962180148913
379	53	4	0.876709965500126587
380	54	4	0.946563356175963877
381	55	4	0.917687559133530617
382	58	4	0.923861999579194126
384	60	4	0.926743954437246997
385	61	4	0.928101478348400843
386	62	4	0.763772139740231504
388	64	4	0.934439351433629883
389	65	4	0.932003335937972022
390	66	4	0.937722021448972209
392	68	4	0.931860885839457143
393	69	4	0.940648252673182639
394	70	4	0.922512472972224162
395	100	4	0.605618742569823287
397	72	4	0.92282320058673184
398	73	4	0.931246055437449427
399	74	4	0.928486804426470913
401	76	4	0.915426948019674835
402	77	4	0.74387010169862211
403	78	4	0.893144594970285755
405	80	4	0.910759659738139105
406	81	4	0.896375438738089558
407	82	4	0.944461964107966456
408	83	4	0.926548944155096255
410	85	4	0.942063096785472953
411	86	4	0.929837116416148191
412	87	4	0.909821434482306901
414	89	4	0.918581374075187029
415	90	4	0.915332713778350016
416	91	4	0.941585643923650628
418	93	4	0.930234248755820836
419	94	4	0.950083020019237723
420	95	4	0.920303907403307919
421	96	4	0.918892659390127098
423	98	4	0.717510493647822489
424	99	4	0.924516156374467046
425	101	4	0.926128359265567802
427	103	4	0.944378405396683163
428	104	4	0.945203040097125191
429	105	4	0.912394136801472189
431	107	4	0.947434185220034308
432	108	4	0.946471677286650492
433	1	5	0.915480146717407295
434	2	5	0.966644040552434469
436	4	5	0.943801438152931271
437	5	5	0.933169965919914968
438	6	5	0.943416783443105533
440	8	5	0.942166291974936176
441	9	5	0.955590577726916135
442	10	5	0.931502151042107984
444	25	5	0.905874710112170689
445	12	5	0.954484094658673232
446	13	5	0.723860646538343144
447	14	5	0.723860646538343144
449	16	5	0.948805623261634201
450	17	5	0.910089366307853753
451	18	5	0.924711897497020319
453	20	5	0.824490656000557931
454	21	5	0.942658871261906617
455	22	5	0.937017007872839924
457	24	5	0.910674724430170168
458	26	5	0.900024880628673807
459	27	5	0.933448148313801518
460	28	5	0.916506005632110488
462	30	5	0.928914893326729163
463	31	5	0.927822554437096048
464	32	5	0.957493337714162784
466	34	5	0.942777953355670606
467	35	5	0.940972152136750672
468	36	5	0.938005766978120659
470	38	5	0.846559445861696624
471	39	5	0.9350855813740786
472	40	5	0.945323246845603427
473	56	5	0.939389273560640059
475	41	5	0.963339388939516872
476	42	5	0.932321013917349783
477	43	5	0.930526180736062747
479	45	5	0.95071583970722906
480	46	5	0.956852036419043817
481	47	5	0.937049686466217224
483	49	5	0.892047656080898532
484	50	5	0.929675690860606085
485	51	5	0.916669865926222793
486	52	5	0.945340063865530933
488	54	5	0.930962281405566028
489	55	5	0.921258722493601745
490	58	5	0.942658871261906617
492	60	5	0.943455888014925637
493	61	5	0.942701887530784877
494	62	5	0.723860646538343144
496	64	5	0.948058096330674616
497	65	5	0.947482338440413185
498	66	5	0.94369856838659627
499	67	5	0.305052225555330236
501	69	5	0.942268084715736864
502	70	5	0.923184739302266189
503	100	5	0.59631418808501524
505	72	5	0.927768036416152131
506	73	5	0.950324590438587413
507	74	5	0.949460364170823135
509	76	5	0.922386306368961351
4883	144	61	0.916227070177386693
4888	112	62	0.889363934548014878
4892	115	62	0.899477076890099925
4896	119	62	0.903705142935783079
4901	124	62	0.903080860499777205
4905	128	62	0.885933560581542934
4909	132	62	0.881993930272094051
4914	137	62	0.903111846069022617
4918	142	62	0.896508171938344423
4922	109	63	0.816583866974458505
4927	114	63	0.824051888743024707
4931	117	63	0.87440157585178846
4935	121	63	0.885351172517654605
4940	126	63	0.82770412528404369
4944	130	63	0.914449744722434565
4948	134	63	0.892089025385379819
4950	136	63	0.875732693405276486
4951	137	63	0.890005622383197137
4952	138	63	0.862736302614340422
4953	139	63	0.876297264267901777
4954	140	63	0.835505202655351553
4955	142	63	0.903306364175439191
4956	143	63	0.823076666690211844
4957	144	63	0.845729450122040927
4958	145	63	0.695433260730370817
4959	109	64	0.873777511929809791
4960	110	64	0.929764076070191292
4961	111	64	0.947565867676197437
4962	112	64	0.918526195396192957
4963	113	64	0.933448148313801518
4964	114	64	0.917585104518978123
4965	141	64	0.906623943308368818
4966	115	64	0.937194371766586265
4967	116	64	0.907132412576444835
4968	117	64	0.909053647726287495
4969	118	64	0.936452890890178358
4970	119	64	0.950431971544206888
4971	120	64	0.904078656446680839
4972	121	64	0.921187148914890841
557	16	6	0.935791609928390167
558	17	6	0.899070193441520837
560	19	6	0.910108092658432177
561	20	6	0.776279408055809861
562	21	6	0.904959033488801579
564	23	6	0.903018531082235176
565	24	6	0.872705729128217422
566	26	6	0.824051888743024707
567	27	6	0.917585104518978123
569	29	6	0.900055062473299805
570	30	6	0.910750802694758832
571	31	6	0.869732368489006369
573	33	6	0.902988497435268211
574	34	6	0.890686178851048282
575	35	6	0.893523989175085465
577	37	6	0.894476341085266524
578	38	6	0.833813313540695211
579	39	6	0.881541631538212633
580	40	6	0.905054020902038459
582	57	6	0.883318781026599553
583	41	6	0.921875684557248887
584	42	6	0.912041125501709127
586	44	6	0.907407682495396495
587	45	6	0.908600566013112565
588	46	6	0.922775380308655691
590	48	6	0.911701342093406475
591	49	6	0.882530140673429386
592	50	6	0.907407682495396495
593	51	6	0.846361048091884949
595	53	6	0.860726223315505523
596	54	6	0.920148487530064174
597	55	6	0.881548535763655217
599	59	6	0.885695664391331516
600	60	6	0.93103720167535764
601	61	6	0.928986545213471793
603	63	6	0.652884736733833515
604	64	6	0.895832906813873064
605	65	6	0.898615794549601388
606	66	6	0.891831094672988045
608	68	6	0.915868387406820195
609	69	6	0.898079392105851859
610	70	6	0.942614308403666556
612	71	6	0.892436693226711375
613	72	6	0.869355823923778859
614	73	6	0.898112994009536147
616	75	6	0.846361048091884949
617	76	6	0.919931704761843272
618	77	6	0.699539534349238878
619	78	6	0.841192690300347157
621	80	6	0.894028033081422646
622	81	6	0.867414073912081585
623	82	6	0.926059281591465999
625	84	6	0.881032018561070829
626	85	6	0.901892648376675599
627	86	6	0.911585042091005771
629	88	6	0.640916348902627497
630	89	6	0.934849045566423675
631	90	6	0.91298090110477681
632	91	6	0.903789951590919793
634	93	6	0.892129848524936264
635	94	6	0.915976952620944251
636	95	6	0.890600186807747107
638	97	6	0.91086606075295462
639	98	6	0.696135717738459614
640	99	6	0.932945799920913421
642	102	6	0.902465884387818384
643	103	6	0.907432263097249447
644	104	6	0.891026476131257739
645	105	6	0.862956093175429761
647	107	6	0.920475905254026006
648	108	6	0.901504588890034819
649	1	7	0.902054222508374193
651	3	7	0.882988390167824599
652	4	7	0.917258047431467438
653	5	7	0.918928297205002687
655	7	7	0.893730938219098325
656	8	7	0.892975963696474917
657	9	7	0.907653865614016953
658	10	7	0.899617649815109055
660	25	7	0.894699644546403938
661	12	7	0.907490626665085509
662	13	7	0.611439431381107457
664	15	7	0.589505528139170121
665	16	7	0.925076658656375672
666	17	7	0.866508004869425474
668	19	7	0.894076223528017633
669	20	7	0.781588439304114702
670	21	7	0.888898858105628298
671	22	7	0.876931735466043638
673	24	7	0.874427072302591313
674	26	7	0.817260693217681244
675	27	7	0.906623943308368818
677	29	7	0.878872492919086645
678	30	7	0.890832390627810833
679	31	7	0.854295439933058232
681	33	7	0.892632019772370722
682	34	7	0.878734711379767552
683	35	7	0.889215561088375406
684	36	7	0.895903368587644966
686	38	7	0.830455777773818737
687	39	7	0.879503478298497621
688	40	7	0.892023684520234394
690	57	7	0.871708880285112397
691	41	7	0.909115243729316735
692	42	7	0.891805781187394508
694	44	7	0.890924097036571272
4973	122	64	0.885474200013057211
4974	123	64	0.94522788369322952
4975	124	64	0.952593090655463715
4976	125	64	0.941103779483839831
4977	126	64	0.906358258700054265
4978	127	64	0.947594323284045692
4979	128	64	0.927195572158181602
4980	129	64	0.938084026808332361
4981	130	64	0.938274316461926938
4982	131	64	0.922915530609001444
4983	132	64	0.923646988916149825
4984	133	64	0.926817696169594751
4985	134	64	0.934985053196261129
4986	135	64	0.939433701318346803
4987	136	64	0.9432663798962031
4988	137	64	0.938707446676065205
4989	138	64	0.883615405648055963
4990	139	64	0.922219338479281836
4991	140	64	0.918579874663361995
4992	142	64	0.929758898402648137
4993	143	64	0.918224312839905799
4994	144	64	0.90591789053336691
4995	145	64	0.794645530502985364
4996	109	65	0.867195343069364299
4999	112	65	0.914793817210692306
5003	115	65	0.912668710856346377
5008	120	65	0.883120063455323789
5012	124	65	0.945766715931397495
5016	128	65	0.897380363891216115
5021	133	65	0.906087270743600848
5025	137	65	0.901439264592107437
5029	142	65	0.888549406262613473
5034	110	66	0.912414210537349502
5038	114	66	0.900055062473299805
5042	117	66	0.903871637393139804
5047	122	66	0.871898144821634413
5051	126	66	0.897286501998013963
5055	130	66	0.922830165155223758
5060	135	66	0.94287503051204391
742	93	7	0.878867380573180368
743	94	7	0.90987197363651573
745	96	7	0.879301757683403573
746	97	7	0.908851477515340123
747	98	7	0.712567262492646458
749	101	7	0.876262344459018738
750	102	7	0.903040436840642169
751	103	7	0.893915283625239532
752	104	7	0.881559332967587816
754	106	7	0.914606965321536625
755	107	7	0.912817166358744991
756	108	7	0.904133802348316307
758	2	8	0.956419492980826402
759	3	8	0.924537376664427368
760	4	8	0.937061407130246882
762	6	8	0.930249387663424687
763	7	8	0.945927556504694289
764	8	8	0.926303046131015329
765	9	8	0.947662115852023201
767	11	8	0.938502743801638672
768	25	8	0.911267236894404586
769	12	8	0.940411778476284765
771	14	8	0.713612906041631412
772	15	8	0.623688871917614129
773	16	8	0.942974736413173531
775	18	8	0.926888556010945774
776	19	8	0.948427832153458605
777	20	8	0.819835224548492336
778	21	8	0.935449301005771394
780	23	8	0.94245098387042614
781	24	8	0.899477076890099925
782	26	8	0.877905511913202541
784	28	8	0.912668710856346377
785	29	8	0.931426503591581301
786	30	8	0.923825098061087702
788	32	8	0.95009295861735743
789	33	8	0.924970902304867892
790	34	8	0.926732779923688743
791	35	8	0.927740124570955227
793	37	8	0.927459235594985665
794	38	8	0.863351522975831731
795	39	8	0.922355082050810515
797	56	8	0.925875364093106668
798	57	8	0.906883436529897002
799	41	8	0.945812047147620127
801	43	8	0.928879416109434697
802	44	8	0.931434185561913819
803	45	8	0.931898913012139118
804	46	8	0.943790683553603071
806	48	8	0.927162063326507857
807	49	8	0.906097639697767798
808	50	8	0.931434185561913819
810	52	8	0.943269890249185061
811	53	8	0.850183219109125532
812	54	8	0.928685367451706267
814	58	8	0.935449301005771394
815	59	8	0.9306344333372355
816	60	8	0.949885331759008134
817	61	8	0.950902513285847739
819	63	8	0.713612906041631412
820	64	8	0.936370914596797776
821	65	8	0.942438995635584309
823	67	8	0.319152160135351859
824	68	8	0.938477641119052075
825	69	8	0.924862183540055227
827	100	8	0.610444972907476902
828	71	8	0.929765362303249132
829	72	8	0.925607825098257342
830	73	8	0.940045087077231334
832	75	8	0.884675259373303602
833	76	8	0.907863872204162425
834	77	8	0.759545775524630651
836	79	8	0.930142032001765706
837	80	8	0.927339931713350385
838	81	8	0.912515508788935725
840	83	8	0.928361666142220265
841	84	8	0.928879416109434697
842	85	8	0.938081603919110663
843	86	8	0.926100881168638534
845	88	8	0.601169622471260379
846	89	8	0.938502743801638672
847	90	8	0.921950133389324744
849	92	8	0.937894421694095981
850	93	8	0.942885825374898068
851	94	8	0.940022714716730157
853	96	8	0.924947256163043185
854	97	8	0.920299718180513149
855	98	8	0.719724155242384867
856	99	8	0.944378862020145982
858	102	8	0.940296451099602915
859	103	8	0.951326880390897078
860	104	8	0.943340981953967983
862	106	8	0.937308977535112997
863	107	8	0.943579625145399947
864	108	8	0.935590664710157505
866	2	9	0.92029745436105781
867	3	9	0.905315910619314157
868	4	9	0.896018458418749941
869	5	9	0.920839610839123468
871	7	9	0.911088045067976804
872	8	9	0.884852978743003615
873	9	9	0.928573802371341572
875	11	9	0.939767281525195064
876	25	9	0.893255366842855669
877	12	9	0.927330584731272056
879	14	9	0.700341353535226196
5064	139	66	0.914427501546520305
5068	144	66	0.869818242736421054
5073	112	67	0.911011953313738299
5077	115	67	0.923825098061087702
5081	119	67	0.95836748776205305
5086	124	67	0.961604446812131641
5090	128	67	0.915728302750933754
5094	132	67	0.918822903206961028
5099	137	67	0.928580862212008085
5103	142	67	0.921737175999404079
5107	109	68	0.867502920642190034
5112	114	68	0.869732368489006369
5116	117	68	0.903467529357317334
5120	121	68	0.921553970364103803
5125	126	68	0.874674852259719415
5129	130	68	0.91859754278796335
5133	134	68	0.924244266895603683
5135	136	68	0.928301355456293775
5136	137	68	0.914459411930164778
5137	138	68	0.863857578989896457
5138	139	68	0.891275165747043463
5139	140	68	0.873026591570188026
5140	142	68	0.907010112035819716
5141	143	68	0.873536779536144281
5142	144	68	0.900377386646863065
5143	145	68	0.755123984479308619
5144	109	69	0.898736743043080377
5145	110	69	0.914164015830396304
5146	111	69	0.947336419824710618
5147	112	69	0.956045825666536619
5148	113	69	0.957493337714162784
5149	114	69	0.910601056296587719
5150	141	69	0.89456705315864582
5151	115	69	0.95009295861735743
5152	116	69	0.905947758705998862
5153	117	69	0.9396692080104877
5154	118	69	0.942095245264222725
5155	119	69	0.948158237669750603
5156	120	69	0.93095823445447079
927	63	9	0.700341353535226196
928	64	9	0.916285142081658122
930	66	9	0.924889052378602194
931	67	9	0.386940032399277323
932	68	9	0.895695058162632507
934	70	9	0.89414014946166176
935	100	9	0.609433443128234664
936	71	9	0.894862158396008689
937	72	9	0.887457767469924885
939	74	9	0.889624957708075148
940	75	9	0.846281813887202694
941	76	9	0.894570389842927138
943	78	9	0.873235114663781453
944	79	9	0.917188139944208225
945	80	9	0.887513328712467464
947	82	9	0.907240268980332165
948	83	9	0.909729913369399679
949	84	9	0.90522102562196316
950	85	9	0.92576301114907622
952	87	9	0.869402279304233971
953	88	9	0.644332928318818277
954	89	9	0.939767281525195064
956	91	9	0.924978765964645011
958	93	9	0.894425283835560747
959	94	9	0.9320162533370836
960	95	9	0.904654328409912223
961	96	9	0.895115872081255648
962	97	9	0.901261351084717943
963	98	9	0.732325546571954922
965	101	9	0.879089191100269396
966	102	9	0.893823994008341449
967	103	9	0.907499720333837634
969	105	9	0.879108391767687292
970	106	9	0.925432787745287033
971	107	9	0.911113619294031007
973	1	10	0.895352608216211654
974	2	10	0.951093646974873419
975	3	10	0.901531418085825154
976	4	10	0.934611634715822648
978	6	10	0.931967647352155093
979	7	10	0.937850211780737908
980	8	10	0.908432428610596587
982	10	10	0.91541222573954395
983	11	10	0.915008994886409965
984	25	10	0.881395574651180569
986	13	10	0.701623942111829102
987	14	10	0.701623942111829102
988	15	10	0.613266441660916928
989	16	10	0.936388800478758276
991	18	10	0.897991934910274181
992	19	10	0.939789641904493434
993	20	10	0.828629794705025291
995	22	10	0.914730811777864306
996	23	10	0.930682251194186128
997	24	10	0.879064417048076585
999	27	10	0.909053647726287495
1000	28	10	0.882167302112374374
1001	29	10	0.903871637393139804
1002	30	10	0.901344810279942954
1004	32	10	0.9396692080104877
1005	33	10	0.892648640307534658
1006	34	10	0.910631491855808606
1008	36	10	0.917951596687734184
1009	37	10	0.912601710062704408
1010	38	10	0.833021727438226001
1012	40	10	0.918825170937252911
1013	56	10	0.898903377902777079
1014	57	10	0.879144787760657298
1015	41	10	0.932129220119398805
1017	43	10	0.907298444206036336
1018	44	10	0.89452233908805201
1019	45	10	0.916256581847999851
1021	47	10	0.908451744139241235
1022	48	10	0.913210657927515324
1023	49	10	0.863242941847076506
1025	51	10	0.879690483921713118
1026	52	10	0.924087105363852412
1027	53	10	0.850649880872160424
1028	54	10	0.922201141467614227
1030	58	10	0.924942007464579774
1031	59	10	0.914730811777864306
1032	60	10	0.92311192220138738
1034	62	10	0.701623942111829102
1035	63	10	0.701623942111829102
1036	64	10	0.92102964382477448
1038	66	10	0.909309819335460179
1039	67	10	0.29096054002385302
1040	68	10	0.928620550785765442
1041	69	10	0.910630925079293219
1043	100	10	0.580616001018678385
1044	71	10	0.913992398145761609
1045	72	10	0.90285396469772794
1047	74	10	0.923146671244676198
1048	75	10	0.879690483921713118
1049	76	10	0.906307253784262246
1051	78	10	0.863254841552991814
1052	79	10	0.88940257549202828
1053	80	10	0.920147635538570707
1054	81	10	0.89206343206507277
1056	83	10	0.913450730488328921
1057	84	10	0.907298444206036336
1058	85	10	0.924031578642666496
1060	87	10	0.895896734154828844
1061	88	10	0.585995361692935979
1062	89	10	0.915008994886409965
1064	91	10	0.92636865151103398
5157	121	69	0.938194475373111958
5158	122	69	0.878376510585339165
5159	123	69	0.941860869331997419
5160	124	69	0.954362958901448843
5161	125	69	0.952435888489320148
5162	126	69	0.913845753259794225
5163	127	69	0.959455385895211066
5164	128	69	0.944345326499114845
5165	129	69	0.945947530790316793
5166	130	69	0.952062800217924221
5167	131	69	0.921945642232067208
5168	132	69	0.92622450092576547
5169	133	69	0.935525426846969266
5170	134	69	0.943305736057263311
5171	135	69	0.965147317336923827
5172	136	69	0.949768502396012182
5173	137	69	0.956268172245640979
5174	138	69	0.916101617099210119
5175	139	69	0.940040937627247275
5176	140	69	0.911300610693253965
5177	142	69	0.942103001466633283
5178	143	69	0.912956670197855313
5179	144	69	0.907963991355180577
5180	145	69	0.782385912301190589
5181	109	70	0.863232994730808501
5184	112	70	0.892834854036760883
5188	115	70	0.924970902304867892
5193	120	70	0.907205065329741211
5197	124	70	0.910327084557382538
5201	128	70	0.892746022443895226
5206	133	70	0.888295197062396125
5210	137	70	0.918168305590442824
5214	142	70	0.89071010145175844
5219	110	71	0.908095495043943934
5223	114	71	0.890686178851048282
5227	117	71	0.910631491855808606
5232	122	71	0.856662979822957915
5236	126	71	0.889239045633415381
5240	130	71	0.953030480845094119
1112	32	11	0.942095245264222725
1113	33	11	0.907060664259200622
1115	35	11	0.921208579148628193
1116	36	11	0.929444228639198511
1117	37	11	0.929664665855635564
1119	39	11	0.908409751931563925
1120	40	11	0.936887637318685518
1121	56	11	0.928228073378378205
1122	57	11	0.901456523741084093
1124	42	11	0.918702829815707833
1125	43	11	0.908706258579074722
1126	44	11	0.926231526104182912
1128	46	11	0.944539370259690036
1129	47	11	0.921470030143412
1130	48	11	0.89819083774678421
1132	50	11	0.926231526104182912
1133	51	11	0.895151055617139924
1134	52	11	0.947586490450775032
1135	53	11	0.843497681821178458
1137	55	11	0.905432087907845018
1138	58	11	0.926629933683621565
1139	59	11	0.926820358231693064
1141	61	11	0.944447404874043217
1142	62	11	0.696599635242774462
1143	63	11	0.696599635242774462
1145	65	11	0.935716316330291287
1146	66	11	0.917741851172878764
1147	67	11	0.298992018550855887
1148	68	11	0.942322293755102791
1150	70	11	0.928720208923287882
1151	100	11	0.597622734604469907
1152	71	11	0.923738873949558892
1154	73	11	0.932853521862372137
1155	74	11	0.933956620029362528
1156	75	11	0.895151055617139924
1158	77	11	0.743805440129573281
1159	78	11	0.85812532120013929
1160	79	11	0.92013955500143263
1161	80	11	0.935064650796549324
1163	82	11	0.942632664789565533
1164	83	11	0.918702829815707833
1165	84	11	0.908706258579074722
1167	86	11	0.917324234688820406
1168	87	11	0.9050526244187721
1169	88	11	0.594845813247238953
1171	90	11	0.904668754568747624
1172	91	11	0.930161911387852869
1173	92	11	0.92583011545800542
1174	93	11	0.934621835415870184
1176	95	11	0.912174102335016057
1177	96	11	0.907547978938711752
1178	97	11	0.909114871861173346
1180	99	11	0.954598652870943476
1181	101	11	0.912821665839889995
1182	102	11	0.923934695589337385
1184	104	11	0.928110118230690007
1185	105	11	0.887221507358378569
1186	106	11	0.927337156790712824
1187	107	11	0.937239838549590587
1189	1	12	0.888537923608759828
1190	2	12	0.958823193244929262
1191	3	12	0.908606258192575345
1193	5	12	0.917085814851344105
1194	6	12	0.924209566619093703
1195	7	12	0.944159526098932611
1197	9	12	0.959722446658474282
1198	10	12	0.934563294909628195
1199	11	12	0.958337392323213355
1200	25	12	0.926228294858234991
1202	13	12	0.726473026728653437
1203	14	12	0.726473026728653437
1204	15	12	0.620456926873909964
1206	17	12	0.938792591771004381
1207	18	12	0.938360846806116533
1208	19	12	0.961189409116685267
1210	21	12	0.944798515639636238
1211	22	12	0.947305883510658364
1212	23	12	0.952282458914203822
1213	24	12	0.903705142935783079
1215	27	12	0.950431971544206888
1216	28	12	0.924348205281830038
1217	29	12	0.938523052527191926
1219	31	12	0.934827973958402891
1220	32	12	0.948158237669750603
1221	33	12	0.918357566783433166
1223	35	12	0.949897881936377586
1224	36	12	0.955357741964452445
1225	37	12	0.956708012092136406
1226	38	12	0.873684658039954098
1228	40	12	0.959912067100789357
1229	56	12	0.950058822875083808
1230	57	12	0.920828444652020295
1232	42	12	0.936413073016595376
1233	43	12	0.941078188547543992
1234	44	12	0.950653396467328049
1236	46	12	0.952268671107017184
1237	47	12	0.94806178295228416
1238	48	12	0.907921239476530584
1239	49	12	0.923486610821941389
1241	51	12	0.905204263583401447
1242	52	12	0.966972402911012607
1243	53	12	0.856893774816344989
1245	55	12	0.93548090681892937
1246	58	12	0.944798515639636238
1247	59	12	0.947305883510658364
1249	61	12	0.955093830862876469
5245	135	71	0.94992576184813271
5249	139	71	0.915959676204847084
5253	144	71	0.887855398586191558
5258	112	72	0.928666675269012587
5262	115	72	0.927740124570955227
5266	119	72	0.949897881936377586
5271	124	72	0.95987289738143966
5275	128	72	0.915463502086858227
5279	132	72	0.919996708731409929
5284	137	72	0.937776331786204342
5288	142	72	0.930825530687004354
5292	109	73	0.891574529853257802
5297	114	73	0.903510296434552052
5301	117	73	0.917951596687734184
5305	121	73	0.928169252356946251
5310	126	73	0.906373324992145846
5314	130	73	0.928195214505158406
5318	134	73	0.942230170719380755
5320	136	73	0.947233139205684083
5321	137	73	0.931486744099540132
5322	138	73	0.877875105361854202
5323	139	73	0.912288404977372958
5324	140	73	0.903710337669448971
5325	142	73	0.918704764972013366
5326	143	73	0.910161060385786924
5327	144	73	0.906130357833696332
5328	145	73	0.802189421313498685
5329	109	74	0.874561436156881422
5330	110	74	0.927068274692966154
5331	111	74	0.926996071491542506
5332	112	74	0.909938165156219281
5333	113	74	0.938413909807848667
5334	114	74	0.894476341085266524
5335	141	74	0.880346409411332687
5336	115	74	0.927459235594985665
5337	116	74	0.894105335700736248
5338	117	74	0.912601710062704408
5339	118	74	0.929664665855635564
5340	119	74	0.956708012092136406
1297	1	13	0.914843901319138397
1298	2	13	0.940178964965215358
1300	4	13	0.94275498751870801
1301	5	13	0.925279835112663207
1302	6	13	0.940806004910643368
1304	8	13	0.924007393744880723
1305	9	13	0.92476455293271087
1306	10	13	0.920039150364434399
1307	11	13	0.92009522765343088
1309	12	13	0.932197287331584912
1310	13	13	0.673834134507338756
1311	14	13	0.673834134507338756
1313	16	13	0.936609730458289991
1314	17	13	0.86945036195482972
1315	18	13	0.901774956100265923
1317	20	13	0.838424646157645448
1318	21	13	0.91248246947318834
1319	22	13	0.892826096244159872
1320	23	13	0.921260966809110848
1322	26	13	0.859741918266689442
1323	27	13	0.904078656446680839
1324	28	13	0.883120063455323789
1326	30	13	0.906462796927174463
1327	31	13	0.887619241519332025
1328	32	13	0.93095823445447079
1330	34	13	0.900586502766245411
1331	35	13	0.90610820643241563
1332	36	13	0.907892814175221718
1333	37	13	0.893918523179110802
1335	39	13	0.905892993134799096
1336	40	13	0.907327015120078184
1337	56	13	0.885988753024424813
1339	41	13	0.928114021743478901
1340	42	13	0.906905613996088045
1341	43	13	0.8959984478321662
1343	45	13	0.910633435423957804
1344	46	13	0.955056450239313182
1345	47	13	0.914914250100921422
1346	48	13	0.923064494278980407
1348	50	13	0.888167590989102029
1349	51	13	0.873513495843270871
1350	52	13	0.913245306102017929
1352	54	13	0.94149675331421645
1353	55	13	0.887832776231210374
1354	58	13	0.91248246947318834
1356	60	13	0.923024104489322039
1357	61	13	0.921043355732645841
1358	62	13	0.673834134507338756
1359	63	13	0.673834134507338756
1361	65	13	0.919807503536363535
1362	66	13	0.908602298745905368
1363	67	13	0.3385991566370673
1365	69	13	0.918967708568188324
1366	70	13	0.93573507057179639
1367	100	13	0.576631460107430716
1369	72	13	0.887754608955803937
1370	73	13	0.917874298302411407
1371	74	13	0.914335996035255838
1372	75	13	0.873513495843270871
1374	77	13	0.727884114402033044
1375	78	13	0.869667541038011471
1376	79	13	0.886198050645216173
1378	81	13	0.885466671537015082
1379	82	13	0.947436216707257639
1380	83	13	0.906905613996088045
1382	85	13	0.921658796587374707
1383	86	13	0.928190511597204115
1384	87	13	0.899319073341331543
1385	88	13	0.610877482701241648
1387	90	13	0.916941253233928277
1388	91	13	0.917968638866648479
1389	92	13	0.909019365784182964
1391	94	13	0.920247361718756651
1392	95	13	0.89464835839073098
1393	96	13	0.897237741941392497
1395	98	13	0.686096970882114077
1396	99	13	0.920220324289236502
1397	101	13	0.915156898854973755
1398	102	13	0.925592462824520124
1400	104	13	0.906702484891675708
1401	105	13	0.895030448391440081
1402	106	13	0.927853287295475448
1404	108	13	0.921301994010952363
1405	1	14	0.878333993769848886
1406	2	14	0.941754774457884025
1408	4	14	0.916876627786615384
1409	5	14	0.925330300346252299
1410	6	14	0.942781642919034657
1411	7	14	0.939889542802854971
1413	9	14	0.950760296928379045
1414	10	14	0.916065334318317159
1415	11	14	0.929329905772591114
1417	12	14	0.933556707465186153
1418	13	14	0.76386952553925036
1419	14	14	0.76386952553925036
1421	16	14	0.936841827613726363
1422	17	14	0.898883986574785854
1423	18	14	0.931930216480257312
1424	19	14	0.941925066698772184
1426	21	14	0.923880800741869179
1427	22	14	0.91979643759748686
1428	23	14	0.931842552137128854
1430	26	14	0.885351172517654605
1431	27	14	0.921187148914890841
1432	28	14	0.91234316728046172
1434	30	14	0.919281272371595293
5341	120	74	0.893918523179110802
5342	121	74	0.926397590054162556
5343	122	74	0.8695615940348006
5344	123	74	0.928840335958001306
5345	124	74	0.955759415393612644
5346	125	74	0.939919226287365794
5347	126	74	0.89673597600009769
5348	127	74	0.958346269924042038
5349	128	74	0.921253302369911209
5350	129	74	0.945645960416049425
5351	130	74	0.934913048371072697
5352	131	74	0.912622486284980217
5353	132	74	0.916581675253403838
5354	133	74	0.942083349061818454
5355	134	74	0.944190599087781579
5356	135	74	0.938914055341425025
5357	136	74	0.938649458566015782
5358	137	74	0.927016350214034501
5359	138	74	0.884175848032277556
5360	139	74	0.904395040660258775
5361	140	74	0.903530029469117313
5362	142	74	0.923784720703231699
5363	143	74	0.899116529519418672
5364	144	74	0.902683313193629822
5365	145	74	0.775240076458556637
5366	109	75	0.824769992674561858
5369	112	75	0.860244756207557359
5373	115	75	0.863351522975831731
5378	120	75	0.844628212037664472
5382	124	75	0.877518380076348636
5386	128	75	0.830080168287258835
5391	133	75	0.835275056054044063
5395	137	75	0.856679140281380702
5399	142	75	0.839072054118973121
5404	110	76	0.900462046703607299
5408	114	76	0.881541631538212633
5412	117	76	0.908645366057540316
5417	122	76	0.856381882466778821
5421	126	76	0.880284438843525585
1482	77	14	0.763280700056994443
1483	78	14	0.917794624166085593
1485	80	14	0.92409891760390428
1486	81	14	0.918657551015157003
1487	82	14	0.922325977561419097
1489	84	14	0.926952115934510545
1490	85	14	0.95411532901013163
1491	86	14	0.906545303625481136
1492	87	14	0.89773051292970707
1494	89	14	0.929329905772591114
1495	90	14	0.940273001207962644
1496	91	14	0.947091513548519726
1498	93	14	0.938432593256089964
1499	94	14	0.933355788667487363
1500	95	14	0.926407515005989501
1502	97	14	0.901382159086509649
1503	98	14	0.697817512293845588
1504	99	14	0.929010225635757525
1505	101	14	0.916768078975023881
1507	103	14	0.936367010212671436
1508	104	14	0.943495180282153068
1509	105	14	0.911869883213573318
1511	107	14	0.935733184053617606
1512	108	14	0.910749604845948468
1513	1	15	0.864029162314428056
1515	3	15	0.885891370133519707
1516	4	15	0.893941908780535144
1517	5	15	0.892230978983773459
1518	6	15	0.888037968840944436
1520	8	15	0.87502909749881197
1521	9	15	0.887861097124340137
1522	10	15	0.880157976554631127
1524	25	15	0.857782763687968908
1525	12	15	0.886443997608245882
1526	13	15	0.617324715947316083
1528	15	15	0.606483136503197295
1529	16	15	0.911664009264150699
1530	17	15	0.845481124150857299
1531	18	15	0.871415137650121685
1533	20	15	0.772318665770232893
1534	21	15	0.885553110366489094
1535	22	15	0.870993065955928181
1537	24	15	0.84949910126116901
1538	26	15	0.800627327264737843
1539	27	15	0.885474200013057211
1541	29	15	0.871898144821634413
1542	30	15	0.872853919948201162
1543	31	15	0.855314088235928582
1544	32	15	0.878376510585339165
1546	34	15	0.856662979822957915
1547	35	15	0.869538928230193298
1548	36	15	0.895106151880279866
1550	38	15	0.813826752199707792
1551	39	15	0.856381882466778821
1552	40	15	0.877794343788637965
1554	57	15	0.84323317863919689
1555	41	15	0.881614132593762312
1556	42	15	0.885951957133538137
1557	43	15	0.866563572993208742
1559	45	15	0.876811833381689443
1560	46	15	0.90817922400865847
1561	47	15	0.879206181144679633
1563	49	15	0.871837228044449408
1564	50	15	0.870472034270249551
1565	51	15	0.816102173263026809
1567	53	15	0.840610442702935501
1568	54	15	0.907649240869738305
1569	55	15	0.868602496444093375
1570	58	15	0.885553110366489094
1572	60	15	0.900814349139936965
1573	61	15	0.89955218678534854
1574	62	15	0.617324715947316083
1576	64	15	0.862112384314073776
1577	65	15	0.871140170276130998
1578	66	15	0.871929860398354073
1580	68	15	0.875686464955767074
1581	69	15	0.872556961647862894
1582	70	15	0.916432790804325492
1583	100	15	0.59399629572376822
1585	72	15	0.852417420886499855
1586	73	15	0.87096716703584709
1587	74	15	0.869146285416979802
1589	76	15	0.88338129310072333
1590	77	15	0.682815719430729051
1591	78	15	0.825284390602722961
1593	80	15	0.865252583733120972
1594	81	15	0.840024597046249322
1595	82	15	0.903079580601846121
1596	83	15	0.885951957133538137
1598	85	15	0.882227829054686219
1599	86	15	0.889635530483886439
1600	87	15	0.862212198574401345
1602	89	15	0.891079861290801079
1603	90	15	0.893151833444047805
1604	91	15	0.881502871665574617
1606	93	15	0.86367677525948594
1607	94	15	0.909238094793371365
1608	95	15	0.862583606369922706
1609	96	15	0.867555204736750629
1611	98	15	0.683621898419166429
1612	99	15	0.892073379899766317
1613	101	15	0.851227549525399252
1615	103	15	0.876082991253392174
1616	104	15	0.865538491898964923
1617	105	15	0.83690170802522279
1619	107	15	0.902710281526587277
5425	130	76	0.930470499987683608
5430	135	76	0.94290055093782621
5434	139	76	0.939362342670450601
5438	144	76	0.866016534972802621
5443	112	77	0.927577724290398198
5447	115	77	0.945404549827915552
5451	119	77	0.959912067100789357
5456	124	77	0.968327309078993559
5460	128	77	0.927210999207621955
5464	132	77	0.928300334257336046
5469	137	77	0.939489501963392981
5473	142	77	0.92210896067036574
5477	109	78	0.869895917390537621
5482	114	78	0.890334772046218914
5486	117	78	0.898903377902777079
5490	121	78	0.926328165901165068
5495	126	78	0.891438005598653938
5499	130	78	0.938273510378092146
5503	134	78	0.931886541967529292
5505	136	78	0.932570680793079476
5506	137	78	0.918017328761889462
5507	138	78	0.867287516596503161
5508	139	78	0.903558281893491411
5509	140	78	0.905208366635891548
5510	142	78	0.930343809994716331
5511	143	78	0.888096781054681594
5512	144	78	0.87015209174875574
5513	145	78	0.786260153362074554
5514	109	79	0.85251835414095789
5515	110	79	0.886795791212169116
5516	111	79	0.919130072842100798
5517	112	79	0.907105785250865049
5518	113	79	0.912342120165104409
5519	114	79	0.883318781026599553
5520	141	79	0.871708880285112397
5521	115	79	0.906883436529897002
5522	116	79	0.890747722454443669
5523	117	79	0.879144787760657298
5524	118	79	0.901456523741084093
1667	45	16	0.927638955142999544
1668	46	16	0.941547160609324196
1670	48	16	0.899439366098958915
1671	49	16	0.923164246286521051
1672	50	16	0.924943922172910327
1674	52	16	0.926095585034407809
1675	53	16	0.873417168877973493
1676	54	16	0.92284060698609538
1677	55	16	0.930415067430594211
1679	59	16	0.927597039236242371
1680	60	16	0.935518335471104079
1681	61	16	0.936445961072265742
1683	63	16	0.71496856416382204
1684	64	16	0.939544557983402973
1685	65	16	0.938846127294743815
1687	67	16	0.316868024115745717
1688	68	16	0.929535187157788934
1689	69	16	0.919979625527771128
1690	70	16	0.91358305827659636
1692	71	16	0.938918606259792288
1693	72	16	0.925258395950098733
1694	73	16	0.937649200285207374
1696	75	16	0.893486220833971001
1697	76	16	0.903315423213622237
1698	77	16	0.736863531992587251
1700	79	16	0.922048384780513097
1701	80	16	0.912884904061689428
1702	81	16	0.900029415361442098
1703	82	16	0.937386485755341448
1705	84	16	0.927097353776473065
1706	85	16	0.941094154068320532
1707	86	16	0.916372438159331892
1709	88	16	0.606107181523860006
1710	89	16	0.934484758717233244
1711	90	16	0.930090043721766513
1713	92	16	0.935893007908003338
1714	93	16	0.934175114602712742
1715	94	16	0.935265645327425843
1716	95	16	0.926309020942800987
1718	97	16	0.921054236376842583
1719	98	16	0.712354724680521634
1720	99	16	0.945326425189240926
1722	102	16	0.929470347693404642
1723	103	16	0.937628371010352679
1724	104	16	0.938811223368485104
1726	106	16	0.939945210413326127
1727	107	16	0.94526942247374357
1728	108	16	0.923426750410626496
1729	1	17	0.88603601299724688
1731	3	17	0.937150809194324697
1732	4	17	0.92141081635652522
1733	5	17	0.920316135092197007
1735	7	17	0.952660223823432295
1736	8	17	0.934471406230547696
1737	9	17	0.968970479026012965
1739	11	17	0.96174851146158169
1740	25	17	0.916196009723383997
1741	12	17	0.95703281647216687
1742	13	17	0.78634729295858663
1744	15	17	0.62285446755779228
1745	16	17	0.95942271233594667
1746	17	17	0.9402512724932095
1748	19	17	0.959309516983610999
1749	20	17	0.803117504106985791
1750	21	17	0.949436453395991142
1752	23	17	0.95138042535366707
1753	24	17	0.903080860499777205
1754	26	17	0.900486838624923736
1755	27	17	0.952593090655463715
1757	29	17	0.958658264458116083
1758	30	17	0.961604446812131641
1759	31	17	0.949675390133620678
1761	33	17	0.910327084557382538
1762	34	17	0.953329469294967091
1763	35	17	0.95987289738143966
1765	37	17	0.955759415393612644
1766	38	17	0.877518380076348636
1767	39	17	0.94564781175353585
1768	40	17	0.968327309078993559
1770	57	17	0.938382706317456683
1771	41	17	0.959062258614798768
1772	42	17	0.950597499956491898
1774	44	17	0.961941944501766621
1775	45	17	0.961368459127245334
1776	46	17	0.949770257357068104
1778	48	17	0.92439488233345446
1779	49	17	0.942014183423363738
1780	50	17	0.961941944501766621
1781	51	17	0.893201278722298486
1783	53	17	0.866582027331018967
1784	54	17	0.937628999078328418
1785	55	17	0.946595494762151324
1787	59	17	0.949891031040891676
1788	60	17	0.953733782858876111
1789	61	17	0.955255574677555175
1791	63	17	0.78634729295858663
1792	64	17	0.958623654633176558
1793	65	17	0.95012501934889948
1794	66	17	0.965080356988467947
1796	68	17	0.934234967369159675
1797	69	17	0.946144703995647651
1798	70	17	0.919585658079079216
1800	71	17	0.958476654871346145
1801	72	17	0.956361797173915673
1802	73	17	0.947072679856514332
1804	75	17	0.893201278722298486
5525	119	79	0.920828444652020295
5526	120	79	0.886828712983057654
5527	121	79	0.901605724186501312
5528	122	79	0.84323317863919689
5529	123	79	0.914516454821343583
5530	124	79	0.938382706317456683
5531	125	79	0.921828823824298094
5532	126	79	0.877603842115666888
5533	127	79	0.93568848576414676
5534	128	79	0.893542606452932486
5535	129	79	0.912088766600224865
5536	130	79	0.915136505370738318
5537	131	79	0.894479486209343033
5538	132	79	0.894971386870207164
5539	133	79	0.894524628071766803
5540	134	79	0.910203094588581618
5541	135	79	0.925634546647052026
5542	136	79	0.910970082511981638
5543	137	79	0.917845906803025136
5544	138	79	0.869377993286758688
5545	139	79	0.910673226568812777
5546	140	79	0.880773270960405474
5547	142	79	0.905883281656276518
5548	143	79	0.881621330053642183
5549	144	79	0.860075339181493037
5550	145	79	0.765935013526393038
5551	109	80	0.879516139329724167
5554	112	80	0.923549502137169909
5558	115	80	0.945812047147620127
5563	120	80	0.928114021743478901
5567	124	80	0.959062258614798768
5571	128	80	0.945096245962988135
5576	133	80	0.955812125819722413
5580	137	80	0.953244118915266059
5584	142	80	0.961653043700630539
5589	110	81	0.917918251275569363
5593	114	81	0.912041125501709127
5597	117	81	0.913450730488328921
5602	122	81	0.885951957133538137
1852	15	18	0.645479262580530455
1853	16	18	0.963391525237115687
1855	18	18	0.935190579690058366
1856	19	18	0.944951252503318573
1857	20	18	0.829575142369453289
1859	22	18	0.944529231838374561
1860	23	18	0.948548257736105405
1861	24	18	0.917355716018975031
1862	26	18	0.875226315961310952
1864	28	18	0.93233497354986139
1865	29	18	0.951968475544598181
1866	30	18	0.940088864055092399
1868	32	18	0.952435888489320148
1869	33	18	0.925986991763684375
1870	34	18	0.938134918317589106
1872	36	18	0.949032796814205826
1873	37	18	0.939919226287365794
1874	38	18	0.869891671204684469
1875	39	18	0.940230646463056763
1877	56	18	0.93229782144579898
1878	57	18	0.921828823824298094
1879	41	18	0.947793848633331271
1881	43	18	0.945326261219121888
1882	44	18	0.937363707034462923
1883	45	18	0.950843057988023488
1885	47	18	0.931547904561788376
1886	48	18	0.928827201236165245
1887	49	18	0.918911502270389424
1888	50	18	0.937363707034462923
1890	52	18	0.941568145557683867
1891	53	18	0.896210188547069464
1892	54	18	0.976854854552019702
1894	58	18	0.950875159008614745
1895	59	18	0.944529231838374561
1896	60	18	0.948378904631140385
1898	62	18	0.733253032863131482
1899	63	18	0.733253032863131482
1900	64	18	0.948811165483580243
1901	65	18	0.943854425549246701
1903	67	18	0.352893366452374957
1904	68	18	0.94373914202184106
1905	69	18	0.945396493572103536
1907	100	18	0.611635072909890609
1908	71	18	0.946415217180844093
1909	72	18	0.935824108150549616
1911	74	18	0.942118937655728517
1912	75	18	0.897509541745079242
1913	76	18	0.921759399455579276
1914	77	18	0.742676391355815979
1916	79	18	0.937150504365470205
1917	80	18	0.935039393369063498
1918	81	18	0.918637895625344036
1920	83	18	0.949789525631641207
1921	84	18	0.945326261219121888
1922	85	18	0.958671568228819049
1924	87	18	0.920631221579634507
1925	88	18	0.636117397357046754
1926	89	18	0.94622588895337012
1927	90	18	0.951522946334606878
1929	92	18	0.945122255726164928
1930	93	18	0.946264890969695238
1931	94	18	0.947093203177197251
1933	96	18	0.942159307365038057
1934	97	18	0.936740490954049654
1935	98	18	0.710805217030701542
1937	101	18	0.933735446654636148
1938	102	18	0.940252082152104207
1939	103	18	0.942117652145565088
1940	104	18	0.94195784582908515
1942	106	18	0.949452388867004005
1943	107	18	0.956686508708703309
1944	108	18	0.938178947626886917
1946	2	19	0.927594507092111331
1947	3	19	0.887220189085021538
1948	4	19	0.925183973925610026
1950	6	19	0.908794837018619517
1951	7	19	0.913908082274983546
1952	8	19	0.904672892113494664
1953	9	19	0.910104782080556118
1955	11	19	0.927050730561410408
1956	25	19	0.884201874395280529
1957	12	19	0.924345839888926157
1959	14	19	0.650415436127303348
1960	15	19	0.643367500755696931
1961	16	19	0.932369358364640521
1963	18	19	0.888034855108278065
1964	19	19	0.910987088716427862
1965	20	19	0.784106145645996011
1966	21	19	0.9082172936809223
1968	23	19	0.905121531943807622
1969	24	19	0.87471990506868702
1970	26	19	0.82770412528404369
1972	28	19	0.865881689165783452
1973	29	19	0.897286501998013963
1974	30	19	0.908480062425238377
1976	32	19	0.913845753259794225
1977	33	19	0.898425992504248039
1978	34	19	0.889239045633415381
1979	35	19	0.895144394714106451
1981	37	19	0.89673597600009769
1982	38	19	0.831231521041565946
1983	39	19	0.880284438843525585
1985	56	19	0.891438005598653938
1986	57	19	0.877603842115666888
1987	41	19	0.917229189510812337
1989	43	19	0.882686968836993713
5606	126	81	0.909069033756801037
5610	130	81	0.926051307381075661
5615	135	81	0.94146167515240442
5619	139	81	0.911590909856584086
5623	144	81	0.887079488710968866
5628	112	82	0.928164183564668455
5632	115	82	0.928879416109434697
5636	119	82	0.941078188547543992
5641	124	82	0.956823700563592006
5645	128	82	0.909214133113298573
5649	132	82	0.920542634047523789
5654	137	82	0.924134778716598992
5658	142	82	0.906875077251221073
5662	109	83	0.877654191886090285
5667	114	83	0.907407682495396495
5671	117	83	0.89452233908805201
5675	121	83	0.913501416056474946
5680	126	83	0.905127850490293095
5684	130	83	0.922166864690692867
5688	134	83	0.928874877299187718
5690	136	83	0.93862216899900841
5691	137	83	0.915712487860439905
5692	138	83	0.856459048851326288
5693	139	83	0.90002889538181885
5694	140	83	0.906988969300943082
5695	142	83	0.914923212382082851
5696	143	83	0.910777363194008149
5697	144	83	0.899296224554140822
5698	145	83	0.814689121912731018
5699	109	84	0.889375934078534769
5700	110	84	0.913388691386414875
5701	111	84	0.929038193432605186
5702	112	84	0.92490412712387915
5703	113	84	0.95071583970722906
5704	114	84	0.908600566013112565
5705	141	84	0.905243201363244432
5706	115	84	0.931898913012139118
5707	116	84	0.906801664164681775
5708	117	84	0.916256581847999851
2037	92	19	0.886969451783535479
2038	93	19	0.899103584317024973
2040	95	19	0.884639548065743409
2041	96	19	0.886915051868555793
2042	97	19	0.91927586507945358
2044	99	19	0.923202926188184669
2045	101	19	0.885896418170699529
2046	102	19	0.90260618368663359
2047	103	19	0.906617435441692932
2049	105	19	0.870012040541644383
2050	106	19	0.923203688164818681
2051	107	19	0.915710031311517625
2053	1	20	0.886587471492271462
2054	2	20	0.965546786348299713
2055	3	20	0.928501886378515384
2057	5	20	0.923184729967445827
2058	6	20	0.945205248904382067
2059	7	20	0.958801813722307661
2060	8	20	0.942007783307760582
2062	10	20	0.931870981176265656
2063	11	20	0.966810004785921162
2064	25	20	0.914902415415450587
2066	13	20	0.801601929667592361
2067	14	20	0.801601929667592361
2068	15	20	0.632908061548438261
2070	17	20	0.945787024125789744
2071	18	20	0.960566923850619259
2072	19	20	0.963012703159812133
2073	20	20	0.810441790156788189
2075	22	20	0.95472809788417845
2076	23	20	0.958768218640940306
2077	24	20	0.89639927684305265
2079	27	20	0.947594323284045692
2080	28	20	0.948745376342192026
2081	29	20	0.956731021717720731
2083	31	20	0.957685657390789591
2084	32	20	0.959455385895211066
2085	33	20	0.9082359828409583
2086	34	20	0.957144536300039372
2088	36	20	0.958056202676090596
2089	37	20	0.958346269924042038
2090	38	20	0.865508907239526892
2092	40	20	0.970043894174722143
2093	56	20	0.96188201308869703
2094	57	20	0.93568848576414676
2096	42	20	0.951950548466919844
2097	43	20	0.963945660756122868
2098	44	20	0.956174887747823221
2099	45	20	0.962893235036460626
2101	47	20	0.940876414764045377
2102	48	20	0.928309741642178832
2103	49	20	0.929163487992558434
2105	51	20	0.889345180597892138
2106	52	20	0.963400923862957281
2107	53	20	0.860688708725729446
2109	55	20	0.951251844938249991
2110	58	20	0.954340557334369066
2111	59	20	0.95472809788417845
2112	60	20	0.948040021032572011
2114	62	20	0.801601929667592361
2115	63	20	0.801601929667592361
2116	64	20	0.961620028887299028
2118	66	20	0.970419183784976269
2119	67	20	0.311275333291257061
2120	68	20	0.939235952360911286
2122	70	20	0.914165356570368126
2123	100	20	0.58758376900976117
2124	71	20	0.962094821231735842
2125	72	20	0.962022932184050328
2127	74	20	0.954191635030946506
2128	75	20	0.889345180597892138
2129	76	20	0.900422033153771673
2131	78	20	0.920072134723514123
2132	79	20	0.962302079366030072
2133	80	20	0.957674516131400644
2135	82	20	0.94503880341548463
2136	83	20	0.951950548466919844
2137	84	20	0.963945660756122868
2138	85	20	0.971068657774827315
2140	87	20	0.923622863167278374
2141	88	20	0.617091607117847607
2142	89	20	0.966810004785921162
2144	91	20	0.962360469259186724
2145	92	20	0.962439975120281677
2146	93	20	0.964700356096216738
2148	95	20	0.957184065740847911
2149	96	20	0.948319639227391598
2150	97	20	0.919356233588601746
2151	98	20	0.732321441736538237
2153	101	20	0.939979001996488317
2154	102	20	0.927092453822716323
2155	103	20	0.955539301326903789
2157	105	20	0.927562794307968397
2158	106	20	0.945894730812226747
2159	107	20	0.951999077180377684
2161	1	21	0.934399089703288444
2162	2	21	0.956845847406421202
2163	3	21	0.899486086933745099
2164	4	21	0.936056294516703247
2166	6	21	0.937020706600726783
2167	7	21	0.943768310595525017
2168	8	21	0.922986748298970427
2170	10	21	0.915922339038826583
2171	11	21	0.932104309997851099
2172	25	21	0.882065755167098065
2174	13	21	0.698641488693816926
5709	118	84	0.94222375778365286
5710	119	84	0.960840726713890092
5711	120	84	0.910633435423957804
5712	121	84	0.928251577793642979
5713	122	84	0.876811833381689443
5714	123	84	0.927638955142999544
5715	124	84	0.961368459127245334
5716	125	84	0.950843057988023488
5717	126	84	0.9123331689873172
5718	127	84	0.962893235036460626
5719	128	84	0.937210045648247614
5720	129	84	0.953986283777506383
5721	130	84	0.956408289782807119
5722	131	84	0.912373772468869526
5723	132	84	0.916068096946923038
5724	133	84	0.966747101841004652
5725	134	84	0.949389791512843084
5726	135	84	0.958728090053237447
5727	136	84	0.938630924359796559
5728	137	84	0.944209634485985272
5729	138	84	0.894144709584754449
5730	139	84	0.922890810455009869
5731	140	84	0.917563722576831275
5732	142	84	0.95065679082549337
5733	143	84	0.908985742689614296
5734	144	84	0.889716803520391397
5735	145	84	0.798681165874947641
5736	109	85	0.915259078972403106
5739	112	85	0.947880299502569024
5743	115	85	0.943790683553603071
5748	120	85	0.955056450239313182
5752	124	85	0.949770257357068104
5756	128	85	0.952553861810736646
5761	133	85	0.95488698193918331
5765	137	85	0.952202168827003148
5769	142	85	0.955563071948735909
5774	110	86	0.915158108572548867
5778	114	86	0.894693413183770603
5782	117	86	0.908451744139241235
2222	62	21	0.698641488693816926
2223	63	21	0.698641488693816926
2225	65	21	0.93084429917500866
2226	66	21	0.922966148869315828
2227	67	21	0.312478883433532084
2229	69	21	0.920733632284335246
2230	70	21	0.930442837888176388
2231	100	21	0.580610774123789919
2232	71	21	0.927402491169053489
2234	73	21	0.933337164841409384
2235	74	21	0.932832313813414915
2236	75	21	0.886146663961318692
2238	77	21	0.757193332858711488
2239	78	21	0.874903098070765717
2240	79	21	0.909823210867047538
2242	81	21	0.909971353377548864
2243	82	21	0.947257853462136201
2244	83	21	0.921452639965192666
2245	84	21	0.909214133113298573
2247	86	21	0.931092415305573295
2248	87	21	0.909372320677105384
2249	88	21	0.589542738529385546
2251	90	21	0.903279493087575824
2252	91	21	0.933012069278469913
2253	92	21	0.926203933133550095
2255	94	21	0.916542983575119985
2256	95	21	0.917404859946988727
2257	96	21	0.902690584142714525
2258	97	21	0.927559669013590993
2260	99	21	0.947297355964621279
2261	101	21	0.916042821669560192
2262	102	21	0.929263190052890042
2264	104	21	0.918261145838424997
2265	105	21	0.89572013669821049
2266	106	21	0.918877689770361328
2268	108	21	0.925230319586813232
2269	1	22	0.907914885805936822
2270	2	22	0.958335478191079448
2271	3	22	0.9089702773160242
2273	5	22	0.919398844879440458
2274	6	22	0.932787548697695201
2275	7	22	0.94401673525060037
2277	9	22	0.949334157572907067
2278	10	22	0.926910524618690723
2279	11	22	0.952969338399715205
2281	12	22	0.957409146620362583
2282	13	22	0.698654336195708381
2283	14	22	0.698654336195708381
2284	15	22	0.620392902899777998
2286	17	22	0.920592358840424452
2287	18	22	0.919422934683692628
2288	19	22	0.95935775063199491
2290	21	22	0.940386252669461187
2291	22	22	0.936012105271006756
2292	23	22	0.94814437708473609
2294	26	22	0.899120017573327379
2295	27	22	0.938084026808332361
2296	28	22	0.905405042150582484
2297	29	22	0.924610707887316918
2299	31	22	0.925671775174100597
2300	32	22	0.945947530790316793
2301	33	22	0.907732607242582423
2303	35	22	0.937956992756828756
2304	36	22	0.942816895799324262
2305	37	22	0.945645960416049425
2307	39	22	0.912175052412485199
2308	40	22	0.939857100074725338
2309	56	22	0.937765908131504067
2310	57	22	0.912088766600224865
2312	42	22	0.931994960162434993
2313	43	22	0.927030536232085089
2314	44	22	0.929379230536454215
2316	46	22	0.962367702198349884
2317	47	22	0.931007010350501707
2318	48	22	0.903363004920346713
2320	50	22	0.929379230536454215
2321	51	22	0.899666374546858494
2322	52	22	0.951667746653958924
2323	53	22	0.874014771600625129
2325	55	22	0.919801785603230115
2326	58	22	0.940386252669461187
2327	59	22	0.936012105271006756
2329	61	22	0.941564459206216342
2330	62	22	0.698654336195708381
2331	63	22	0.698654336195708381
2333	65	22	0.942231129710115245
2334	66	22	0.941541784224516731
2335	67	22	0.334903205351026856
2336	68	22	0.956241459908852343
2338	70	22	0.937089100919017315
2339	100	22	0.584305780252975637
2340	71	22	0.928512257951774389
2342	73	22	0.945673316827276955
2343	74	22	0.94354647819112325
2344	75	22	0.899666374546858494
2346	77	22	0.76102578311688962
2347	78	22	0.881612237818602429
2348	79	22	0.928541119199271514
2349	80	22	0.951223344355619616
2351	82	22	0.952794159551248021
2352	83	22	0.931994960162434993
2353	84	22	0.927030536232085089
2355	86	22	0.92987636374485505
2356	87	22	0.907703158238312713
2357	88	22	0.631733984534577075
2359	90	22	0.924368145290159759
5787	122	86	0.879206181144679633
5791	126	86	0.895583382240873083
5795	130	86	0.927763696156482132
5800	135	86	0.939453906438036945
5804	139	86	0.913494204177448532
5808	144	86	0.887060820665564354
5813	112	87	0.950779205653145221
5817	115	87	0.927162063326507857
5821	119	87	0.907921239476530584
5826	124	87	0.92439488233345446
5830	128	87	0.910273881145906461
5834	132	87	0.907910984729539794
5839	137	87	0.917411198071740652
5843	142	87	0.903003845957814799
5847	109	88	0.890998152239664054
5852	114	88	0.882530140673429386
5856	117	88	0.863242941847076506
5860	121	88	0.90304601981231214
5865	126	88	0.874200078786097845
5869	130	88	0.879897346146169657
5873	134	88	0.894106391378553744
5875	136	88	0.90912742599760088
5876	137	88	0.887545798477929804
5877	138	88	0.832103437264551493
5878	139	88	0.88933048835601769
5879	140	88	0.885207664733839716
5880	142	88	0.875566482548059355
5881	143	88	0.887991824432182275
5882	144	88	0.847318585369643551
5883	145	88	0.788130883267681104
5884	109	89	0.877654191886090285
5885	110	89	0.925952255589310491
5886	111	89	0.923635435520936854
5887	112	89	0.915983237527939642
5888	113	89	0.929675690860606085
5889	114	89	0.907407682495396495
5890	141	89	0.890924097036571272
5891	115	89	0.931434185561913819
7020	134	119	0.931350063904452075
2407	31	23	0.91859754278796335
2408	32	23	0.952062800217924221
2410	34	23	0.953030480845094119
2411	35	23	0.941476673986779922
2412	36	23	0.928195214505158406
2414	38	23	0.844867536359598881
2415	39	23	0.930470499987683608
2416	40	23	0.934261817364710923
2417	56	23	0.938273510378092146
2419	41	23	0.970586010740927319
2420	42	23	0.926051307381075661
2421	43	23	0.918420836522409356
2423	45	23	0.956408289782807119
2424	46	23	0.960263895644526855
2425	47	23	0.927763696156482132
2427	49	23	0.879897346146169657
2428	50	23	0.922166864690692867
2429	51	23	0.907980155896740193
2430	52	23	0.946518886474544852
2432	54	23	0.927388219021938687
2433	55	23	0.912988002037008584
2434	58	23	0.934842077589898013
2436	60	23	0.946331647333575776
2437	61	23	0.944340610829472626
2438	62	23	0.724546140384341064
2440	64	23	0.949295097181098724
2441	65	23	0.945593667144734029
2442	66	23	0.944689361994240362
2443	67	23	0.322368605636747019
2445	69	23	0.942086556743174652
2446	70	23	0.926054213358091016
2447	100	23	0.582630020897949574
2449	72	23	0.918630712472335631
2450	73	23	0.947119500410136927
2451	74	23	0.946089621886161636
2453	76	23	0.921450197983571084
2454	77	23	0.751943314971152632
2455	78	23	0.878947915412423675
2456	79	23	0.919965820428374048
2458	81	23	0.932715907431622693
2459	82	23	0.952524777549261348
2460	83	23	0.926051307381075661
2462	85	23	0.955168476100582309
2463	86	23	0.936524347308552385
2464	87	23	0.912030757641570933
2466	89	23	0.952853222316085935
2467	90	23	0.927379256637982263
2468	91	23	0.946716211770540106
2469	92	23	0.942665959960704458
2471	94	23	0.92573791218915813
2472	95	23	0.929909304993120522
2473	96	23	0.926022112009764586
2475	98	23	0.695553283950629653
2476	99	23	0.958471640007359738
2477	101	23	0.946842378065137713
2479	103	23	0.93806111180731544
2480	104	23	0.929793760087755494
2481	105	23	0.926542489834847327
2482	106	23	0.930409083441729012
2484	108	23	0.932160050387544459
2485	1	24	0.867901315629301617
2486	2	24	0.936291239630581251
2488	4	24	0.91233701467033046
2489	5	24	0.915347211300854169
2490	6	24	0.922365670502299118
2492	8	24	0.897864304405729619
2493	9	24	0.941947061871468372
2494	10	24	0.923867665717183928
2495	11	24	0.932981587128110079
2497	12	24	0.934170262575298671
2498	13	24	0.683065969288894403
2499	14	24	0.683065969288894403
2501	16	24	0.933158736890520202
2502	17	24	0.890627250848902929
2503	18	24	0.916426163654631476
2505	20	24	0.806902122438208136
2506	21	24	0.912897166473012889
2507	22	24	0.90695394061065171
2508	23	24	0.92024686801957678
2510	26	24	0.854342809325723263
2511	27	24	0.922915530609001444
2512	28	24	0.886988723715640859
2514	30	24	0.916457092561905218
2515	31	24	0.895702438560596503
2516	32	24	0.921945642232067208
2518	34	24	0.909389470875141548
2519	35	24	0.911511145449959703
2520	36	24	0.923234797365093174
2521	37	24	0.912622486284980217
2523	39	24	0.909314700663969133
2524	40	24	0.921965412701313047
2525	56	24	0.898914942812084061
2527	41	24	0.931198944083098779
2528	42	24	0.910005194428385233
2529	43	24	0.903094346293586869
2531	45	24	0.912373772468869526
2532	46	24	0.947247682200073049
2533	47	24	0.924327052469666399
2534	48	24	0.903925638742997806
2536	50	24	0.899786468249918814
2537	51	24	0.876363654336480558
2538	52	24	0.925670135867932675
2540	54	24	0.925123321698206769
2541	55	24	0.900508554672460937
2542	58	24	0.912897166473012889
2544	60	24	0.929734244928752784
5892	116	89	0.906530656402814716
5893	117	89	0.89452233908805201
5894	118	89	0.926231526104182912
5895	119	89	0.950653396467328049
5896	120	89	0.888167590989102029
5897	121	89	0.913501416056474946
5898	122	89	0.870472034270249551
5899	123	89	0.924943922172910327
5900	124	89	0.961941944501766621
5901	125	89	0.937363707034462923
5902	126	89	0.905127850490293095
5903	127	89	0.956174887747823221
5904	128	89	0.913114765353276847
5905	129	89	0.929379230536454215
5906	130	89	0.922166864690692867
5907	131	89	0.899786468249918814
5908	132	89	0.91552902457408003
5909	133	89	0.926969095409759025
5910	134	89	0.928874877299187718
5911	135	89	0.938603440673391964
5912	136	89	0.93862216899900841
5913	137	89	0.915712487860439905
5914	138	89	0.856459048851326288
5915	139	89	0.90002889538181885
5916	140	89	0.906988969300943082
5917	142	89	0.914923212382082851
5918	143	89	0.910777363194008149
5919	144	89	0.899296224554140822
5920	145	89	0.814689121912731018
5921	109	90	0.827574346860105448
5924	112	90	0.879603962180148913
5928	115	90	0.884675259373303602
5933	120	90	0.873513495843270871
5937	124	90	0.893201278722298486
5941	128	90	0.886146663961318692
5946	133	90	0.874481780624536076
5950	137	90	0.911169111601496939
5954	142	90	0.898887720219741504
5959	110	91	0.921853121576263423
2592	108	24	0.901854911561003725
2593	1	25	0.85718922307935852
2595	3	25	0.909387968260287338
2596	4	25	0.90020364464261371
2597	5	25	0.910196742604919673
2599	7	25	0.925679430905282041
2600	8	25	0.898622432730910137
2601	9	25	0.946629409920998421
2602	10	25	0.923440958941217027
2604	25	25	0.868780252730211311
2605	12	25	0.933106677775316529
2606	13	25	0.726754555738602925
2608	15	25	0.649584480574977086
2609	16	25	0.913858333491328945
2610	17	25	0.909594847997834743
2612	19	25	0.93520495110261781
2613	20	25	0.814750664210036279
2614	21	25	0.916703394863332299
2615	22	25	0.91770085327251294
2617	24	25	0.881993930272094051
2618	26	25	0.882992046052019752
2619	27	25	0.923646988916149825
2621	29	25	0.932748508261553089
2622	30	25	0.918822903206961028
2623	31	25	0.914115018284741732
2625	33	25	0.881018851837232497
2626	34	25	0.926092448253057698
2627	35	25	0.919996708731409929
2628	36	25	0.917287656600046408
2630	38	25	0.828310558596476065
2631	39	25	0.925152543138413774
2632	40	25	0.928300334257336046
2634	57	25	0.894971386870207164
2635	41	25	0.938841744051535532
2636	42	25	0.918251180312408266
2638	44	25	0.91552902457408003
2639	45	25	0.916068096946923038
2640	46	25	0.936474639256985597
2641	47	25	0.920583891807166155
2643	49	25	0.90390542438783561
2644	50	25	0.91552902457408003
2645	51	25	0.877512728800741826
2647	53	25	0.843756810992571271
2648	54	25	0.915768011305084562
2649	55	25	0.917602386460358521
2651	59	25	0.91770085327251294
2652	60	25	0.934386989142546587
2653	61	25	0.934094258864007876
2654	62	25	0.726754555738602925
2656	64	25	0.938302585379396037
2657	65	25	0.914744394988707188
2658	66	25	0.940339847734031564
2660	68	25	0.920358847915993983
2661	69	25	0.914331447857457458
2662	70	25	0.873186995328422255
2664	71	25	0.920914834113125691
2665	72	25	0.912469107051464001
2666	73	25	0.916034684404815058
2667	74	25	0.91269832899098724
2669	76	25	0.88751486981263239
2670	77	25	0.762870392213007453
2671	78	25	0.894103269391389066
2673	80	25	0.918972461561584075
2674	81	25	0.912992852412286005
2675	82	25	0.915198445239819081
2677	84	25	0.920542634047523789
2678	85	25	0.94140878407503803
2679	86	25	0.893927434322832615
2680	87	25	0.886091988727101265
2682	89	25	0.935112711200103419
2683	90	25	0.944294716385157273
2684	91	25	0.944094486650823739
2686	93	25	0.925744887274727479
2687	94	25	0.929053695904711874
2688	95	25	0.919780426448104427
2690	97	25	0.904189980963899687
2691	98	25	0.707390291938094773
2692	99	25	0.931716357303447817
2693	101	25	0.905710028148247415
2695	103	25	0.930956051906917104
2696	104	25	0.931134280705054218
2697	105	25	0.904759459966090196
2699	107	25	0.928146085188559233
2700	108	25	0.906109856495086574
2701	1	26	0.906806332511513435
2703	3	26	0.899311177176846832
2704	4	26	0.928674269836261002
2705	5	26	0.912128528760177026
2706	6	26	0.934150165617753214
2708	8	26	0.937336530295114878
2709	9	26	0.9446928498671745
2710	10	26	0.916285873223671832
2712	25	26	0.900525890536484241
2713	12	26	0.950301930388360083
2714	13	26	0.708957825649644935
2716	15	26	0.597791176822673576
2717	16	26	0.949423193529478016
2718	17	26	0.906008519951596702
2719	18	26	0.907380451784206343
2721	20	26	0.809489651456070658
2722	21	26	0.940198811694571313
2723	22	26	0.936426729475065223
2725	24	26	0.878767281791638544
2726	26	26	0.887377213845555679
2727	27	26	0.926817696169594751
2729	29	26	0.9085281082377753
5963	114	91	0.919155762507059437
5967	117	91	0.924087105363852412
5972	122	91	0.877540582200290631
5976	126	91	0.915296660911746551
5980	130	91	0.946518886474544852
5985	135	91	0.956530848615225526
5989	139	91	0.924257630735163871
5993	144	91	0.915166520974626918
5998	112	92	0.876709965500126587
6002	115	92	0.850183219109125532
6006	119	92	0.856893774816344989
6011	124	92	0.866582027331018967
6015	128	92	0.876990233265756536
6019	132	92	0.843756810992571271
6024	137	92	0.877388330350778234
6028	142	92	0.865520419405843566
6032	109	93	0.910012906984908554
6037	114	93	0.920148487530064174
6041	117	93	0.922201141467614227
6045	121	93	0.928115138435002929
6050	126	93	0.91877140296305615
6054	130	93	0.927388219021938687
6058	134	93	0.9329537338725441
6060	136	93	0.934242708733683203
6061	137	93	0.942297715301143812
6062	138	93	0.899858441638160422
6063	139	93	0.946899492014448119
6064	140	93	0.919817091707844314
6065	142	93	0.922186848061048559
6066	143	93	0.918026459299414843
6067	144	93	0.894662171518043503
6068	145	93	0.798297146869015428
6069	109	94	0.876696697674085645
6070	110	94	0.910517178882412126
6071	111	94	0.911934849121901037
6072	112	94	0.917687559133530617
6073	113	94	0.921258722493601745
6074	114	94	0.881548535763655217
6075	141	94	0.867772046034917754
2777	76	26	0.923987738226999755
2778	77	26	0.804787869609066453
2780	79	26	0.927167854063999375
2781	80	26	0.958004897350698159
2782	81	26	0.945302206206445561
2784	83	26	0.9245080010255462
2785	84	26	0.926351675379952777
2786	85	26	0.946870541033321689
2787	86	26	0.922667449992938593
2789	88	26	0.568885668531981858
2790	89	26	0.945940412583193502
2791	90	26	0.902081879218647686
2793	92	26	0.92405920935482444
2794	93	26	0.93599041641943137
2795	94	26	0.918078904084837277
2797	96	26	0.924826095908646839
2798	97	26	0.925023121823451921
2799	98	26	0.701965598178268979
2800	99	26	0.948321926575130036
2802	102	26	0.914906297836776128
2803	103	26	0.932595595842979463
2804	104	26	0.922758067249362712
2806	106	26	0.918020940630308147
2807	107	26	0.937633237287314736
2808	108	26	0.910940789910589688
2810	2	27	0.957671351780109537
2811	3	27	0.910300123464855448
2812	4	27	0.938052734535310018
2813	5	27	0.913426810214542084
2815	7	27	0.94039833931062955
2816	8	27	0.935568484097967334
2817	9	27	0.947298620918133216
2819	11	27	0.951276286691394302
2820	25	27	0.919254712891897863
2821	12	27	0.957850175659397785
2823	14	27	0.694374313888852401
2824	15	27	0.618447670529431281
2825	16	27	0.948771596485485036
2826	17	27	0.914996874222366197
2828	19	27	0.957230923309536519
2829	20	27	0.856557122712286678
2830	21	27	0.940039259981393149
2832	23	27	0.946736011565364355
2833	24	27	0.905671188249377646
2834	26	27	0.892089025385379819
2836	28	27	0.904276446845747262
2837	29	27	0.923967350234114582
2838	30	27	0.938036704542258071
2839	31	27	0.924244266895603683
2841	33	27	0.911631203569110538
2842	34	27	0.940121408501151667
2843	35	27	0.936713490110520852
2845	37	27	0.944190599087781579
2846	38	27	0.85439687777250628
2847	39	27	0.910320324978937445
2849	56	27	0.931886541967529292
2850	57	27	0.910203094588581618
2851	41	27	0.95952043464140957
2852	42	27	0.929019645179094855
2854	44	27	0.928874877299187718
2855	45	27	0.949389791512843084
2856	46	27	0.960713648802101083
2858	48	27	0.898886706304815708
2859	49	27	0.894106391378553744
2860	50	27	0.928874877299187718
2862	52	27	0.952967449243702691
2863	53	27	0.867781331450431459
2864	54	27	0.9329537338725441
2865	55	27	0.917252865857661637
2867	59	27	0.93657769972151661
2868	60	27	0.943759593065166213
2869	61	27	0.941924510983156549
2871	63	27	0.694374313888852401
2872	64	27	0.933381128441186481
2873	65	27	0.940084571216760256
2875	67	27	0.330066560751858418
2876	68	27	0.953551179352335243
2877	69	27	0.933514581205687533
2878	70	27	0.934480871530870005
2880	71	27	0.927633211918155731
2881	72	27	0.923032220932677783
2882	73	27	0.944787328753064481
2884	75	27	0.903220314846734484
2885	76	27	0.916952453087432451
2886	77	27	0.758099416652758484
2888	79	27	0.926128329054446087
2889	80	27	0.950912459946551158
2890	81	27	0.931350063904452075
2891	82	27	0.952352315576048269
2893	84	27	0.925368218925651909
2894	85	27	0.947528923624844421
2895	86	27	0.928660625615548518
2897	88	27	0.630272269756082637
2898	89	27	0.951276286691394302
2899	90	27	0.92513594573231106
2901	92	27	0.928960112238849223
2902	93	27	0.935825801390813283
2903	94	27	0.933937331987874098
2904	95	27	0.926087199126827132
2906	97	27	0.926998302542753394
2907	98	27	0.706269591252034146
2908	99	27	0.950664862288958634
2910	102	27	0.929848920692223913
2911	103	27	0.938890736665180525
2912	104	27	0.933402200657832748
2914	106	27	0.930949378289354867
6076	115	94	0.923948268359740421
6077	116	94	0.897608912722355656
6078	117	94	0.896625596354496901
6079	118	94	0.905432087907845018
6080	119	94	0.93548090681892937
6081	120	94	0.887832776231210374
6082	121	94	0.914970609271206547
6083	122	94	0.868602496444093375
6084	123	94	0.930415067430594211
6085	124	94	0.946595494762151324
6086	125	94	0.93515176176286019
6087	126	94	0.881969134370150676
6088	127	94	0.951251844938249991
6089	128	94	0.902897388037072757
6090	129	94	0.919801785603230115
6091	130	94	0.912988002037008584
6092	131	94	0.900508554672460937
6093	132	94	0.917602386460358521
6094	133	94	0.912929240179401247
6095	134	94	0.917252865857661637
6096	135	94	0.926155894404155799
6097	136	94	0.926367379524576928
6098	137	94	0.913610886779931075
6099	138	94	0.860186814780136699
6100	139	94	0.895779756604535793
6101	140	94	0.877222703980755414
6102	142	94	0.902929931902168192
6103	143	94	0.881765472568403652
6104	144	94	0.882058429737095806
6105	145	94	0.777606303629889584
6106	109	95	0.888276081252681649
6109	112	95	0.923861999579194126
6113	115	95	0.935449301005771394
6118	120	95	0.91248246947318834
6122	124	95	0.949436453395991142
6126	128	95	0.934867196674697976
6131	133	95	0.940198811694571313
6135	137	95	0.933547948761251578
6139	142	95	0.924076842939114962
2962	44	28	0.938603440673391964
2963	45	28	0.958728090053237447
2965	47	28	0.939453906438036945
2966	48	28	0.928026963746095834
2967	49	28	0.900717914719154855
2969	51	28	0.90790339795463193
2970	52	28	0.956530848615225526
2971	53	28	0.875877739311327175
2972	54	28	0.941240248974451355
2974	58	28	0.948614270616460531
2975	59	28	0.939335386639676306
2976	60	28	0.952704075259389493
2978	62	28	0.746999791049337003
2979	63	28	0.746999791049337003
2980	64	28	0.958019991531298243
2982	66	28	0.948222202802761482
2983	67	28	0.312580363404034334
2984	68	28	0.960652754742224446
2985	69	28	0.94902259356234886
2987	100	28	0.593303219556463479
2988	71	28	0.948693062846081125
2989	72	28	0.936159680435255326
2991	74	28	0.949424890492292728
2992	75	28	0.90790339795463193
2993	76	28	0.934521799584648427
2995	78	28	0.893901730468965594
2996	79	28	0.939160448447869389
2997	80	28	0.951681125922901439
2998	81	28	0.935035799301843218
3000	83	28	0.94146167515240442
3001	84	28	0.938070084322956022
3002	85	28	0.959519261712777793
3004	87	28	0.920536632505296715
3005	88	28	0.61599982095488004
3006	89	28	0.961286423161939574
3008	91	28	0.95447925901650843
3009	92	28	0.949642485468259245
3010	93	28	0.953218007029906222
3011	94	28	0.937762314876013248
3013	96	28	0.934527698703356169
3014	97	28	0.935932763381405297
3015	98	28	0.705802008752048571
3017	101	28	0.942391134412109088
3018	102	28	0.943845428683899867
3019	103	28	0.950141073540549663
3021	105	28	0.921846662642089809
3022	106	28	0.948741122489710098
3023	107	28	0.955460070498099112
3024	108	28	0.939119033901978484
3026	2	29	0.957610590706411746
3027	3	29	0.924345787934376162
3028	4	29	0.933905081828066308
3030	6	29	0.93627495379369885
3031	7	29	0.944987431748070317
3032	8	29	0.929001933633658239
3034	10	29	0.931382293087177349
3035	11	29	0.94723414265773187
3036	25	29	0.908964243775743919
3037	12	29	0.947202575693369075
3039	14	29	0.721243826548889633
3040	15	29	0.623212774946611203
3041	16	29	0.947119652146070634
3043	18	29	0.93145270971793892
3044	19	29	0.953047356744352259
3045	20	29	0.808808308920633601
3047	22	29	0.938654278098004835
3048	23	29	0.946605644684996639
3049	24	29	0.896226228154942794
3050	26	29	0.875732693405276486
3052	28	29	0.921595014409734459
3053	29	29	0.932175130819387521
3054	30	29	0.93282174069176127
3056	32	29	0.949768502396012182
3057	33	29	0.929413091704374361
3058	34	29	0.934034741892929787
3060	36	29	0.947233139205684083
3061	37	29	0.938649458566015782
3062	38	29	0.860000721475761121
3063	39	29	0.920078748079805941
3065	56	29	0.932570680793079476
3066	57	29	0.910970082511981638
3067	41	29	0.951025856019325211
3069	43	29	0.932803695396459354
3070	44	29	0.93862216899900841
3071	45	29	0.938630924359796559
3073	47	29	0.938309958240439723
3074	48	29	0.923280811750907371
3075	49	29	0.90912742599760088
3076	50	29	0.93862216899900841
3078	52	29	0.949272077195427055
3079	53	29	0.85324407623725107
3080	54	29	0.934242708733683203
3082	58	29	0.94183692345216985
3083	59	29	0.938654278098004835
3084	60	29	0.95143185138252151
3086	62	29	0.721243826548889633
3087	63	29	0.721243826548889633
3088	64	29	0.938378615179781606
3089	65	29	0.944177856622935519
3091	67	29	0.314948664771922127
3092	68	29	0.9377703356641095
3093	69	29	0.92813895679310543
3095	100	29	0.60348963361857777
3096	71	29	0.935304559161244553
3097	72	29	0.929503303635239697
3099	74	29	0.944352816097091874
6144	110	96	0.918460840114138199
6148	114	96	0.885695664391331516
6152	117	96	0.914730811777864306
6157	122	96	0.870993065955928181
6161	126	96	0.889861119103968479
6165	130	96	0.930549193173231148
6170	135	96	0.939335386639676306
6174	139	96	0.906913504493618183
6178	144	96	0.89997586310279909
6183	112	97	0.926743954437246997
6187	115	97	0.949885331759008134
6191	119	97	0.954849719056288238
6196	124	97	0.953733782858876111
6200	128	97	0.932525570454702968
6204	132	97	0.934386989142546587
6209	137	97	0.940364302611616631
6213	142	97	0.938925911825931103
6217	109	98	0.892390827244765039
6222	114	98	0.928986545213471793
6226	117	98	0.922814396149448157
6230	121	98	0.919571275245681052
6235	126	98	0.923116978736305382
6239	130	98	0.944340610829472626
6243	134	98	0.941924510983156549
6245	136	98	0.952968955833820797
6246	137	98	0.939788153083212952
6247	138	98	0.88952181437034672
6248	139	98	0.927255927498585208
6249	140	98	0.923056304986976439
6250	142	98	0.936941565990746073
6251	143	98	0.933033749874869978
6252	144	98	0.905397019409309833
6253	145	98	0.813477741313235692
6254	109	99	0.67184316256152754
6255	110	99	0.689615602769276914
6256	111	99	0.705287097584551659
6257	112	99	0.763772139740231504
6258	113	99	0.723860646538343144
6259	114	99	0.652884736733833515
3147	14	30	0.704175753963072193
3148	15	30	0.622440664869323368
3150	17	30	0.892612499276003168
3151	18	30	0.913650220877293417
3152	19	30	0.956083471060147683
3154	21	30	0.933547948761251578
3155	22	30	0.929272539454571667
3156	23	30	0.954772948339350891
3157	24	30	0.903111846069022617
3159	27	30	0.938707446676065205
3160	28	30	0.901439264592107437
3161	29	30	0.920665182357276457
3163	31	30	0.914459411930164778
3164	32	30	0.956268172245640979
3165	33	30	0.918168305590442824
3167	35	30	0.937776331786204342
3168	36	30	0.931486744099540132
3169	37	30	0.927016350214034501
3170	38	30	0.856679140281380702
3172	40	30	0.939489501963392981
3173	56	30	0.918017328761889462
3174	57	30	0.917845906803025136
3176	42	30	0.921162739706352762
3177	43	30	0.924134778716598992
3178	44	30	0.915712487860439905
3180	46	30	0.952202168827003148
3181	47	30	0.937048109534934448
3182	48	30	0.917411198071740652
3183	49	30	0.887545798477929804
3185	51	30	0.911169111601496939
3186	52	30	0.948153836831835184
3187	53	30	0.877388330350778234
3189	55	30	0.913610886779931075
3190	58	30	0.933547948761251578
3191	59	30	0.929272539454571667
3193	61	30	0.939788153083212952
3194	62	30	0.704175753963072193
3195	63	30	0.704175753963072193
3196	64	30	0.938036186933521976
3198	66	30	0.928186066895046125
3199	67	30	0.329533446459295054
3200	68	30	0.955951031658425765
3202	70	30	0.935457651005089486
3203	100	30	0.588838601367563719
3204	71	30	0.927462057950836249
3206	73	30	0.951889027589818304
3207	74	30	0.953207873221440627
3208	75	30	0.911169111601496939
3209	76	30	0.923903876330697815
3211	78	30	0.894616782688624657
3212	79	30	0.918662276976646375
3213	80	30	0.931528287455558268
3215	82	30	0.95985760960121802
3216	83	30	0.921162739706352762
3217	84	30	0.924134778716598992
3219	86	30	0.937047327838703148
3220	87	30	0.927439433541372704
3221	88	30	0.601002601595177155
3222	89	30	0.942134742493783151
3224	91	30	0.938330848787311211
3225	92	30	0.934685950411004773
3226	93	30	0.951885730876299796
3228	95	30	0.911873775093041128
3229	96	30	0.928682997687788059
3230	97	30	0.92110096103367034
3232	99	30	0.94991434985174672
3233	101	30	0.937322415820532773
3234	102	30	0.947499938941413378
3235	103	30	0.952106677635138898
3237	105	30	0.922741528374904196
3238	106	30	0.941007448827020587
3239	107	30	0.958581893061038581
3241	1	31	0.866495594509266609
3242	2	31	0.925566741001378701
3243	3	31	0.874020447029965286
3245	5	31	0.883582743383562241
3246	6	31	0.895987711380506591
3247	7	31	0.912955797366059141
3248	8	31	0.88838420562482634
3250	10	31	0.911560668194541845
3251	11	31	0.90367917240564366
3252	25	31	0.87311421355157437
3254	13	31	0.659426309055660576
3255	14	31	0.659426309055660576
3256	15	31	0.581049187744024587
3258	17	31	0.846572279948927475
3259	18	31	0.862752491239343056
3260	19	31	0.919365407656944189
3261	20	31	0.839503371602559945
3263	22	31	0.892065675917024459
3264	23	31	0.902080301966139642
3265	24	31	0.885567122966709031
3267	27	31	0.883615405648055963
3268	28	31	0.852261692236589652
3269	29	31	0.887962789680262543
3271	31	31	0.863857578989896457
3272	32	31	0.916101617099210119
3273	33	31	0.88389061463877916
3274	34	31	0.887552294332834335
3276	36	31	0.877875105361854202
3277	37	31	0.884175848032277556
3278	38	31	0.809297003710545138
3280	40	31	0.890355522884937911
3281	56	31	0.867287516596503161
3282	57	31	0.869377993286758688
3284	42	31	0.874678130952123656
6260	141	99	0.611439431381107457
6261	115	99	0.713612906041631412
6262	116	99	0.700341353535226196
6263	117	99	0.701623942111829102
6264	118	99	0.696599635242774462
6265	119	99	0.726473026728653437
6266	120	99	0.673834134507338756
6267	121	99	0.76386952553925036
6268	122	99	0.617324715947316083
6269	123	99	0.71496856416382204
6270	124	99	0.78634729295858663
6271	125	99	0.733253032863131482
6272	126	99	0.650415436127303348
6273	127	99	0.801601929667592361
6274	128	99	0.698641488693816926
6275	129	99	0.698654336195708381
6276	130	99	0.724546140384341064
6277	131	99	0.683065969288894403
6278	132	99	0.726754555738602925
6279	133	99	0.708957825649644935
6280	134	99	0.694374313888852401
6281	135	99	0.746999791049337003
6282	136	99	0.721243826548889633
6283	137	99	0.704175753963072193
6284	138	99	0.659426309055660576
6285	139	99	0.713412490679786737
6286	140	99	0.644150839371809392
6287	142	99	0.706142327803867653
6288	143	99	0.639614053150460049
6289	144	99	0.655094196237066217
6290	145	99	0.514577482971655287
6291	109	100	0.67184316256152754
6294	112	100	0.763772139740231504
6298	115	100	0.713612906041631412
6303	120	100	0.673834134507338756
6307	124	100	0.78634729295858663
6311	128	100	0.698641488693816926
6316	133	100	0.708957825649644935
6320	137	100	0.704175753963072193
3332	91	31	0.896431251692881292
3333	92	31	0.890425509394735637
3335	94	31	0.892597769208269387
3336	95	31	0.861771371283049148
3337	96	31	0.880950979347581042
3339	98	31	0.612328863978473525
3340	99	31	0.912794411093067248
3341	101	31	0.884526642258558926
3342	102	31	0.912750849819183196
3344	104	31	0.895638721051446041
3345	105	31	0.889333303860027735
3346	106	31	0.904222688247744766
3348	108	31	0.907853795783990392
3349	1	32	0.902808591048178344
3350	2	32	0.947204161881561535
3352	4	32	0.937274214583231458
3353	5	32	0.940148429603184566
3354	6	32	0.937837692170045645
3355	7	32	0.939202703145183726
3357	9	32	0.947040159900206624
3358	10	32	0.939247391094965245
3359	11	32	0.925760188784706783
3361	12	32	0.932111307269939071
3362	13	32	0.713412490679786737
3363	14	32	0.713412490679786737
3365	16	32	0.944816815673378718
3366	17	32	0.882248212041362612
3367	18	32	0.913110518261192494
3368	19	32	0.934806038410395557
3370	21	32	0.913845031778470096
3371	22	32	0.906913504493618183
3372	23	32	0.93359476370881711
3374	26	32	0.876297264267901777
3375	27	32	0.922219338479281836
3376	28	32	0.892372444615265104
3378	30	32	0.908875230612464002
3379	31	32	0.891275165747043463
3380	32	32	0.940040937627247275
3381	33	32	0.899402496609782443
3383	35	32	0.922204634670813372
3384	36	32	0.912288404977372958
3385	37	32	0.904395040660258775
3387	39	32	0.939362342670450601
3388	40	32	0.919896846461911055
3389	56	32	0.903558281893491411
3391	41	32	0.935178353122047223
3392	42	32	0.911590909856584086
3393	43	32	0.911040460721254997
3394	44	32	0.90002889538181885
3396	46	32	0.930968906107796146
3397	47	32	0.913494204177448532
3398	48	32	0.915398019971592647
3400	50	32	0.90002889538181885
3401	51	32	0.87801045393505639
3402	52	32	0.924257630735163871
3404	54	32	0.946899492014448119
3405	55	32	0.895779756604535793
3406	58	32	0.913845031778470096
3407	59	32	0.906913504493618183
3409	61	32	0.927255927498585208
3410	62	32	0.713412490679786737
3411	63	32	0.713412490679786737
3413	65	32	0.930202166905464201
3414	66	32	0.924193647633491988
3415	67	32	0.341404173129312483
3418	70	32	0.921258161237903384
3419	100	32	0.600632199147544177
3420	71	32	0.916163130081197097
3421	72	32	0.901128523642741319
3422	73	32	0.931924738429334654
3423	74	32	0.927711613828423487
3424	75	32	0.87801045393505639
3426	77	32	0.723101638210625342
3427	78	32	0.876017356385370372
3428	79	32	0.900151930919592891
3430	81	32	0.889045438226952589
3431	82	32	0.944754016562632248
3432	83	32	0.911590909856584086
3433	84	32	0.911040460721254997
3435	86	32	0.924995523317337698
3436	87	32	0.907524273594554454
3437	88	32	0.633451983458786394
3439	90	32	0.92655950142687038
3440	91	32	0.933602031959887446
3441	92	32	0.928745816869217866
3443	94	32	0.931420147541666577
3444	95	32	0.905485409354789605
3445	96	32	0.901473227206150529
3446	97	32	0.90296327195363546
3448	99	32	0.936076484298149603
3449	101	32	0.913828711818023831
3450	102	32	0.934702331639408524
3452	104	32	0.927524541508586209
3453	105	32	0.905820208051611564
3454	106	32	0.933344724396231729
3456	108	32	0.932073777305939988
3457	1	33	0.898554024651458061
3458	2	33	0.926921437926302549
3459	3	33	0.880896652630004717
3461	5	33	0.919818083355097293
3462	6	33	0.904303097737268913
3463	7	33	0.91095696525300518
3465	9	33	0.920892100860901675
3466	10	33	0.897120190320478295
3467	11	33	0.924316861629816633
3469	12	33	0.915441149118427333
6324	142	100	0.706142327803867653
6329	110	101	0.915610395826310985
6333	114	101	0.895832906813873064
6337	117	101	0.92102964382477448
6342	122	101	0.862112384314073776
6346	126	101	0.893654389719933384
6350	130	101	0.949295097181098724
6355	135	101	0.958019991531298243
6359	139	101	0.941440108848962787
6363	144	101	0.88604936433847914
6368	112	102	0.932003335937972022
6372	115	102	0.942438995635584309
6376	119	102	0.953037737817841069
6381	124	102	0.95012501934889948
6385	128	102	0.93084429917500866
6389	132	102	0.914744394988707188
6394	137	102	0.955946937463243329
6398	142	102	0.936545200905017583
6402	109	103	0.900225239984113634
6407	114	103	0.891831094672988045
6411	117	103	0.909309819335460179
6415	121	103	0.95004008173018939
6420	126	103	0.891789968015734957
6424	130	103	0.944689361994240362
6428	134	103	0.935058054484407042
6430	136	103	0.935049261123141684
6431	137	103	0.928186066895046125
6432	138	103	0.886844390584986098
6433	139	103	0.924193647633491988
6434	140	103	0.900940927604323094
6435	142	103	0.934005116671867808
6436	143	103	0.888054299652941581
6437	144	103	0.871775146241655419
6438	145	103	0.758534326490614585
6439	109	104	0.389047883550474038
6440	110	104	0.326762279636230446
6441	111	104	0.32781541001962472
6442	112	104	0.379118965562707078
6443	113	104	0.305052225555330236
3517	61	33	0.923056304986976439
3518	62	33	0.644150839371809392
3520	64	33	0.906401770940225004
3521	65	33	0.901796979725942416
3522	66	33	0.900940927604323094
3524	68	33	0.915599069283068889
3525	69	33	0.896485518111920232
3526	70	33	0.91929909563776413
3527	100	33	0.612773764862402315
3529	72	33	0.870480503125355076
3530	73	33	0.902142139540749843
3531	74	33	0.902695399271121302
3533	76	33	0.896179336299349316
3534	77	33	0.692889451663926237
3535	78	33	0.848033182564228882
3537	80	33	0.896404308117840776
3538	81	33	0.871625922653514795
3539	82	33	0.915312673373433361
3540	83	33	0.906288901531193236
3542	85	33	0.909553852082344294
3543	86	33	0.902891370822018535
3544	87	33	0.871261381070979057
3546	89	33	0.924316861629816633
3547	90	33	0.910899444130140012
3548	91	33	0.90998829018795413
3550	93	33	0.895305298770844749
3551	94	33	0.913956312576702068
3552	95	33	0.891588397225790308
3553	96	33	0.882492052824725315
3555	98	33	0.698772750550469945
3556	99	33	0.927843078033279145
3557	101	33	0.881646490403522165
3559	103	33	0.904440457056256308
3560	104	33	0.892652503985345902
3561	105	33	0.860973261042185301
3563	107	33	0.918253108813325447
3564	108	33	0.903267868371120497
3565	1	34	0.914519540933420028
3566	2	34	0.953962499189721869
3568	4	34	0.939412885143620535
3569	5	34	0.919837806136565961
3570	6	34	0.932805339815957257
3572	8	34	0.93494685523126142
3573	9	34	0.948439399803872707
3574	10	34	0.928579932234474992
3576	25	34	0.899046978906878791
3577	12	34	0.953136806389370816
3578	13	34	0.706142327803867653
3579	14	34	0.706142327803867653
3581	16	34	0.94484247015297318
3582	17	34	0.902305628235628765
3583	18	34	0.907287904221882324
3585	20	34	0.821293490878190924
3586	21	34	0.924076842939114962
3587	22	34	0.91777003836792681
3589	24	34	0.896508171938344423
3590	26	34	0.903306364175439191
3591	27	34	0.929758898402648137
3592	28	34	0.888549406262613473
3594	30	34	0.921737175999404079
3595	31	34	0.907010112035819716
3596	32	34	0.942103001466633283
3598	34	34	0.942364117292092018
3599	35	34	0.930825530687004354
3600	36	34	0.918704764972013366
3602	38	34	0.839072054118973121
3603	39	34	0.9196543237555449
3604	40	34	0.92210896067036574
3605	56	34	0.930343809994716331
3607	41	34	0.961653043700630539
3608	42	34	0.917304219964533374
3609	43	34	0.906875077251221073
3611	45	34	0.95065679082549337
3612	46	34	0.955563071948735909
3613	47	34	0.921048348176850995
3615	49	34	0.875566482548059355
3616	50	34	0.914923212382082851
3617	51	34	0.898887720219741504
3618	52	34	0.936149988327251936
3620	54	34	0.922186848061048559
3621	55	34	0.902929931902168192
3622	58	34	0.924076842939114962
3624	60	34	0.938925911825931103
3625	61	34	0.936941565990746073
3626	62	34	0.706142327803867653
3628	64	34	0.934892968193256402
3629	65	34	0.936545200905017583
3630	66	34	0.934005116671867808
3631	67	34	0.394301192786889632
3633	69	34	0.937857670933915255
3634	70	34	0.92992887903146404
3635	100	34	0.577315766036416766
3637	72	34	0.906380291688091866
3638	73	34	0.936120535587894875
3639	74	34	0.936444242030588625
3641	76	34	0.917749680947643087
3642	77	34	0.739632274860828054
3643	78	34	0.866731342858011899
3644	79	34	0.912853069108099713
3646	81	34	0.917880768478626763
3647	82	34	0.94633909896821311
3648	83	34	0.917304219964533374
3650	85	34	0.949510126653808406
3651	86	34	0.932446013362895565
3652	87	34	0.904803341415109763
3654	89	34	0.946518175601774536
6444	114	104	0.403884659217082886
6445	141	104	0.39777430861112939
6446	115	104	0.319152160135351859
6447	116	104	0.386940032399277323
6448	117	104	0.29096054002385302
6449	118	104	0.298992018550855887
6450	119	104	0.308981706127836764
6451	120	104	0.3385991566370673
6452	121	104	0.283986811424549179
6453	122	104	0.396202427874883134
6454	123	104	0.316868024115745717
6455	124	104	0.320180331393811357
6456	125	104	0.352893366452374957
6457	126	104	0.402339154013702238
6458	127	104	0.311275333291257061
6459	128	104	0.312478883433532084
6460	129	104	0.334903205351026856
6461	130	104	0.322368605636747019
6462	131	104	0.29878782213857108
6463	132	104	0.311804028521681487
6464	133	104	0.31110036735105645
6465	134	104	0.330066560751858418
6466	135	104	0.312580363404034334
6467	136	104	0.314948664771922127
6468	137	104	0.329533446459295054
6469	138	104	0.290211332572427816
6470	139	104	0.341404173129312483
6471	140	104	0.369782874934283301
6472	142	104	0.394301192786889632
6473	143	104	0.392133385965287407
6474	144	104	0.324590414840252917
6475	145	104	0.436155843055038128
6476	109	105	0.880877182714301932
6479	112	105	0.931860885839457143
6483	115	105	0.938477641119052075
6488	120	105	0.933086606458857104
6492	124	105	0.934234967369159675
6496	128	105	0.935954924425707713
6501	133	105	0.93355331955515608
3702	30	35	0.910196519062805298
3703	31	35	0.873536779536144281
3705	33	35	0.90509938749980845
3706	34	35	0.890243332617745686
3707	35	35	0.893759096283780918
3709	37	35	0.899116529519418672
3710	38	35	0.837933224794276676
3711	39	35	0.883834402440675126
3712	40	35	0.912489728425637914
3714	57	35	0.881621330053642183
3715	41	35	0.923546511552542304
3716	42	35	0.909872699289001607
3718	44	35	0.910777363194008149
3719	45	35	0.908985742689614296
3720	46	35	0.929985915823792975
3722	48	35	0.903761116578462032
3723	49	35	0.887991824432182275
3724	50	35	0.910777363194008149
3725	51	35	0.85039459805903439
3727	53	35	0.863913253391456193
3728	54	35	0.918026459299414843
3729	55	35	0.881765472568403652
3731	59	35	0.890500338440874839
3732	60	35	0.935309421381823713
3733	61	35	0.933033749874869978
3735	63	35	0.639614053150460049
3736	64	35	0.890234467708349464
3737	65	35	0.902569196171593369
3738	66	35	0.888054299652941581
3740	68	35	0.91590116837279334
3741	69	35	0.893952944877387745
3742	70	35	0.940725805042702201
3744	71	35	0.893411055965137701
3745	72	35	0.871181946694239651
3746	73	35	0.900984139912759163
3748	75	35	0.85039459805903439
3749	76	35	0.922178414363085008
3750	77	35	0.709078166531612708
3751	78	35	0.842745634937832944
3753	80	35	0.897186728049364057
3754	81	35	0.871101239303994412
3755	82	35	0.925147500634938114
3757	84	35	0.880901554273187837
3758	85	35	0.899592772185802803
3759	86	35	0.905592792171141303
3761	88	35	0.616310962238475701
3762	89	35	0.934371761689467228
3763	90	35	0.905375465749235664
3764	91	35	0.903143389420905995
3766	93	35	0.896390387621789464
3767	94	35	0.914685750496258554
3768	95	35	0.886145193039391987
3770	97	35	0.916651848570230743
3771	98	35	0.703760894555971683
3772	99	35	0.927031129106096197
3774	102	35	0.906643623598806236
3775	103	35	0.919262485811564112
3776	104	35	0.896313361573997103
3777	105	35	0.862775203058757989
3779	107	35	0.926237421166384411
3780	108	35	0.904457673127207928
3781	1	36	0.864049632808612356
3783	3	36	0.87914692953666651
3784	4	36	0.906476092803905176
3785	5	36	0.881995280719667485
3787	7	36	0.901472025431970692
3788	8	36	0.910649902191298488
3789	9	36	0.902954503267981101
3790	10	36	0.896855829663496973
3792	25	36	0.847792903317258983
3793	12	36	0.913182062238942271
3794	13	36	0.655094196237066217
3796	15	36	0.581620556151534962
3797	16	36	0.899608253221221066
3798	17	36	0.853269636668803177
3800	19	36	0.920355110802223098
3801	20	36	0.775074329609514612
3802	21	36	0.906605773884734512
3803	22	36	0.89997586310279909
3805	24	36	0.854982367874433935
3806	26	36	0.845729450122040927
3807	27	36	0.90591789053336691
3809	29	36	0.869818242736421054
3810	30	36	0.890143016250005581
3811	31	36	0.900377386646863065
3813	33	36	0.905811275695118434
3814	34	36	0.887855398586191558
3815	35	36	0.888598701776011635
3816	36	36	0.906130357833696332
3818	38	36	0.815407501854369166
3819	39	36	0.866016534972802621
3820	40	36	0.913692501810181135
3822	57	36	0.860075339181493037
3823	41	36	0.918004478835902971
3824	42	36	0.887079488710968866
3826	44	36	0.899296224554140822
3827	45	36	0.889716803520391397
3828	46	36	0.927299821591595852
3829	47	36	0.887060820665564354
3831	49	36	0.847318585369643551
3832	50	36	0.899296224554140822
3833	51	36	0.869531381458390151
3835	53	36	0.839400932900267738
3836	54	36	0.894662171518043503
3837	55	36	0.882058429737095806
3839	59	36	0.89997586310279909
6505	137	105	0.955951031658425765
6509	142	105	0.958660200303806942
6514	110	106	0.899886928980132117
6518	114	106	0.898079392105851859
6522	117	106	0.910630925079293219
6527	122	106	0.872556961647862894
6531	126	106	0.897614254746414986
6535	130	106	0.942086556743174652
6540	135	106	0.94902259356234886
6544	139	106	0.928390927075359418
6548	144	106	0.893430391908158761
6553	112	107	0.922512472972224162
6557	115	107	0.927228073349393389
6561	119	107	0.927052375695374242
6566	124	107	0.919585658079079216
6570	128	107	0.930442837888176388
6574	132	107	0.873186995328422255
6579	137	107	0.935457651005089486
6583	142	107	0.92992887903146404
6587	109	108	0.582912137184611878
6592	114	108	0.615171210856176764
6596	117	108	0.580616001018678385
6600	121	108	0.556243691989474875
6605	126	108	0.616368052837463321
6609	130	108	0.582630020897949574
6613	134	108	0.586993008154833462
6615	136	108	0.60348963361857777
6616	137	108	0.588838601367563719
6617	138	108	0.576088729953687539
6618	139	108	0.600632199147544177
6619	140	108	0.612773764862402315
6620	142	108	0.577315766036416766
6621	143	108	0.594353852403170735
6622	144	108	0.550245272173471744
6623	145	108	0.596383087245152543
6624	109	109	0.886129786400796204
6625	110	109	0.917343876582009332
6626	111	109	0.928857736532332279
6627	112	109	0.923548082403384041
3887	107	36	0.923559611214652798
3888	108	36	0.886287929936437902
3890	2	37	0.794097868396601791
3891	3	37	0.787369159469053059
3892	4	37	0.803783219942860172
3894	6	37	0.781474082309290718
3895	7	37	0.781529092196215136
3896	8	37	0.789644159388208533
3897	9	37	0.766937824746234953
3899	11	37	0.787060818443350629
3900	25	37	0.810623315077380835
3901	12	37	0.772725745834713762
3903	14	37	0.514577482971655287
3904	15	37	0.555171960611660631
3905	16	37	0.79766912393538103
3907	18	37	0.757894632476806329
3908	19	37	0.761137331427098607
3909	20	37	0.657584465954252684
3910	21	37	0.801370941985565022
3912	23	37	0.772088369276325515
3913	24	37	0.775065052764471907
3914	26	37	0.695433260730370817
3916	28	37	0.754042142596869303
3917	29	37	0.777171464852933314
3918	30	37	0.780646485687926495
3920	32	37	0.782385912301190589
3921	33	37	0.802631850499806121
3922	34	37	0.750829481443487046
3923	35	37	0.776596799489934098
3925	37	37	0.775240076458556637
3926	38	37	0.749931843812147725
3927	39	37	0.735816461640837693
3929	56	37	0.786260153362074554
3930	57	37	0.765935013526393038
3931	41	37	0.778608656049570413
3933	43	37	0.774709468289490499
3934	44	37	0.814689121912731018
3935	45	37	0.798681165874947641
3936	46	37	0.792459541464234918
3938	48	37	0.775890553725877119
3939	49	37	0.788130883267681104
3940	50	37	0.814689121912731018
3942	52	37	0.769129077085357382
3943	53	37	0.769347025282021924
3944	54	37	0.798297146869015428
3946	58	37	0.801370941985565022
3947	59	37	0.782447524838321473
3948	60	37	0.816225613791404458
3949	61	37	0.813477741313235692
3951	63	37	0.514577482971655287
3952	64	37	0.753949560761201343
3953	65	37	0.770384217086873435
3955	67	37	0.436155843055038128
3956	68	37	0.783861482661558862
3957	69	37	0.775706317377486965
3959	100	37	0.596383087245152543
3960	71	37	0.773820927358262467
3961	72	37	0.760619055305417069
3962	73	37	0.7649526283555107
3964	75	37	0.710152745372147787
3965	76	37	0.797759125982485662
3966	77	37	0.608783227892426893
3968	79	37	0.809444407589021364
3969	80	37	0.756894229851905354
3970	81	37	0.727071728438673737
3972	83	37	0.805355199405882627
3973	84	37	0.774709468289490499
3974	85	37	0.765705975359863511
3975	86	37	0.790868676469866694
3977	88	37	0.557753598199138945
3978	89	37	0.787060818443350629
3979	90	37	0.760810435533688656
3981	92	37	0.751754654531113453
3982	93	37	0.762279253575113169
3983	94	37	0.804444166793096604
3985	96	37	0.78713135489178232
3986	97	37	0.828035352855151952
3987	98	37	0.701546206807768913
3988	99	37	0.79296491894737875
3990	102	37	0.781472340316842318
3991	103	37	0.785845952354376931
3992	104	37	0.761984688820310896
3994	106	37	0.797400405046331917
3995	107	37	0.788396053770787808
3996	108	37	0.787166652323452842
3998	110	38	0.860293296006641395
3999	111	38	0.907670955928467804
4000	112	38	0.900875563182027328
4001	113	38	0.915480146717407295
4003	141	38	0.902054222508374193
4004	115	38	0.897197212424457047
4005	116	38	0.867038000998307856
4007	118	38	0.893654079256641531
4008	119	38	0.888537923608759828
4009	120	38	0.914843901319138397
4011	122	38	0.864029162314428056
4012	123	38	0.892858906157385168
4013	124	38	0.88603601299724688
4014	125	38	0.921418189094850404
4016	127	38	0.886587471492271462
4017	128	38	0.934399089703288444
4018	129	38	0.907914885805936822
4020	131	38	0.867901315629301617
4021	132	38	0.85718922307935852
4022	133	38	0.906806332511513435
4024	135	38	0.928449189059739166
6628	113	109	0.940053395670450875
6629	114	109	0.892436693226711375
6630	141	109	0.873120362502502578
6631	115	109	0.929765362303249132
6632	116	109	0.894862158396008689
6633	117	109	0.913992398145761609
6634	118	109	0.923738873949558892
6635	119	109	0.941363305144042761
6636	120	109	0.899179970886538671
6637	121	109	0.928889895239896402
6638	122	109	0.864178446244345033
6639	123	109	0.938918606259792288
6640	124	109	0.958476654871346145
6641	125	109	0.946415217180844093
6642	126	109	0.893649785135862018
6643	127	109	0.962094821231735842
6644	128	109	0.927402491169053489
6645	129	109	0.928512257951774389
6646	130	109	0.92888610384485748
6647	131	109	0.904831355972070428
6648	132	109	0.920914834113125691
6649	133	109	0.929308928692087366
6650	134	109	0.927633211918155731
6651	135	109	0.948693062846081125
6652	136	109	0.935304559161244553
6653	137	109	0.927462057950836249
6654	138	109	0.885587291389991815
6655	139	109	0.916163130081197097
6656	140	109	0.894430725539946292
6657	142	109	0.915872330796808742
6658	143	109	0.893411055965137701
6659	144	109	0.886656320171493095
6660	145	109	0.773820927358262467
6661	109	110	0.86532409703842883
6664	112	110	0.92282320058673184
6668	115	110	0.925607825098257342
6673	120	110	0.887754608955803937
6677	124	110	0.956361797173915673
6681	128	110	0.906482000188142956
4072	110	40	0.906125684117668362
4073	111	40	0.909284053414702087
4075	113	40	0.920110424353536183
4076	114	40	0.886886493905085005
4077	141	40	0.882988390167824599
4079	116	40	0.905315910619314157
4080	117	40	0.901531418085825154
4081	118	40	0.897031907742134149
4082	119	40	0.908606258192575345
4084	121	40	0.910080442616041041
4085	122	40	0.885891370133519707
4086	123	40	0.916897047096572715
4088	125	40	0.939576157048489402
4089	126	40	0.887220189085021538
4090	127	40	0.928501886378515384
4092	129	40	0.9089702773160242
4093	130	40	0.907375846346118675
4094	131	40	0.902181234255507447
4095	132	40	0.909387968260287338
4097	134	40	0.910300123464855448
4098	135	40	0.928436567303265958
4099	136	40	0.924345787934376162
4101	138	40	0.874020447029965286
4102	139	40	0.905682030536256955
4103	140	40	0.880896652630004717
4105	143	40	0.890327539661439848
4106	144	40	0.87914692953666651
4107	145	40	0.787369159469053059
4108	109	41	0.896893733739745014
4110	111	41	0.928885807902292693
4111	112	41	0.950222218564235832
4112	113	41	0.943801438152931271
4114	141	41	0.917258047431467438
4115	115	41	0.937061407130246882
4116	116	41	0.896018458418749941
4118	118	41	0.926445786863651644
4119	119	41	0.925963722604022488
4120	120	41	0.94275498751870801
4121	121	41	0.916876627786615384
4123	123	41	0.923711663825626417
4124	124	41	0.92141081635652522
4125	125	41	0.937756341451580155
4127	127	41	0.924930012407706226
4128	128	41	0.936056294516703247
4129	129	41	0.942033076451081253
4131	131	41	0.91233701467033046
4132	132	41	0.90020364464261371
4133	133	41	0.928674269836261002
4134	134	41	0.938052734535310018
4136	136	41	0.933905081828066308
4137	137	41	0.950899626167006295
4138	138	41	0.912681836472861052
4140	140	41	0.914185885774427498
4141	142	41	0.939412885143620535
4142	143	41	0.926149160157265117
4144	145	41	0.803783219942860172
4145	109	42	0.914958094290027169
4146	110	42	0.896619527721592147
4147	111	42	0.942068510897560496
4149	113	42	0.933169965919914968
4150	114	42	0.908910543344191968
4151	141	42	0.918928297205002687
4153	116	42	0.920839610839123468
4154	117	42	0.90387645230694813
4155	118	42	0.896266290330626214
4157	120	42	0.925279835112663207
4158	121	42	0.925330300346252299
4159	122	42	0.892230978983773459
4160	123	42	0.922065820603840236
4162	125	42	0.94974193084300107
4163	126	42	0.909308338079165224
4164	127	42	0.923184729967445827
4166	129	42	0.919398844879440458
4167	130	42	0.920799961650578869
4168	131	42	0.915347211300854169
4170	133	42	0.912128528760177026
4171	134	42	0.913426810214542084
4172	135	42	0.935134990575739899
4173	136	42	0.923783291526619865
4175	138	42	0.883582743383562241
4176	139	42	0.940148429603184566
4177	140	42	0.919818083355097293
4179	143	42	0.906476259003354712
4180	144	42	0.881995280719667485
4181	145	42	0.803627815937402623
4183	110	43	0.898671708635782052
4184	111	43	0.937769429270033816
4185	112	43	0.965055977247466057
4186	113	43	0.943416783443105533
4188	141	43	0.898691692478124748
4189	115	43	0.930249387663424687
4190	116	43	0.901482917855244703
4192	118	43	0.912644453611939355
4193	119	43	0.924209566619093703
4194	120	43	0.940806004910643368
4196	122	43	0.888037968840944436
4197	123	43	0.922175782354727858
4198	124	43	0.939333609055130081
4199	125	43	0.952942724497907845
4201	127	43	0.945205248904382067
4202	128	43	0.937020706600726783
4203	129	43	0.932787548697695201
4205	131	43	0.922365670502299118
4206	132	43	0.914503395308604694
4207	133	43	0.934150165617753214
4209	135	43	0.952653695371176057
6686	133	110	0.921097771055503722
6690	137	110	0.918665896778255942
6694	142	110	0.906380291688091866
6699	110	111	0.913507315115114626
6703	114	111	0.898112994009536147
6707	117	111	0.926701101262459082
6712	122	111	0.87096716703584709
6716	126	111	0.900909707683060335
6720	130	111	0.947119500410136927
6725	135	111	0.950903283214358241
6729	139	111	0.931924738429334654
6733	144	111	0.91556011920618019
6738	112	112	0.928486804426470913
6742	115	112	0.940357306916662528
6746	119	112	0.951505771602169759
6751	124	112	0.946869108201410903
6755	128	112	0.932832313813414915
6759	132	112	0.91269832899098724
6764	137	112	0.953207873221440627
6768	142	112	0.936444242030588625
6772	109	113	0.827574346860105448
6777	114	113	0.846361048091884949
6781	117	113	0.879690483921713118
6785	121	113	0.878813489778696999
6790	126	113	0.853995868943620007
6794	130	113	0.907980155896740193
6798	134	113	0.903220314846734484
6800	136	113	0.883824940003526738
6801	137	113	0.911169111601496939
6802	138	113	0.922846616918377771
6803	139	113	0.87801045393505639
6804	140	113	0.85458722208860638
6805	142	113	0.898887720219741504
6806	143	113	0.85039459805903439
6807	144	113	0.869531381458390151
6808	145	113	0.710152745372147787
6809	109	114	0.882254542805910646
6810	110	114	0.87080027412437544
6811	111	114	0.910361161915852035
4257	110	45	0.895024721445629501
4258	111	45	0.919417902004754484
4260	113	45	0.942166291974936176
4261	114	45	0.901738944290164879
4262	141	45	0.892975963696474917
4264	116	45	0.884852978743003615
4265	117	45	0.908432428610596587
4266	118	45	0.917479205585614022
4267	119	45	0.934079190055589481
4269	121	45	0.909490479025396148
4270	122	45	0.87502909749881197
4271	123	45	0.914372733404700044
4273	125	45	0.941277845492015208
4274	126	45	0.904672892113494664
4275	127	45	0.942007783307760582
4277	129	45	0.937937753974254051
4278	130	45	0.93930411467380226
4279	131	45	0.897864304405729619
4280	132	45	0.898622432730910137
4282	134	45	0.935568484097967334
4283	135	45	0.947883757398580662
4284	136	45	0.929001933633658239
4286	138	45	0.88838420562482634
4287	139	45	0.922741782049686377
4288	140	45	0.896114544592745532
4290	143	45	0.903580395754756349
4291	144	45	0.910649902191298488
4292	145	45	0.789644159388208533
4293	109	46	0.900204990919653669
4295	111	46	0.952225455659208464
4296	112	46	0.942509775342850298
4297	113	46	0.955590577726916135
4299	141	46	0.907653865614016953
4300	115	46	0.947662115852023201
4301	116	46	0.928573802371341572
4303	118	46	0.9466945535647322
4304	119	46	0.959722446658474282
4305	120	46	0.92476455293271087
4306	121	46	0.950760296928379045
4308	123	46	0.952373519983041206
4309	124	46	0.968970479026012965
4310	125	46	0.9572608318051955
4312	127	46	0.970880122706982873
4313	128	46	0.939765623552797802
4314	129	46	0.949334157572907067
4316	131	46	0.941947061871468372
4317	132	46	0.946629409920998421
4318	133	46	0.9446928498671745
4319	134	46	0.947298620918133216
4321	136	46	0.953409691364112355
4322	137	46	0.955638722690420161
4323	138	46	0.909639714074222394
4325	140	46	0.920892100860901675
4326	142	46	0.948439399803872707
4327	143	46	0.920635569513533092
4329	145	46	0.766937824746234953
4330	109	47	0.865865456839577718
4331	110	47	0.910241537791643074
4332	111	47	0.929915731076785823
4334	113	47	0.931502151042107984
4335	114	47	0.903394847255159616
4336	141	47	0.899617649815109055
4338	116	47	0.894392968004312339
4339	117	47	0.91541222573954395
4340	118	47	0.929797864871790836
4342	120	47	0.920039150364434399
4343	121	47	0.916065334318317159
4344	122	47	0.880157976554631127
4345	123	47	0.933759452002597912
4347	125	47	0.937837043835757278
4348	126	47	0.895340947068542725
4349	127	47	0.931870981176265656
4351	129	47	0.926910524618690723
4352	130	47	0.937916963737640774
4353	131	47	0.923867665717183928
4355	133	47	0.916285873223671832
4356	134	47	0.929334038493948356
4357	135	47	0.945575218366519699
4358	136	47	0.931382293087177349
4360	138	47	0.911560668194541845
4361	139	47	0.939247391094965245
4362	140	47	0.897120190320478295
4364	143	47	0.907617295740516195
4365	144	47	0.896855829663496973
4366	145	47	0.742694658609326264
4368	110	48	0.923364272025315014
4369	111	48	0.936861458348589471
4370	112	48	0.918581374075187029
4371	113	48	0.950080984444733767
4373	141	48	0.913901678055187405
4374	115	48	0.938502743801638672
4375	116	48	0.939767281525195064
4377	118	48	0.942243921605783519
4378	119	48	0.958337392323213355
4379	120	48	0.92009522765343088
4381	122	48	0.891079861290801079
4382	123	48	0.934484758717233244
4383	124	48	0.96174851146158169
4384	125	48	0.94622588895337012
4386	127	48	0.966810004785921162
4387	128	48	0.932104309997851099
4388	129	48	0.952969338399715205
4390	131	48	0.932981587128110079
4391	132	48	0.935112711200103419
4392	133	48	0.945940412583193502
4394	135	48	0.961286423161939574
6812	112	114	0.915426948019674835
6813	113	114	0.922386306368961351
6814	114	114	0.919931704761843272
6815	141	114	0.900379372254846988
6816	115	114	0.907863872204162425
6817	116	114	0.894570389842927138
6818	117	114	0.906307253784262246
6819	118	114	0.903743177409008891
6820	119	114	0.903329814685042365
6821	120	114	0.924561478777014334
6822	121	114	0.891366059203896888
6823	122	114	0.88338129310072333
6824	123	114	0.903315423213622237
6825	124	114	0.903184937724484493
6826	125	114	0.921759399455579276
6827	126	114	0.920318959059075681
6828	127	114	0.900422033153771673
6829	128	114	0.926336681682444318
6830	129	114	0.919394814693222595
6831	130	114	0.921450197983571084
6832	131	114	0.905522084604394317
6833	132	114	0.88751486981263239
6834	133	114	0.923987738226999755
6835	134	114	0.916952453087432451
6836	135	114	0.934521799584648427
6837	136	114	0.906334459914525437
6838	137	114	0.923903876330697815
6839	138	114	0.893124675018779346
6840	139	114	0.907903617934362583
6841	140	114	0.896179336299349316
6842	142	114	0.917749680947643087
6843	143	114	0.922178414363085008
6844	144	114	0.870597458248460798
6845	145	114	0.797759125982485662
6846	109	115	0.69995373864098831
6849	112	115	0.74387010169862211
6853	115	115	0.759545775524630651
6858	120	115	0.727884114402033044
6862	124	115	0.777851575593751399
4442	110	50	0.917714230874030923
4443	111	50	0.944429527527391399
4445	113	50	0.954484094658673232
4446	114	50	0.928117648466694867
4447	141	50	0.907490626665085509
4449	116	50	0.927330584731272056
4450	117	50	0.928249247064058314
4451	118	50	0.940881656885918294
4452	119	50	0.957646971708237205
4454	121	50	0.933556707465186153
4455	122	50	0.886443997608245882
4456	123	50	0.936668964933657588
4458	125	50	0.949411429891596548
4459	126	50	0.924345839888926157
4460	127	50	0.964382101401796143
4462	129	50	0.957409146620362583
4463	130	50	0.960803549962138015
4464	131	50	0.934170262575298671
4465	132	50	0.933106677775316529
4467	134	50	0.957850175659397785
4468	135	50	0.965968292145082841
4469	136	50	0.947202575693369075
4471	138	50	0.915262985176585442
4472	139	50	0.932111307269939071
4473	140	50	0.915441149118427333
4475	143	50	0.929619120834272894
4476	144	50	0.913182062238942271
4477	145	50	0.772725745834713762
4478	109	51	0.67184316256152754
4480	111	51	0.705287097584551659
4481	112	51	0.763772139740231504
4482	113	51	0.723860646538343144
4484	141	51	0.611439431381107457
4485	115	51	0.713612906041631412
4486	116	51	0.700341353535226196
4488	118	51	0.696599635242774462
4489	119	51	0.726473026728653437
4490	120	51	0.673834134507338756
4491	121	51	0.76386952553925036
4493	123	51	0.71496856416382204
4494	124	51	0.78634729295858663
4495	125	51	0.733253032863131482
4497	127	51	0.801601929667592361
4498	128	51	0.698641488693816926
4499	129	51	0.698654336195708381
4501	131	51	0.683065969288894403
4502	132	51	0.726754555738602925
4503	133	51	0.708957825649644935
4504	134	51	0.694374313888852401
4506	136	51	0.721243826548889633
4507	137	51	0.704175753963072193
4508	138	51	0.659426309055660576
4510	140	51	0.644150839371809392
4511	142	51	0.706142327803867653
4512	143	51	0.639614053150460049
4514	145	51	0.514577482971655287
4515	109	52	0.67184316256152754
4516	110	52	0.689615602769276914
4517	111	52	0.705287097584551659
4519	113	52	0.723860646538343144
4520	114	52	0.652884736733833515
4521	141	52	0.611439431381107457
4523	116	52	0.700341353535226196
4524	117	52	0.701623942111829102
4525	118	52	0.696599635242774462
4527	120	52	0.673834134507338756
4528	121	52	0.76386952553925036
4529	122	52	0.617324715947316083
4530	123	52	0.71496856416382204
4532	125	52	0.733253032863131482
4533	126	52	0.650415436127303348
4534	127	52	0.801601929667592361
4536	129	52	0.698654336195708381
4537	130	52	0.724546140384341064
4538	131	52	0.683065969288894403
4540	133	52	0.708957825649644935
4541	134	52	0.694374313888852401
4542	135	52	0.746999791049337003
4543	136	52	0.721243826548889633
4545	138	52	0.659426309055660576
4546	139	52	0.713412490679786737
4547	140	52	0.644150839371809392
4549	143	52	0.639614053150460049
4550	144	52	0.655094196237066217
4551	145	52	0.514577482971655287
4553	110	53	0.591662137767807184
4554	111	53	0.638130114757768152
4555	112	53	0.654092677717089788
4556	113	53	0.618243439797687033
4558	141	53	0.589505528139170121
4559	115	53	0.623688871917614129
4560	116	53	0.65329632365425605
4562	118	53	0.598965978208281236
4563	119	53	0.620456926873909964
4564	120	53	0.616216735994860931
4566	122	53	0.606483136503197295
4567	123	53	0.619142250796064886
4568	124	53	0.62285446755779228
4569	125	53	0.645479262580530455
4571	127	53	0.632908061548438261
4572	128	53	0.621810136294179916
4573	129	53	0.620392902899777998
4575	131	53	0.604925436110077763
4576	132	53	0.649584480574977086
4577	133	53	0.597791176822673576
4579	135	53	0.631438594927620223
4661	144	55	0.853269636668803177
4663	109	56	0.886741043573970988
4664	110	56	0.910555238483157448
4665	111	56	0.92107039310933625
4666	112	56	0.927676879248513608
4667	113	56	0.924711897497020319
4668	114	56	0.897459324294358152
4669	141	56	0.878364653809611706
4627	110	55	0.891506136307244179
4628	111	55	0.903454253165954957
4630	113	55	0.910089366307853753
4631	114	55	0.899070193441520837
4632	141	55	0.866508004869425474
4634	116	55	0.919210721942078757
4635	117	55	0.874821650696069542
4636	118	55	0.909766793289962128
4637	119	55	0.938792591771004381
4639	121	55	0.898883986574785854
4640	122	55	0.845481124150857299
4641	123	55	0.89365726830747827
4643	125	55	0.902750875768574823
4644	126	55	0.889615341719316222
4645	127	55	0.945787024125789744
4647	129	55	0.920592358840424452
4648	130	55	0.912252244311717697
4649	131	55	0.890627250848902929
4650	132	55	0.909594847997834743
4653	135	55	0.921063520443475503
4654	136	55	0.917340591914306169
4655	137	55	0.892612499276003168
4656	138	55	0.846572279948927475
4657	139	55	0.882248212041362612
4658	140	55	0.897128395010115876
4660	143	55	0.895756043497986321
4670	115	56	0.926888556010945774
4672	117	56	0.897991934910274181
4673	118	56	0.910344874131395865
4674	119	56	0.938360846806116533
4676	121	56	0.931930216480257312
4677	122	56	0.871415137650121685
4678	123	56	0.922015073406947439
4680	125	56	0.935190579690058366
4681	126	56	0.888034855108278065
4682	127	56	0.960566923850619259
4683	128	56	0.905672184794684254
4685	130	56	0.919624337325716468
4686	131	56	0.916426163654631476
4687	132	56	0.936118441871796825
4689	134	56	0.915755381447445393
4690	135	56	0.934145841382080677
4691	136	56	0.93145270971793892
4693	138	56	0.862752491239343056
4694	139	56	0.913110518261192494
4695	140	56	0.893273144757863791
4696	142	56	0.907287904221882324
4698	144	56	0.871561246091019481
4699	145	56	0.757894632476806329
4700	109	57	0.878139989575212221
4702	111	57	0.952137954918578222
4703	112	57	0.930156732268702102
4704	113	57	0.96663540471362619
4706	141	57	0.894076223528017633
4707	115	57	0.948427832153458605
4708	116	57	0.901816129529947053
4709	117	57	0.939789641904493434
4711	119	57	0.961189409116685267
4712	120	57	0.918122059044052641
4713	121	57	0.941925066698772184
4715	123	57	0.94316513620358633
4716	124	57	0.959309516983610999
4717	125	57	0.944951252503318573
4719	127	57	0.963012703159812133
4720	128	57	0.954882748538878334
4721	129	57	0.95935775063199491
4722	130	57	0.964769533190641626
4724	132	57	0.93520495110261781
4725	133	57	0.94849255386229081
4726	134	57	0.957230923309536519
4728	136	57	0.953047356744352259
4729	137	57	0.956083471060147683
4730	138	57	0.919365407656944189
4732	140	57	0.924323567285620706
4733	142	57	0.952486099862761004
4734	143	57	0.913995477473534601
4735	144	57	0.920355110802223098
4737	109	58	0.793029738699547959
4738	110	58	0.768903085483989557
4739	111	58	0.814217683335191955
4741	113	58	0.824490656000557931
4742	114	58	0.776279408055809861
4743	141	58	0.781588439304114702
4745	116	58	0.791063027165414323
4746	117	58	0.828629794705025291
4747	118	58	0.799615395002161611
4748	119	58	0.81842521874413543
4750	121	58	0.812127469611389596
4751	122	58	0.772318665770232893
4752	123	58	0.809554384961907458
4754	125	58	0.829575142369453289
4755	126	58	0.784106145645996011
4756	127	58	0.810441790156788189
4758	129	58	0.859781611120085887
4759	130	58	0.829090423065878324
4760	131	58	0.806902122438208136
4761	132	58	0.814750664210036279
4763	134	58	0.856557122712286678
4764	135	58	0.822685807138943459
4765	136	58	0.808808308920633601
4767	138	58	0.839503371602559945
4768	139	58	0.826678899247580867
4769	140	58	0.774056904903165699
4771	143	58	0.779922582964338917
4772	144	58	0.775074329609514612
4773	145	58	0.657584465954252684
4812	110	60	0.918460840114138199
4813	111	60	0.919712619838250922
4815	113	60	0.937017007872839924
4816	114	60	0.885695664391331516
4817	141	60	0.876931735466043638
4819	116	60	0.886356618601572555
4820	117	60	0.914730811777864306
4821	118	60	0.926820358231693064
4822	119	60	0.947305883510658364
4824	121	60	0.91979643759748686
4825	122	60	0.870993065955928181
4826	123	60	0.927597039236242371
4828	125	60	0.944529231838374561
4829	126	60	0.889861119103968479
4830	127	60	0.95472809788417845
4832	129	60	0.936012105271006756
4833	130	60	0.930549193173231148
4834	131	60	0.90695394061065171
4835	132	60	0.91770085327251294
4837	134	60	0.93657769972151661
4838	135	60	0.939335386639676306
4839	136	60	0.938654278098004835
4841	138	60	0.892065675917024459
4842	139	60	0.906913504493618183
4843	140	60	0.890867978932449733
4845	143	60	0.890500338440874839
4846	144	60	0.89997586310279909
4847	145	60	0.782447524838321473
4848	109	61	0.882960812405032214
4850	111	61	0.945245725428250805
4851	112	61	0.934336390307544895
4852	113	61	0.953954993725129818
4854	141	61	0.893966953709144474
4855	115	61	0.94245098387042614
4856	116	61	0.895779387365316926
4858	118	61	0.938042866134102038
4859	119	61	0.952282458914203822
4860	120	61	0.921260966809110848
4861	121	61	0.931842552137128854
4863	123	61	0.940194111877453942
4864	124	61	0.95138042535366707
4865	125	61	0.948548257736105405
4867	127	61	0.958768218640940306
4868	128	61	0.937747587157581108
4869	129	61	0.94814437708473609
4871	131	61	0.92024686801957678
4872	132	61	0.920981550520984737
4873	133	61	0.940315785856353448
4874	134	61	0.946736011565364355
4876	136	61	0.946605644684996639
4877	137	61	0.954772948339350891
4878	138	61	0.902080301966139642
4880	140	61	0.90718418012746882
4881	142	61	0.941103043352879198
4882	143	61	0.905025914986408719
4884	145	61	0.772088369276325515
4885	109	62	0.851527477000473709
4886	110	62	0.851070996633008336
4887	111	62	0.896690696009616928
4889	113	62	0.910674724430170168
4890	114	62	0.872705729128217422
4891	141	62	0.874427072302591313
4893	116	62	0.877544398831448746
4894	117	62	0.879064417048076585
4895	118	62	0.88380367842516383
4897	120	62	0.896007535159287549
4898	121	62	0.879657857605655402
4899	122	62	0.84949910126116901
4900	123	62	0.888163055821765357
4902	125	62	0.917355716018975031
4903	126	62	0.87471990506868702
4904	127	62	0.89639927684305265
4906	129	62	0.907752900827998199
4907	130	62	0.903431091492200689
4908	131	62	0.87271347996141091
4910	133	62	0.878767281791638544
4911	134	62	0.905671188249377646
4912	135	62	0.916613668863034858
4913	136	62	0.896226228154942794
4915	138	62	0.885567122966709031
4916	139	62	0.896751637558461101
4917	140	62	0.871288774762789764
4919	143	62	0.871861782656147777
4920	144	62	0.854982367874433935
4921	145	62	0.775065052764471907
4923	110	63	0.846889194216883912
4924	111	63	0.875320249645312187
4925	112	63	0.877813494897578761
4926	113	63	0.900024880628673807
4928	141	63	0.817260693217681244
4929	115	63	0.877905511913202541
4930	116	63	0.844240626362929847
4932	118	63	0.882057772292001441
4933	119	63	0.894049291063392482
4934	120	63	0.859741918266689442
4936	122	63	0.800627327264737843
4937	123	63	0.869236051982325342
4938	124	63	0.900486838624923736
4939	125	63	0.875226315961310952
4941	127	63	0.909939238670605888
4942	128	63	0.87587199152816031
4943	129	63	0.899120017573327379
4945	131	63	0.854342809325723263
4946	132	63	0.882992046052019752
4947	133	63	0.887377213845555679
4949	135	63	0.90670700732015741
4997	110	65	0.898173987787109773
4998	111	65	0.908461356253601582
5000	113	65	0.916506005632110488
5001	114	65	0.864589922916492948
5002	141	65	0.85249140979424709
5004	116	65	0.882038355325812651
5005	117	65	0.882167302112374374
5006	118	65	0.890712865391594444
5007	119	65	0.924348205281830038
5009	121	65	0.91234316728046172
5010	122	65	0.853150530584264599
5011	123	65	0.914885653427335077
5013	125	65	0.93233497354986139
5014	126	65	0.865881689165783452
5015	127	65	0.948745376342192026
5017	129	65	0.905405042150582484
5018	130	65	0.903277351311102206
5019	131	65	0.886988723715640859
5020	132	65	0.905978522877729842
5022	134	65	0.904276446845747262
5023	135	65	0.91993100854887655
5024	136	65	0.921595014409734459
5026	138	65	0.852261692236589652
5027	139	65	0.892372444615265104
5028	140	65	0.863775938808896915
5030	143	65	0.862669600631896571
5031	144	65	0.872797805217690348
5032	145	65	0.754042142596869303
5033	109	66	0.887855533156256649
5035	111	66	0.919890308431084436
5036	112	66	0.927718302730359823
5037	113	66	0.930272394994782093
5039	141	66	0.878872492919086645
5040	115	66	0.931426503591581301
5041	116	66	0.920721928150618374
5043	118	66	0.916584448717152722
5044	119	66	0.938523052527191926
5045	120	66	0.901673960860443491
5046	121	66	0.927173885538650655
5048	123	66	0.931374181291205083
5049	124	66	0.958658264458116083
5050	125	66	0.951968475544598181
5052	127	66	0.956731021717720731
5053	128	66	0.907903892506510934
5054	129	66	0.924610707887316918
5056	131	66	0.912037971945076187
5057	132	66	0.932748508261553089
5058	133	66	0.9085281082377753
5059	134	66	0.923967350234114582
5061	136	66	0.932175130819387521
5062	137	66	0.920665182357276457
5063	138	66	0.887962789680262543
5065	140	66	0.8941601102471326
5066	142	66	0.91215146937998004
5067	143	66	0.891324265146574701
5069	145	66	0.777171464852933314
5070	109	67	0.879188324393679221
5071	110	67	0.908955608193406039
5072	111	67	0.92170117174544075
5074	113	67	0.928914893326729163
5075	114	67	0.910750802694758832
5076	141	67	0.890832390627810833
5078	116	67	0.922923803552953448
5079	117	67	0.901344810279942954
5080	118	67	0.929295937691034024
5082	120	67	0.906462796927174463
5083	121	67	0.919281272371595293
5084	122	67	0.872853919948201162
5085	123	67	0.921050420721745589
5087	125	67	0.940088864055092399
5088	126	67	0.908480062425238377
5089	127	67	0.963537547086311008
5091	129	67	0.940812686608977211
5092	130	67	0.93001802928899191
5093	131	67	0.916457092561905218
5095	133	67	0.928460282829959072
5096	134	67	0.938036704542258071
5097	135	67	0.940808417297970156
5098	136	67	0.93282174069176127
5100	138	67	0.886944335853111721
5101	139	67	0.908875230612464002
5102	140	67	0.902701916256258619
5104	143	67	0.910196519062805298
5105	144	67	0.890143016250005581
5106	145	67	0.780646485687926495
5108	110	68	0.912511059651862411
5109	111	68	0.91054551193344091
5110	112	68	0.917957610543105651
5111	113	68	0.927822554437096048
5113	141	68	0.854295439933058232
5114	115	68	0.922209941022760549
5115	116	68	0.882352390179187207
5117	118	68	0.907518965691467949
5118	119	68	0.934827973958402891
5119	120	68	0.887619241519332025
5121	122	68	0.855314088235928582
5122	123	68	0.919146262319771923
5123	124	68	0.949675390133620678
5124	125	68	0.930807804076135614
5126	127	68	0.957685657390789591
5127	128	68	0.91216182873714069
5128	129	68	0.925671775174100597
5130	131	68	0.895702438560596503
5131	132	68	0.914115018284741732
5132	133	68	0.927799350637922626
5134	135	68	0.931153826751105251
5182	110	70	0.89174289832229503
5183	111	70	0.901807449470441225
5185	113	70	0.905449528953800042
5186	114	70	0.902988497435268211
5187	141	70	0.892632019772370722
5189	116	70	0.887813898650728683
5190	117	70	0.892648640307534658
5191	118	70	0.907060664259200622
5192	119	70	0.918357566783433166
5194	121	70	0.878031237421471489
5195	122	70	0.888582755667304158
5196	123	70	0.901892978055893968
5198	125	70	0.925986991763684375
5199	126	70	0.898425992504248039
5200	127	70	0.9082359828409583
5202	129	70	0.907732607242582423
5203	130	70	0.891699408928422477
5204	131	70	0.892619529529845024
5205	132	70	0.881018851837232497
5207	134	70	0.911631203569110538
5208	135	70	0.909156112884813794
5209	136	70	0.929413091704374361
5211	138	70	0.88389061463877916
5212	139	70	0.899402496609782443
5213	140	70	0.887799745647744776
5215	143	70	0.90509938749980845
5216	144	70	0.905811275695118434
5217	145	70	0.802631850499806121
5218	109	71	0.870450568580370287
5220	111	71	0.929364440429817362
5221	112	71	0.915256697132924568
5222	113	71	0.942777953355670606
5224	141	71	0.878734711379767552
5225	115	71	0.926732779923688743
5226	116	71	0.896336914266256723
5228	118	71	0.929705568262020887
5229	119	71	0.945385702123105909
5230	120	71	0.900586502766245411
5231	121	71	0.926825779378009695
5233	123	71	0.926039401415123309
5234	124	71	0.953329469294967091
5235	125	71	0.938134918317589106
5237	127	71	0.957144536300039372
5238	128	71	0.927634991745009962
5239	129	71	0.944158338119305496
5241	131	71	0.909389470875141548
5242	132	71	0.926092448253057698
5243	133	71	0.945421590158679104
5244	134	71	0.940121408501151667
5246	136	71	0.934034741892929787
5247	137	71	0.931142327597062391
5248	138	71	0.887552294332834335
5250	140	71	0.894388651556696668
5251	142	71	0.942364117292092018
5252	143	71	0.890243332617745686
5254	145	71	0.750829481443487046
5255	109	72	0.884978080819811885
5256	110	72	0.911417918114305725
5257	111	72	0.921302908657142039
5259	113	72	0.940972152136750672
5260	114	72	0.893523989175085465
5261	141	72	0.889215561088375406
5263	116	72	0.903758579646508964
5264	117	72	0.911242547574880213
5265	118	72	0.921208579148628193
5267	120	72	0.90610820643241563
5268	121	72	0.928579251305197917
5269	122	72	0.869538928230193298
5270	123	72	0.942288046165925541
5272	125	72	0.952908280589551238
5273	126	72	0.895144394714106451
5274	127	72	0.960849121977062848
5276	129	72	0.937956992756828756
5277	130	72	0.941476673986779922
5278	131	72	0.911511145449959703
5280	133	72	0.937857862522850749
5281	134	72	0.936713490110520852
5282	135	72	0.949634667739081451
5283	136	72	0.934831047799564718
5285	138	72	0.896572089843280295
5286	139	72	0.922204634670813372
5287	140	72	0.893868619871005521
5289	143	72	0.893759096283780918
5290	144	72	0.888598701776011635
5291	145	72	0.776596799489934098
5293	110	73	0.931713764914250286
5294	111	73	0.928880548872710654
5295	112	73	0.925062314476867154
5296	113	73	0.938005766978120659
5298	141	73	0.895903368587644966
5299	115	73	0.939399949023372094
5300	116	73	0.901828227931695592
5302	118	73	0.929444228639198511
5303	119	73	0.955357741964452445
5304	120	73	0.907892814175221718
5306	122	73	0.895106151880279866
5307	123	73	0.938615309507977447
5308	124	73	0.95577174061910497
5309	125	73	0.949032796814205826
5311	127	73	0.958056202676090596
5312	128	73	0.930156170277534389
5313	129	73	0.942816895799324262
5315	131	73	0.923234797365093174
5316	132	73	0.917287656600046408
5317	133	73	0.944806003066697597
5319	135	73	0.938974776825501678
5367	110	75	0.830930416917988857
5368	111	75	0.849785589760077342
5370	113	75	0.846559445861696624
5371	114	75	0.833813313540695211
5372	141	75	0.830455777773818737
5374	116	75	0.840446499701818617
5375	117	75	0.833021727438226001
5376	118	75	0.841076730307115494
5377	119	75	0.873684658039954098
5379	121	75	0.840985177456104904
5380	122	75	0.813826752199707792
5381	123	75	0.880665834098436684
5383	125	75	0.869891671204684469
5384	126	75	0.831231521041565946
5385	127	75	0.865508907239526892
5387	129	75	0.862529221130954982
5388	130	75	0.844867536359598881
5389	131	75	0.836216919422368976
5390	132	75	0.828310558596476065
5392	134	75	0.85439687777250628
5393	135	75	0.85923124409513485
5394	136	75	0.860000721475761121
5396	138	75	0.809297003710545138
5397	139	75	0.851732590977856918
5398	140	75	0.820036548008910016
5400	143	75	0.837933224794276676
5401	144	75	0.815407501854369166
5402	145	75	0.749931843812147725
5403	109	76	0.890936509961916312
5405	111	76	0.92420365604759025
5406	112	76	0.940611383543177859
5407	113	76	0.9350855813740786
5409	141	76	0.879503478298497621
5410	115	76	0.922355082050810515
5411	116	76	0.907379532298522529
5413	118	76	0.908409751931563925
5414	119	76	0.92390852917957389
5415	120	76	0.905892993134799096
5416	121	76	0.937518406891911793
5418	123	76	0.937561934107083883
5419	124	76	0.94564781175353585
5420	125	76	0.940230646463056763
5422	127	76	0.947705156967024509
5423	128	76	0.907594803306988274
5424	129	76	0.912175052412485199
5426	131	76	0.909314700663969133
5427	132	76	0.925152543138413774
5428	133	76	0.903520464056920325
5429	134	76	0.910320324978937445
5431	136	76	0.920078748079805941
5432	137	76	0.93059433642298206
5433	138	76	0.891211470225056757
5435	140	76	0.888448447002949782
5436	142	76	0.9196543237555449
5437	143	76	0.883834402440675126
5439	145	76	0.735816461640837693
5440	109	77	0.879036722480166288
5441	110	77	0.928562956129765804
5442	111	77	0.936933855458409348
5444	113	77	0.945323246845603427
5445	114	77	0.905054020902038459
5446	141	77	0.892023684520234394
5448	116	77	0.917718279910082146
5449	117	77	0.918825170937252911
5450	118	77	0.936887637318685518
5452	120	77	0.907327015120078184
5453	121	77	0.928936996449349239
5454	122	77	0.877794343788637965
5455	123	77	0.941471284082542992
5457	125	77	0.947366007428173562
5458	126	77	0.903311760497040539
5459	127	77	0.970043894174722143
5461	129	77	0.939857100074725338
5462	130	77	0.934261817364710923
5463	131	77	0.921965412701313047
5465	133	77	0.940444801772416628
5466	134	77	0.941110614663649758
5467	135	77	0.953514928761163061
5468	136	77	0.953612793996397201
5470	138	77	0.890355522884937911
5471	139	77	0.919896846461911055
5472	140	77	0.90616619923854691
5474	143	77	0.912489728425637914
5475	144	77	0.913692501810181135
5476	145	77	0.786123925730317863
5478	110	78	0.909800034545279246
5479	111	78	0.916343542867386063
5480	112	78	0.915782332618818473
5481	113	78	0.939389273560640059
5483	141	78	0.880407237011839094
5484	115	78	0.925875364093106668
5485	116	78	0.904871260489465201
5487	118	78	0.928228073378378205
5488	119	78	0.950058822875083808
5489	120	78	0.885988753024424813
5491	122	78	0.857815575955354515
5492	123	78	0.913422023945251182
5493	124	78	0.958232361389992349
5494	125	78	0.93229782144579898
5496	127	78	0.96188201308869703
5497	128	78	0.918210554366368892
5498	129	78	0.937765908131504067
5500	131	78	0.898914942812084061
5501	132	78	0.92027586176972731
5502	133	78	0.946998761735241557
5504	135	78	0.945878949400783431
5552	110	80	0.92964271716194713
5553	111	80	0.949100248529935242
5555	113	80	0.963339388939516872
5556	114	80	0.921875684557248887
5557	141	80	0.909115243729316735
5559	116	80	0.912752300403968486
5560	117	80	0.932129220119398805
5561	118	80	0.953566795856121141
5562	119	80	0.958942039562753146
5564	121	80	0.930435375575580648
5565	122	80	0.881614132593762312
5566	123	80	0.936844064351383676
5568	125	80	0.947793848633331271
5569	126	80	0.917229189510812337
5570	127	80	0.959291182135836418
5572	129	80	0.962058368024035215
5573	130	80	0.970586010740927319
5574	131	80	0.931198944083098779
5575	132	80	0.938841744051535532
5577	134	80	0.95952043464140957
5578	135	80	0.97310529352945152
5579	136	80	0.951025856019325211
5581	138	80	0.91401375820591646
5582	139	80	0.935178353122047223
5583	140	80	0.927435847144969849
5585	143	80	0.923546511552542304
5586	144	80	0.918004478835902971
5587	145	80	0.778608656049570413
5588	109	81	0.891832180664572371
5590	111	81	0.924414234969643589
5591	112	81	0.926548944155096255
5592	113	81	0.932321013917349783
5594	141	81	0.891805781187394508
5595	115	81	0.928361666142220265
5596	116	81	0.909729913369399679
5598	118	81	0.918702829815707833
5599	119	81	0.936413073016595376
5600	120	81	0.906905613996088045
5601	121	81	0.92028837484825432
5603	123	81	0.934546635424841399
5604	124	81	0.950597499956491898
5605	125	81	0.949789525631641207
5607	127	81	0.951950548466919844
5608	128	81	0.921452639965192666
5609	129	81	0.931994960162434993
5611	131	81	0.910005194428385233
5612	132	81	0.918251180312408266
5613	133	81	0.9245080010255462
5614	134	81	0.929019645179094855
5616	136	81	0.933673962156228887
5617	137	81	0.921162739706352762
5618	138	81	0.874678130952123656
5620	140	81	0.906288901531193236
5621	142	81	0.917304219964533374
5622	143	81	0.909872699289001607
5624	145	81	0.805355199405882627
5625	109	82	0.882654426325358621
5626	110	82	0.909859730625942276
5627	111	82	0.915380209562408842
5629	113	82	0.930526180736062747
5630	114	82	0.881032018561070829
5631	141	82	0.870668835333360702
5633	116	82	0.90522102562196316
5634	117	82	0.907298444206036336
5635	118	82	0.908706258579074722
5637	120	82	0.8959984478321662
5638	121	82	0.926952115934510545
5639	122	82	0.866563572993208742
5640	123	82	0.927097353776473065
5642	125	82	0.945326261219121888
5643	126	82	0.882686968836993713
5644	127	82	0.963945660756122868
5646	129	82	0.927030536232085089
5647	130	82	0.918420836522409356
5648	131	82	0.903094346293586869
5650	133	82	0.926351675379952777
5651	134	82	0.925368218925651909
5652	135	82	0.938070084322956022
5653	136	82	0.932803695396459354
5655	138	82	0.874522962434740037
5656	139	82	0.911040460721254997
5657	140	82	0.884451033628245509
5659	143	82	0.880901554273187837
5660	144	82	0.883815733632738465
5661	145	82	0.774709468289490499
5663	110	83	0.925952255589310491
5664	111	83	0.923635435520936854
5665	112	83	0.915983237527939642
5666	113	83	0.929675690860606085
5668	141	83	0.890924097036571272
5669	115	83	0.931434185561913819
5670	116	83	0.906530656402814716
5672	118	83	0.926231526104182912
5673	119	83	0.950653396467328049
5674	120	83	0.888167590989102029
5676	122	83	0.870472034270249551
5677	123	83	0.924943922172910327
5678	124	83	0.961941944501766621
5679	125	83	0.937363707034462923
5681	127	83	0.956174887747823221
5682	128	83	0.913114765353276847
5683	129	83	0.929379230536454215
5685	131	83	0.899786468249918814
5686	132	83	0.91552902457408003
5687	133	83	0.926969095409759025
5689	135	83	0.938603440673391964
5737	110	85	0.933691448739972119
5738	111	85	0.947991800951969443
5740	113	85	0.956852036419043817
5741	114	85	0.922775380308655691
5742	141	85	0.916946294212354518
5744	116	85	0.91740529043454544
5745	117	85	0.941211283244612562
5746	118	85	0.944539370259690036
5747	119	85	0.952268671107017184
5749	121	85	0.948518779777959287
5750	122	85	0.90817922400865847
5751	123	85	0.941547160609324196
5753	125	85	0.952164860020362713
5754	126	85	0.926209506367173363
5755	127	85	0.949817641807004787
5757	129	85	0.962367702198349884
5758	130	85	0.960263895644526855
5759	131	85	0.947247682200073049
5760	132	85	0.936474639256985597
5762	134	85	0.960713648802101083
5763	135	85	0.959312442988954017
5764	136	85	0.947468423019350414
5766	138	85	0.919082591403907245
5767	139	85	0.930968906107796146
5768	140	85	0.920522143486461553
5770	143	85	0.929985915823792975
5771	144	85	0.927299821591595852
5772	145	85	0.792459541464234918
5773	109	86	0.876927298511652631
5775	111	86	0.930703279796638472
5776	112	86	0.928564779783838001
5777	113	86	0.937049686466217224
5779	141	86	0.890415846597435001
5780	115	86	0.937584024379238046
5781	116	86	0.918765861618796031
5783	118	86	0.921470030143412
5784	119	86	0.94806178295228416
5785	120	86	0.914914250100921422
5786	121	86	0.927233633332994134
5788	123	86	0.927981600547042262
5789	124	86	0.943985573688427837
5790	125	86	0.931547904561788376
5792	127	86	0.940876414764045377
5793	128	86	0.90879893925501809
5794	129	86	0.931007010350501707
5796	131	86	0.924327052469666399
5797	132	86	0.920583891807166155
5798	133	86	0.918398997239707859
5799	134	86	0.933035031988841856
5801	136	86	0.938309958240439723
5802	137	86	0.937048109534934448
5803	138	86	0.900401376385464691
5805	140	86	0.892893240172913272
5806	142	86	0.921048348176850995
5807	143	86	0.898034366100782688
5809	145	86	0.781760980419384133
5810	109	87	0.893746519855228017
5811	110	87	0.889296778528892662
5812	111	87	0.909526556439747114
5814	113	87	0.918585971065236429
5815	114	87	0.911701342093406475
5816	141	87	0.886485211042329802
5818	116	87	0.912164555239689867
5819	117	87	0.913210657927515324
5820	118	87	0.89819083774678421
5822	120	87	0.923064494278980407
5823	121	87	0.917829289169729501
5824	122	87	0.888479247336340983
5825	123	87	0.899439366098958915
5827	125	87	0.928827201236165245
5828	126	87	0.908540970808597526
5829	127	87	0.928309741642178832
5831	129	87	0.903363004920346713
5832	130	87	0.907460076984737296
5833	131	87	0.903925638742997806
5835	133	87	0.890901013486805837
5836	134	87	0.898886706304815708
5837	135	87	0.928026963746095834
5838	136	87	0.923280811750907371
5840	138	87	0.870428507989111422
5841	139	87	0.915398019971592647
5842	140	87	0.904830700573744484
5844	143	87	0.903761116578462032
5845	144	87	0.87086077780773008
5846	145	87	0.775890553725877119
5848	110	88	0.915546039640620868
5849	111	88	0.900646941247655652
5850	112	88	0.898743557900420709
5851	113	88	0.892047656080898532
5853	141	88	0.883013393650032397
5854	115	88	0.906097639697767798
5855	116	88	0.913720924811895485
5857	118	88	0.891932204829753883
5858	119	88	0.923486610821941389
5859	120	88	0.867798132329499872
5861	122	88	0.871837228044449408
5862	123	88	0.923164246286521051
5863	124	88	0.942014183423363738
5864	125	88	0.918911502270389424
5866	127	88	0.929163487992558434
5867	128	88	0.874856015705912649
5868	129	88	0.896225303812551943
5870	131	88	0.897005316421976451
5871	132	88	0.90390542438783561
5872	133	88	0.886551333344637205
5874	135	88	0.900717914719154855
5922	110	90	0.857366244829298685
5923	111	90	0.901390805940081252
5925	113	90	0.916669865926222793
5926	114	90	0.846361048091884949
5927	141	90	0.837739483784304406
5929	116	90	0.846281813887202694
5930	117	90	0.879690483921713118
5931	118	90	0.895151055617139924
5932	119	90	0.905204263583401447
5934	121	90	0.878813489778696999
5935	122	90	0.816102173263026809
5936	123	90	0.893486220833971001
5938	125	90	0.897509541745079242
5939	126	90	0.853995868943620007
5940	127	90	0.889345180597892138
5942	129	90	0.899666374546858494
5943	130	90	0.907980155896740193
5944	131	90	0.876363654336480558
5945	132	90	0.877512728800741826
5947	134	90	0.903220314846734484
5948	135	90	0.90790339795463193
5949	136	90	0.883824940003526738
5951	138	90	0.922846616918377771
5952	139	90	0.87801045393505639
5953	140	90	0.85458722208860638
5955	143	90	0.85039459805903439
5956	144	90	0.869531381458390151
5957	145	90	0.710152745372147787
5958	109	91	0.86680544327249065
5960	111	91	0.930619980652085399
5961	112	91	0.91902473589840028
5962	113	91	0.945340063865530933
5964	141	91	0.896890746315450627
5965	115	91	0.943269890249185061
5966	116	91	0.915008869304045902
5968	118	91	0.947586490450775032
5969	119	91	0.966972402911012607
5970	120	91	0.913245306102017929
5971	121	91	0.925722684797370743
5973	123	91	0.926095585034407809
5974	124	91	0.96267383277476648
5975	125	91	0.941568145557683867
5977	127	91	0.963400923862957281
5978	128	91	0.930948975445905047
5979	129	91	0.951667746653958924
5981	131	91	0.925670135867932675
5982	132	91	0.925797057899290232
5983	133	91	0.949126737524933151
5984	134	91	0.952967449243702691
5986	136	91	0.949272077195427055
5987	137	91	0.948153836831835184
5988	138	91	0.906863107491025833
5990	140	91	0.911116545352827933
5991	142	91	0.936149988327251936
5992	143	91	0.928824554686508819
5994	145	91	0.769129077085357382
5995	109	92	0.864434511966935548
5996	110	92	0.84679073270450067
5997	111	92	0.897701275737621707
5999	113	92	0.864783341475538814
6000	114	92	0.860726223315505523
6001	141	92	0.880390400463056944
6003	116	92	0.848389775442520033
6004	117	92	0.850649880872160424
6005	118	92	0.843497681821178458
6007	120	92	0.876961317489433512
6008	121	92	0.865718700242829264
6009	122	92	0.840610442702935501
6010	123	92	0.873417168877973493
6012	125	92	0.896210188547069464
6013	126	92	0.863507129339302737
6014	127	92	0.860688708725729446
6016	129	92	0.874014771600625129
6017	130	92	0.866946788024353987
6018	131	92	0.861542408574502483
6020	133	92	0.855991169983240763
6021	134	92	0.867781331450431459
6022	135	92	0.875877739311327175
6023	136	92	0.85324407623725107
6025	138	92	0.822302162256650981
6026	139	92	0.896890795352805803
6027	140	92	0.87658622210224646
6029	143	92	0.863913253391456193
6030	144	92	0.839400932900267738
6031	145	92	0.769347025282021924
6033	110	93	0.907511948120084178
6034	111	93	0.928500776087440305
6035	112	93	0.946563356175963877
6036	113	93	0.930962281405566028
6038	141	93	0.922103695735445039
6039	115	93	0.928685367451706267
6040	116	93	0.919054670051250966
6042	118	93	0.913623946997769165
6043	119	93	0.932073254537432505
6044	120	93	0.94149675331421645
6046	122	93	0.907649240869738305
6047	123	93	0.92284060698609538
6048	124	93	0.937628999078328418
6049	125	93	0.976854854552019702
6051	127	93	0.939047139252198848
6052	128	93	0.920090642909737189
6053	129	93	0.933524668700707383
6055	131	93	0.925123321698206769
6056	132	93	0.915768011305084562
6057	133	93	0.927352624787688984
6059	135	93	0.941240248974451355
6107	110	95	0.920668724371673686
6108	111	95	0.930240256382888653
6110	113	95	0.942658871261906617
6111	114	95	0.904959033488801579
6112	141	95	0.888898858105628298
6114	116	95	0.895125458500185989
6115	117	95	0.924942007464579774
6116	118	95	0.926629933683621565
6117	119	95	0.944798515639636238
6119	121	95	0.923880800741869179
6120	122	95	0.885553110366489094
6121	123	95	0.9315005911731008
6123	125	95	0.950875159008614745
6124	126	95	0.9082172936809223
6125	127	95	0.954340557334369066
6127	129	95	0.940386252669461187
6128	130	95	0.934842077589898013
6129	131	95	0.912897166473012889
6130	132	95	0.916703394863332299
6132	134	95	0.940039259981393149
6133	135	95	0.948614270616460531
6134	136	95	0.94183692345216985
6136	138	95	0.894136669960214459
6137	139	95	0.913845031778470096
6138	140	95	0.90147782946956434
6140	143	95	0.911130219486894988
6141	144	95	0.906605773884734512
6142	145	95	0.801370941985565022
6143	109	96	0.868604724146561868
6145	111	96	0.919712619838250922
6146	112	96	0.912710679930240021
6147	113	96	0.937017007872839924
6149	141	96	0.876931735466043638
6150	115	96	0.9306344333372355
6151	116	96	0.886356618601572555
6153	118	96	0.926820358231693064
6154	119	96	0.947305883510658364
6155	120	96	0.892826096244159872
6156	121	96	0.91979643759748686
6158	123	96	0.927597039236242371
6159	124	96	0.949891031040891676
6160	125	96	0.944529231838374561
6162	127	96	0.95472809788417845
6163	128	96	0.920911586590505538
6164	129	96	0.936012105271006756
6166	131	96	0.90695394061065171
6167	132	96	0.91770085327251294
6168	133	96	0.936426729475065223
6169	134	96	0.93657769972151661
6171	136	96	0.938654278098004835
6172	137	96	0.929272539454571667
6173	138	96	0.892065675917024459
6175	140	96	0.890867978932449733
6176	142	96	0.91777003836792681
6177	143	96	0.890500338440874839
6179	145	96	0.782447524838321473
6180	109	97	0.89264004757295845
6181	110	97	0.932519351592582257
6182	111	97	0.935875226185498565
6184	113	97	0.943455888014925637
6185	114	97	0.93103720167535764
6186	141	97	0.92229925033149418
6188	116	97	0.926117770040813193
6189	117	97	0.92311192220138738
6190	118	97	0.945212652954312005
6192	120	97	0.923024104489322039
6193	121	97	0.919078102982841094
6194	122	97	0.900814349139936965
6195	123	97	0.935518335471104079
6197	125	97	0.948378904631140385
6198	126	97	0.925677141665011916
6199	127	97	0.948040021032572011
6201	129	97	0.943833968094269005
6202	130	97	0.946331647333575776
6203	131	97	0.929734244928752784
6205	133	97	0.936599281353813873
6206	134	97	0.943759593065166213
6207	135	97	0.952704075259389493
6208	136	97	0.95143185138252151
6210	138	97	0.888405408791937301
6211	139	97	0.926782786075917242
6212	140	97	0.923337164716348191
6214	143	97	0.935309421381823713
6215	144	97	0.907990079815333861
6216	145	97	0.816225613791404458
6218	110	98	0.932863816872787299
6219	111	98	0.936559430266377002
6220	112	98	0.928101478348400843
6221	113	98	0.942701887530784877
6223	141	98	0.920065716024836
6224	115	98	0.950902513285847739
6225	116	98	0.926466044681762524
6227	118	98	0.944447404874043217
6228	119	98	0.955093830862876469
6229	120	98	0.921043355732645841
6231	122	98	0.89955218678534854
6232	123	98	0.936445961072265742
6233	124	98	0.955255574677555175
6234	125	98	0.949207386225299654
6236	127	98	0.949462791517351024
6237	128	98	0.932043829700211268
6238	129	98	0.941564459206216342
6240	131	98	0.926681190790231812
6241	132	98	0.934094258864007876
6242	133	98	0.935698796124254217
6244	135	98	0.953938253103487899
6292	110	100	0.689615602769276914
6293	111	100	0.705287097584551659
6295	113	100	0.723860646538343144
6296	114	100	0.652884736733833515
6297	141	100	0.611439431381107457
6299	116	100	0.700341353535226196
6300	117	100	0.701623942111829102
6301	118	100	0.696599635242774462
6302	119	100	0.726473026728653437
6304	121	100	0.76386952553925036
6305	122	100	0.617324715947316083
6306	123	100	0.71496856416382204
6308	125	100	0.733253032863131482
6309	126	100	0.650415436127303348
6310	127	100	0.801601929667592361
6312	129	100	0.698654336195708381
6313	130	100	0.724546140384341064
6314	131	100	0.683065969288894403
6315	132	100	0.726754555738602925
6317	134	100	0.694374313888852401
6318	135	100	0.746999791049337003
6319	136	100	0.721243826548889633
6321	138	100	0.659426309055660576
6322	139	100	0.713412490679786737
6323	140	100	0.644150839371809392
6325	143	100	0.639614053150460049
6326	144	100	0.655094196237066217
6327	145	100	0.514577482971655287
6328	109	101	0.885051364036803845
6330	111	101	0.936223487443263114
6331	112	101	0.934439351433629883
6332	113	101	0.948058096330674616
6334	141	101	0.886228652730929767
6335	115	101	0.936370914596797776
6336	116	101	0.916285142081658122
6338	118	101	0.927008531966506899
6339	119	101	0.94795837674136163
6340	120	101	0.913901137772336725
6341	121	101	0.940516861880558608
6343	123	101	0.939544557983402973
6344	124	101	0.958623654633176558
6345	125	101	0.948811165483580243
6347	127	101	0.961620028887299028
6348	128	101	0.923964579736698322
6349	129	101	0.935239163231249448
6351	131	101	0.922923692555401964
6352	132	101	0.938302585379396037
6353	133	101	0.928254784470636585
6354	134	101	0.933381128441186481
6356	136	101	0.938378615179781606
6357	137	101	0.938036186933521976
6358	138	101	0.901633711215179656
6360	140	101	0.906401770940225004
6361	142	101	0.934892968193256402
6362	143	101	0.890234467708349464
6364	145	101	0.753949560761201343
6365	109	102	0.877306496494367871
6366	110	102	0.915358026008256442
6367	111	102	0.944429871709182467
6369	113	102	0.947482338440413185
6370	114	102	0.898615794549601388
6371	141	102	0.891702232289640739
6373	116	102	0.895360820482177466
6374	117	102	0.924229552404053245
6375	118	102	0.935716316330291287
6377	120	102	0.919807503536363535
6378	121	102	0.92621289470940571
6379	122	102	0.871140170276130998
6380	123	102	0.938846127294743815
6382	125	102	0.943854425549246701
6383	126	102	0.89964485883728984
6384	127	102	0.956204086457408398
6386	129	102	0.942231129710115245
6387	130	102	0.945593667144734029
6388	131	102	0.915522376434214746
6390	133	102	0.932304997277393466
6391	134	102	0.940084571216760256
6392	135	102	0.949613619034773926
6393	136	102	0.944177856622935519
6395	138	102	0.900064935885849238
6396	139	102	0.930202166905464201
6397	140	102	0.901796979725942416
6399	143	102	0.902569196171593369
6400	144	102	0.918682094337598731
6401	145	102	0.770384217086873435
6403	110	103	0.917760747010764044
6404	111	103	0.933199987689184884
6405	112	103	0.937722021448972209
6406	113	103	0.94369856838659627
6408	141	103	0.887525939478282067
6409	115	103	0.927220483871302514
6410	116	103	0.924889052378602194
6412	118	103	0.917741851172878764
6413	119	103	0.948329756901761689
6414	120	103	0.908602298745905368
6416	122	103	0.871929860398354073
6417	123	103	0.932766570631753611
6418	124	103	0.965080356988467947
6419	125	103	0.95138037006686349
6421	127	103	0.970419183784976269
6422	128	103	0.922966148869315828
6423	129	103	0.941541784224516731
6425	131	103	0.921010902944534582
6426	132	103	0.940339847734031564
6427	133	103	0.938116021332499272
6429	135	103	0.948222202802761482
6477	110	105	0.909951268353860532
6478	111	105	0.946011609910468509
6480	113	105	0.959507743706326077
6481	114	105	0.915868387406820195
6482	141	105	0.902689677282749403
6484	116	105	0.895695058162632507
6485	117	105	0.928620550785765442
6486	118	105	0.942322293755102791
6487	119	105	0.941615507293346532
6489	121	105	0.914838166822501853
6490	122	105	0.875686464955767074
6491	123	105	0.929535187157788934
6493	125	105	0.94373914202184106
6494	126	105	0.913263280925098342
6495	127	105	0.939235952360911286
6497	129	105	0.956241459908852343
6498	130	105	0.966447659106669632
6499	131	105	0.919897190469962878
6500	132	105	0.920358847915993983
6502	134	105	0.953551179352335243
6503	135	105	0.960652754742224446
6504	136	105	0.9377703356641095
6506	138	105	0.911796479042977337
6507	139	105	0.931768785346200112
6508	140	105	0.915599069283068889
6510	143	105	0.91590116837279334
6511	144	105	0.909025866042780795
6512	145	105	0.783861482661558862
6513	109	106	0.883067844376384636
6515	111	106	0.92303289207213135
6516	112	106	0.940648252673182639
6517	113	106	0.942268084715736864
6519	141	106	0.887656111918983637
6520	115	106	0.924862183540055227
6521	116	106	0.901758440943589368
6523	118	106	0.914867728663282476
6524	119	106	0.935659827250331366
6525	120	106	0.918967708568188324
6526	121	106	0.926900510683947965
6528	123	106	0.919979625527771128
6529	124	106	0.946144703995647651
6530	125	106	0.945396493572103536
6532	127	106	0.953904141788497029
6533	128	106	0.920733632284335246
6534	129	106	0.938767001368323362
6536	131	106	0.905023263559873836
6537	132	106	0.914331447857457458
6538	133	106	0.935525749980192223
6539	134	106	0.933514581205687533
6541	136	106	0.92813895679310543
6542	137	106	0.936911029590923317
6543	138	106	0.890544516188592206
6545	140	106	0.896485518111920232
6546	142	106	0.937857670933915255
6547	143	106	0.893952944877387745
6549	145	106	0.775706317377486965
6550	109	107	0.893480298239266335
6551	110	107	0.901135565274745143
6552	111	107	0.919396328323008549
6554	113	107	0.923184739302266189
6555	114	107	0.942614308403666556
6556	141	107	0.930188802809073678
6558	116	107	0.89414014946166176
6559	117	107	0.919507506131483465
6560	118	107	0.928720208923287882
6562	120	107	0.93573507057179639
6563	121	107	0.891308036245234581
6564	122	107	0.916432790804325492
6565	123	107	0.91358305827659636
6567	125	107	0.93810921872407671
6568	126	107	0.939525929046708286
6569	127	107	0.914165356570368126
6571	129	107	0.937089100919017315
6572	130	107	0.926054213358091016
6573	131	107	0.905752158503791205
6575	133	107	0.927469121457924262
6576	134	107	0.934480871530870005
6577	135	107	0.939316152001736016
6578	136	107	0.926726406752092502
6580	138	107	0.891396034452190178
6581	139	107	0.921258161237903384
6582	140	107	0.91929909563776413
6584	143	107	0.940725805042702201
6585	144	107	0.892195447694439925
6586	145	107	0.836377763694041154
6588	110	108	0.575270121420510372
6589	111	108	0.589211539722126809
6590	112	108	0.605618742569823287
6591	113	108	0.59631418808501524
6593	141	108	0.580344627471042207
6594	115	108	0.610444972907476902
6595	116	108	0.609433443128234664
6597	118	108	0.597622734604469907
6598	119	108	0.598216877954870885
6599	120	108	0.576631460107430716
6601	122	108	0.59399629572376822
6602	123	108	0.593981340817322456
6603	124	108	0.591732607215066819
6604	125	108	0.611635072909890609
6606	127	108	0.58758376900976117
6607	128	108	0.580610774123789919
6608	129	108	0.584305780252975637
6610	131	108	0.564744057677193156
6611	132	108	0.593121136454354936
6612	133	108	0.541991299263401616
6614	135	108	0.593303219556463479
6662	110	110	0.908080668383076328
6663	111	110	0.912677284326584126
6665	113	110	0.927768036416152131
6666	114	110	0.869355823923778859
6667	141	110	0.856722372555551948
6669	116	110	0.887457767469924885
6670	117	110	0.90285396469772794
6671	118	110	0.90920494005104302
6672	119	110	0.939851018831244889
6674	121	110	0.921328836191291356
6675	122	110	0.852417420886499855
6676	123	110	0.925258395950098733
6678	125	110	0.935824108150549616
6679	126	110	0.873438032184873481
6680	127	110	0.962022932184050328
6682	129	110	0.923069286031254044
6683	130	110	0.918630712472335631
6684	131	110	0.89620692112028022
6685	132	110	0.912469107051464001
6687	134	110	0.923032220932677783
6688	135	110	0.936159680435255326
6689	136	110	0.929503303635239697
6691	138	110	0.87068925393705654
6692	139	110	0.901128523642741319
6693	140	110	0.870480503125355076
6695	143	110	0.871181946694239651
6696	144	110	0.889047831499625518
6697	145	110	0.760619055305417069
6698	109	111	0.879315324230695694
6700	111	111	0.943396381057946098
6701	112	111	0.931246055437449427
6702	113	111	0.950324590438587413
6704	141	111	0.890915619378646162
6705	115	111	0.940045087077231334
6706	116	111	0.891268643123254711
6708	118	111	0.932853521862372137
6709	119	111	0.949582407361353464
6710	120	111	0.917874298302411407
6711	121	111	0.928600235820671305
6713	123	111	0.937649200285207374
6714	124	111	0.947072679856514332
6715	125	111	0.945747106826726247
6717	127	111	0.955018757534458973
6718	128	111	0.933337164841409384
6719	129	111	0.945673316827276955
6721	131	111	0.916758907914594134
6722	132	111	0.916034684404815058
6723	133	111	0.93771829289663533
6724	134	111	0.944787328753064481
6726	136	111	0.944311592870986649
6727	137	111	0.951889027589818304
6728	138	111	0.900532173142515768
6730	140	111	0.902142139540749843
6731	142	111	0.936120535587894875
6732	143	111	0.900984139912759163
6734	145	111	0.7649526283555107
6735	109	112	0.874967414004466426
6736	110	112	0.913509967510862664
6737	111	112	0.944013856029330967
6739	113	112	0.949460364170823135
6740	114	112	0.89554288107631097
6741	141	112	0.889146473460215025
6743	116	112	0.889624957708075148
6744	117	112	0.923146671244676198
6745	118	112	0.933956620029362528
6747	120	112	0.914335996035255838
6748	121	112	0.924931113346184719
6749	122	112	0.869146285416979802
6750	123	112	0.935445743567321575
6752	125	112	0.942118937655728517
6753	126	112	0.899211546385719873
6754	127	112	0.954191635030946506
6756	129	112	0.94354647819112325
6757	130	112	0.946089621886161636
6758	131	112	0.913151181930532352
6760	133	112	0.938141829720938625
6761	134	112	0.942504147688669747
6762	135	112	0.949424890492292728
6763	136	112	0.944352816097091874
6765	138	112	0.898070210313240413
6766	139	112	0.927711613828423487
6767	140	112	0.902695399271121302
6769	143	112	0.900491663381504659
6770	144	112	0.92038135758565609
6771	145	112	0.768099032983112995
6773	110	113	0.857366244829298685
6774	111	113	0.901390805940081252
6775	112	113	0.879603962180148913
6776	113	113	0.916669865926222793
6778	141	113	0.837739483784304406
6779	115	113	0.884675259373303602
6780	116	113	0.846281813887202694
6782	118	113	0.895151055617139924
6783	119	113	0.905204263583401447
6784	120	113	0.873513495843270871
6786	122	113	0.816102173263026809
6787	123	113	0.893486220833971001
6788	124	113	0.893201278722298486
6789	125	113	0.897509541745079242
6791	127	113	0.889345180597892138
6792	128	113	0.886146663961318692
6793	129	113	0.899666374546858494
6795	131	113	0.876363654336480558
6796	132	113	0.877512728800741826
6797	133	113	0.874481780624536076
6799	135	113	0.90790339795463193
6847	110	115	0.733235901708038429
6848	111	115	0.742401453182301108
6850	113	115	0.774552065291511327
6851	114	115	0.699539534349238878
6852	141	115	0.688342665692567968
6854	116	115	0.72798666883630947
6855	117	115	0.722596576522122391
6856	118	115	0.743805440129573281
6857	119	115	0.770600634034573684
6859	121	115	0.763280700056994443
6860	122	115	0.682815719430729051
6861	123	115	0.736863531992587251
6863	125	115	0.742676391355815979
6864	126	115	0.706142334633438673
6865	127	115	0.792888268615136838
6867	129	115	0.76102578311688962
6868	130	115	0.751943314971152632
6869	131	115	0.740835511680130732
6870	132	115	0.762870392213007453
6872	134	115	0.758099416652758484
6873	135	115	0.761667330246947216
6874	136	115	0.760413500287169253
6876	138	115	0.711566811404490629
6877	139	115	0.723101638210625342
6878	140	115	0.692889451663926237
6880	143	115	0.709078166531612708
6881	144	115	0.718901013277669532
6882	145	115	0.608783227892426893
6883	109	116	0.854512741281648336
6885	111	116	0.887522726644572546
6886	112	116	0.893144594970285755
6887	113	116	0.894764167645845987
6889	141	116	0.822641180325632715
6890	115	116	0.876954333856722834
6891	116	116	0.873235114663781453
6893	118	116	0.85812532120013929
6894	119	116	0.893513116503207083
6895	120	116	0.869667541038011471
6896	121	116	0.917794624166085593
6898	123	116	0.888024933231491342
6899	124	116	0.904496754436047157
6900	125	116	0.895497686137351034
6902	127	116	0.920072134723514123
6903	128	116	0.874903098070765717
6904	129	116	0.881612237818602429
6906	131	116	0.891291494221020941
6907	132	116	0.894103269391389066
6908	133	116	0.891983555677934303
6909	134	116	0.877524174278980329
6911	136	116	0.881159554820396318
6912	137	116	0.894616782688624657
6913	138	116	0.825250905435344406
6915	140	116	0.848033182564228882
6916	142	116	0.866731342858011899
6917	143	116	0.842745634937832944
6919	145	116	0.691533462880154048
6920	109	117	0.879849404073019148
6921	110	117	0.920200987570979345
6922	111	117	0.922042063343387563
6924	113	117	0.928655977890697537
6925	114	117	0.908242142607239122
6926	141	117	0.888139001373728143
6928	116	117	0.917188139944208225
6929	117	117	0.88940257549202828
6930	118	117	0.92013955500143263
6932	120	117	0.886198050645216173
6933	121	117	0.917867133325220186
6934	122	117	0.866585102757707171
6935	123	117	0.922048384780513097
6937	125	117	0.937150504365470205
6938	126	117	0.905029297498043728
6939	127	117	0.962302079366030072
6941	129	117	0.928541119199271514
6942	130	117	0.919965820428374048
6943	131	117	0.900226437911901267
6945	133	117	0.927167854063999375
6946	134	117	0.926128329054446087
6947	135	117	0.939160448447869389
6948	136	117	0.937051253660740935
6950	138	117	0.85552415157822248
6951	139	117	0.900151930919592891
6952	140	117	0.906164164559293717
6954	143	117	0.910230437183335961
6955	144	117	0.891100620118344344
6956	145	117	0.809444407589021364
6958	110	118	0.90848963906914626
6959	111	118	0.92187081444082275
6960	112	118	0.910759659738139105
6961	113	118	0.946561091737118887
6963	141	118	0.878033430973777951
6964	115	118	0.927339931713350385
6965	116	118	0.887513328712467464
6967	118	118	0.935064650796549324
6968	119	118	0.947571470376809333
6969	120	118	0.909597479900030148
6971	122	118	0.865252583733120972
6972	123	118	0.912884904061689428
6973	124	118	0.948930354701286172
6974	125	118	0.935039393369063498
6976	127	118	0.957674516131400644
6977	128	118	0.935039695908904123
6978	129	118	0.951223344355619616
6980	131	118	0.91074035375697282
6981	132	118	0.918972461561584075
6982	133	118	0.958004897350698159
6984	135	118	0.951681125922901439
7032	110	120	0.914359440274392532
7033	111	120	0.943071833052277042
7035	113	120	0.952884777075186817
7036	114	120	0.926059281591465999
7037	141	120	0.917327970767223388
7039	116	120	0.907240268980332165
7040	117	120	0.942191120140741689
7041	118	120	0.942632664789565533
7042	119	120	0.945532277205784033
7044	121	120	0.922325977561419097
7045	122	120	0.903079580601846121
7046	123	120	0.937386485755341448
7048	125	120	0.964095230250676227
7049	126	120	0.928523791938596244
7050	127	120	0.94503880341548463
7052	129	120	0.952794159551248021
7053	130	120	0.952524777549261348
7054	131	120	0.923015893500556239
7055	132	120	0.915198445239819081
7057	134	120	0.952352315576048269
7058	135	120	0.963926539595353682
7059	136	120	0.949449902582292338
7061	138	120	0.927072298271804707
7062	139	120	0.944754016562632248
7063	140	120	0.915312673373433361
7065	143	120	0.925147500634938114
7066	144	120	0.916390321540884401
7067	145	120	0.795576582282575662
7068	109	121	0.891832180664572371
7070	111	121	0.924414234969643589
7071	112	121	0.926548944155096255
7072	113	121	0.932321013917349783
7074	141	121	0.891805781187394508
7075	115	121	0.928361666142220265
7076	116	121	0.909729913369399679
7078	118	121	0.918702829815707833
7079	119	121	0.936413073016595376
7080	120	121	0.906905613996088045
7081	121	121	0.92028837484825432
7083	123	121	0.934546635424841399
7084	124	121	0.950597499956491898
7085	125	121	0.949789525631641207
7087	127	121	0.951950548466919844
7088	128	121	0.921452639965192666
7089	129	121	0.931994960162434993
7091	131	121	0.910005194428385233
7092	132	121	0.918251180312408266
7093	133	121	0.9245080010255462
7094	134	121	0.929019645179094855
7096	136	121	0.933673962156228887
7097	137	121	0.921162739706352762
7098	138	121	0.874678130952123656
7100	140	121	0.906288901531193236
7101	142	121	0.917304219964533374
7102	143	121	0.909872699289001607
7104	145	121	0.805355199405882627
7105	109	122	0.882654426325358621
7106	110	122	0.909859730625942276
7107	111	122	0.915380209562408842
7109	113	122	0.930526180736062747
7110	114	122	0.881032018561070829
7111	141	122	0.870668835333360702
7113	116	122	0.90522102562196316
7114	117	122	0.907298444206036336
7115	118	122	0.908706258579074722
7117	120	122	0.8959984478321662
7118	121	122	0.926952115934510545
7119	122	122	0.866563572993208742
7120	123	122	0.927097353776473065
7122	125	122	0.945326261219121888
7123	126	122	0.882686968836993713
7124	127	122	0.963945660756122868
7126	129	122	0.927030536232085089
7127	130	122	0.918420836522409356
7128	131	122	0.903094346293586869
7130	133	122	0.926351675379952777
7131	134	122	0.925368218925651909
7132	135	122	0.938070084322956022
7133	136	122	0.932803695396459354
7135	138	122	0.874522962434740037
7136	139	122	0.911040460721254997
7137	140	122	0.884451033628245509
7139	143	122	0.880901554273187837
7140	144	122	0.883815733632738465
7141	145	122	0.774709468289490499
7143	110	123	0.924126960088516913
7144	111	123	0.938250249475073739
7145	112	123	0.942063096785472953
7146	113	123	0.953646805050937463
7148	141	123	0.902036261141789586
7149	115	123	0.938081603919110663
7150	116	123	0.92576301114907622
7155	121	123	0.95411532901013163
7156	122	123	0.882227829054686219
7157	123	123	0.941094154068320532
7158	124	123	0.967408206227977074
7159	125	123	0.958671568228819049
7160	126	123	0.902744697699943033
7161	127	123	0.971068657774827315
7162	128	123	0.929059325002573155
7163	129	123	0.950997108666606583
7164	130	123	0.955168476100582309
7165	131	123	0.925926759815515643
7166	132	123	0.94140878407503803
7167	133	123	0.946870541033321689
7169	135	123	0.959519261712777793
7217	110	125	0.876279880463077476
7218	111	125	0.914646697200447667
7220	113	125	0.914042562803901393
7221	114	125	0.880488114895145224
7222	141	125	0.866009270448515611
7224	116	125	0.869402279304233971
7225	117	125	0.895896734154828844
7226	118	125	0.9050526244187721
7227	119	125	0.913409551410127918
7229	121	125	0.89773051292970707
7230	122	125	0.862212198574401345
7231	123	125	0.896404596169848578
7233	125	125	0.920631221579634507
7234	126	125	0.886336808663310438
7235	127	125	0.923622863167278374
7237	129	125	0.907703158238312713
7238	130	125	0.912030757641570933
7239	131	125	0.890864208557500037
7240	132	125	0.886091988727101265
7242	134	125	0.907761016038281188
7243	135	125	0.920536632505296715
7244	136	125	0.918177658700279897
7246	138	125	0.884864823887319907
7247	139	125	0.907524273594554454
7248	140	125	0.871261381070979057
7250	143	125	0.874770520901195558
7251	144	125	0.8817961419660445
7252	145	125	0.75173133333897646
7253	109	126	0.607146366066367071
7255	111	126	0.62926499692287563
7256	112	126	0.616333730727144924
7257	113	126	0.635112963000276087
7259	141	126	0.608391187745342732
7260	115	126	0.601169622471260379
7261	116	126	0.644332928318818277
7263	118	126	0.594845813247238953
7264	119	126	0.606635312005121219
7265	120	126	0.610877482701241648
7266	121	126	0.600778636661776555
7268	123	126	0.606107181523860006
7269	124	126	0.619163340730581879
7270	125	126	0.636117397357046754
7272	127	126	0.617091607117847607
7273	128	126	0.589542738529385546
7274	129	126	0.631733984534577075
7276	131	126	0.6054335681330969
7277	132	126	0.614512287396027923
7278	133	126	0.568885668531981858
7279	134	126	0.630272269756082637
7281	136	126	0.607861064956854991
7282	137	126	0.601002601595177155
7283	138	126	0.563645244038997295
7285	140	126	0.646431439427509691
7286	142	126	0.621620188403624763
7287	143	126	0.616310962238475701
7289	145	126	0.557753598199138945
7290	109	127	0.888240881035292307
7291	110	127	0.923364272025315014
7292	111	127	0.936861458348589471
7294	113	127	0.950080984444733767
7295	114	127	0.934849045566423675
7296	141	127	0.913901678055187405
7298	116	127	0.939767281525195064
7299	117	127	0.915008994886409965
7300	118	127	0.942243921605783519
7302	120	127	0.92009522765343088
7303	121	127	0.929329905772591114
7304	122	127	0.891079861290801079
7305	123	127	0.934484758717233244
7307	125	127	0.94622588895337012
7308	126	127	0.927050730561410408
7309	127	127	0.966810004785921162
7311	129	127	0.952969338399715205
7312	130	127	0.952853222316085935
7313	131	127	0.932981587128110079
7315	133	127	0.945940412583193502
7316	134	127	0.951276286691394302
7317	135	127	0.961286423161939574
7318	136	127	0.94723414265773187
7320	138	127	0.90367917240564366
7321	139	127	0.925760188784706783
7322	140	127	0.924316861629816633
7324	143	127	0.934371761689467228
7325	144	127	0.897113804006799409
7326	145	127	0.787060818443350629
7328	110	128	0.922836480160558081
7329	111	128	0.926934133047961017
7330	112	128	0.915332713778350016
7331	113	128	0.934575491912262302
7333	141	128	0.903998280983120184
7334	115	128	0.921950133389324744
7335	116	128	0.953969541354279249
7337	118	128	0.904668754568747624
7338	119	128	0.927341669367118038
7339	120	128	0.916941253233928277
7341	122	128	0.893151833444047805
7342	123	128	0.930090043721766513
7343	124	128	0.947843364682571465
7344	125	128	0.951522946334606878
7346	127	128	0.941528180718299357
7347	128	128	0.903279493087575824
7348	129	128	0.924368145290159759
7350	131	128	0.933470310459886821
7351	132	128	0.944294716385157273
7352	133	128	0.902081879218647686
7354	135	128	0.939688379611284819
7402	110	130	0.915553190150250273
7403	111	130	0.93673390837388093
7405	113	130	0.941537448194790794
7406	114	130	0.893642264458124669
7407	141	130	0.883288493301700228
7409	116	130	0.91901037515672146
7410	117	130	0.917234377524856481
7411	118	130	0.92583011545800542
7412	119	130	0.943490507096918063
7414	121	130	0.944413850143806299
7415	122	130	0.871241171472703968
7416	123	130	0.935893007908003338
7418	125	130	0.945122255726164928
7419	126	130	0.886969451783535479
7420	127	130	0.962439975120281677
7422	129	130	0.929579859285083798
7423	130	130	0.942665959960704458
7424	131	130	0.927007999869025157
7425	132	130	0.943016234212496585
7427	134	130	0.928960112238849223
7428	135	130	0.949642485468259245
7429	136	130	0.944529061876757337
7431	138	130	0.890425509394735637
7432	139	130	0.928745816869217866
7433	140	130	0.901055822974784371
7435	143	130	0.892799474229087675
7436	144	130	0.894934647327392696
7437	145	130	0.751754654531113453
7438	109	131	0.873447508091798053
7440	111	131	0.935452652741983859
7441	112	131	0.930234248755820836
7442	113	131	0.948936846408248491
7444	141	131	0.878867380573180368
7445	115	131	0.942885825374898068
7446	116	131	0.894425283835560747
7448	118	131	0.934621835415870184
7449	119	131	0.948826940493662008
7450	120	131	0.911203825866780726
7451	121	131	0.938432593256089964
7453	123	131	0.934175114602712742
7454	124	131	0.958036799396293048
7455	125	131	0.946264890969695238
7457	127	131	0.964700356096216738
7458	128	131	0.934281210203489532
7459	129	131	0.934944326740723475
7461	131	131	0.918205515963131269
7462	132	131	0.925744887274727479
7463	133	131	0.93599041641943137
7464	134	131	0.935825801390813283
7466	136	131	0.946395707120718188
7467	137	131	0.951885730876299796
7468	138	131	0.900996348045288165
7470	140	131	0.895305298770844749
7471	142	131	0.924478454748574263
7472	143	131	0.896390387621789464
7474	145	131	0.762279253575113169
7475	109	132	0.90744662334569659
7476	110	132	0.92513176190967239
7477	111	132	0.936714794186621069
7479	113	132	0.929887086314133304
7480	114	132	0.915976952620944251
7481	141	132	0.90987197363651573
7483	116	132	0.9320162533370836
7484	117	132	0.917719429323811342
7485	118	132	0.924192854700006783
7487	120	132	0.920247361718756651
7488	121	132	0.933355788667487363
7489	122	132	0.909238094793371365
7490	123	132	0.935265645327425843
7492	125	132	0.947093203177197251
7493	126	132	0.911336655471403745
7494	127	132	0.948560163188577277
7496	129	132	0.936775780408355963
7497	130	132	0.92573791218915813
7498	131	132	0.929618664260115191
7500	133	132	0.918078904084837277
7501	134	132	0.933937331987874098
7502	135	132	0.937762314876013248
7503	136	132	0.941437378894871113
7505	138	132	0.892597769208269387
7506	139	132	0.931420147541666577
7507	140	132	0.913956312576702068
7509	143	132	0.914685750496258554
7510	144	132	0.896266045809589573
7511	145	132	0.804444166793096604
7513	110	133	0.906223592362732422
7514	111	133	0.927138505918581046
7515	112	133	0.920303907403307919
7516	113	133	0.925402985716184734
7518	141	133	0.875164322401691508
7519	115	133	0.92036331129172777
7520	116	133	0.904654328409912223
7522	118	133	0.912174102335016057
7523	119	133	0.937919135982277941
7524	120	133	0.89464835839073098
7526	122	133	0.862583606369922706
7527	123	133	0.926309020942800987
7528	124	133	0.952562507104132261
7529	125	133	0.936475408106733131
7531	127	133	0.957184065740847911
7532	128	133	0.917404859946988727
7533	129	133	0.93004818163004721
7535	131	133	0.907384917108758349
7536	132	133	0.919780426448104427
7537	133	133	0.930833029274981238
7539	135	133	0.937484385754971949
7587	110	135	0.911251781764945479
7588	111	135	0.920259762623355182
7590	113	135	0.92844316926681647
7591	114	135	0.91086606075295462
7592	141	135	0.908851477515340123
7594	116	135	0.901261351084717943
7595	117	135	0.909071581734429812
7596	118	135	0.909114871861173346
7597	119	135	0.919772566010536585
7599	121	135	0.901382159086509649
7600	122	135	0.903020050885376957
7601	123	135	0.921054236376842583
7603	125	135	0.936740490954049654
7604	126	135	0.91927586507945358
7605	127	135	0.919356233588601746
7607	129	135	0.928996691638482641
7608	130	135	0.923455147717226477
7609	131	135	0.916161358807294546
7610	132	135	0.904189980963899687
7612	134	135	0.926998302542753394
7613	135	135	0.935932763381405297
7614	136	135	0.92432803324039059
7616	138	135	0.870285764730672873
7617	139	135	0.90296327195363546
7618	140	135	0.910558275079381696
7620	143	135	0.916651848570230743
7621	144	135	0.887229158153805764
7622	145	135	0.828035352855151952
7623	109	136	0.690871973334039713
7625	111	136	0.690440547725920561
7626	112	136	0.717510493647822489
7627	113	136	0.704913403702057018
7629	141	136	0.712567262492646458
7630	115	136	0.719724155242384867
7631	116	136	0.732325546571954922
7633	118	136	0.692140997096560184
7634	119	136	0.731732704679329493
7635	120	136	0.686096970882114077
7636	121	136	0.697817512293845588
7638	123	136	0.712354724680521634
7639	124	136	0.731568817707313301
7640	125	136	0.710805217030701542
7642	127	136	0.732321441736538237
7643	128	136	0.673920030104951939
7644	129	136	0.720488915393456941
7646	131	136	0.689459128439255386
7647	132	136	0.707390291938094773
7648	133	136	0.701965598178268979
7649	134	136	0.706269591252034146
7651	136	136	0.714487865754948492
7652	137	136	0.699392034859328993
7653	138	136	0.612328863978473525
7655	140	136	0.698772750550469945
7656	142	136	0.69704417728121415
7657	143	136	0.703760894555971683
7659	145	136	0.701546206807768913
7660	109	137	0.882699877858621806
7661	110	137	0.931127416506347449
7662	111	137	0.947521939970902061
7664	113	137	0.951877509050867099
7665	114	137	0.932945799920913421
7666	141	137	0.90726264515183741
7668	116	137	0.909297176004439711
7669	117	137	0.930603048778903097
7670	118	137	0.954598652870943476
7672	120	137	0.920220324289236502
7673	121	137	0.929010225635757525
7674	122	137	0.892073379899766317
7675	123	137	0.945326425189240926
7677	125	137	0.948702029175277572
7678	126	137	0.923202926188184669
7679	127	137	0.956540054129526918
7681	129	137	0.95165947078817581
7682	130	137	0.958471640007359738
7683	131	137	0.933333510020340595
7685	133	137	0.948321926575130036
7686	134	137	0.950664862288958634
7687	135	137	0.963309261644357484
7688	136	137	0.949665462513074043
7690	138	137	0.912794411093067248
7691	139	137	0.936076484298149603
7692	140	137	0.927843078033279145
7694	143	137	0.927031129106096197
7695	144	137	0.90654149389139127
7696	145	137	0.79296491894737875
7698	110	138	0.902445182242601507
7699	111	138	0.921498127212042606
7700	112	138	0.926128359265567802
7701	113	138	0.945629726442520635
7703	141	138	0.876262344459018738
7704	115	138	0.910400949997761111
7705	116	138	0.879089191100269396
7707	118	138	0.912821665839889995
7708	119	138	0.927153939102639213
7709	120	138	0.915156898854973755
7711	122	138	0.851227549525399252
7712	123	138	0.912413346897224864
7713	124	138	0.932306828343738903
7714	125	138	0.933735446654636148
7716	127	138	0.939979001996488317
7717	128	138	0.916042821669560192
7718	129	138	0.935570603941068057
7720	131	138	0.899216104568912655
7721	132	138	0.905710028148247415
7722	133	138	0.930647654078076036
7724	135	138	0.942391134412109088
7772	110	140	0.920744673442148498
7773	111	140	0.934747801530188327
7775	113	140	0.951858393618507659
7776	114	140	0.907432263097249447
7777	141	140	0.893915283625239532
7779	116	140	0.907499720333837634
7780	117	140	0.926966077269110178
7781	118	140	0.939674365828740643
7782	119	140	0.949007729180840864
7784	121	140	0.936367010212671436
7785	122	140	0.876082991253392174
7786	123	140	0.937628371010352679
7788	125	140	0.942117652145565088
7789	126	140	0.906617435441692932
7790	127	140	0.955539301326903789
7792	129	140	0.93962981903680165
7793	130	140	0.93806111180731544
7794	131	140	0.925447164096013353
7795	132	140	0.930956051906917104
7797	134	140	0.938890736665180525
7798	135	140	0.950141073540549663
7799	136	140	0.952371487250438298
7801	138	140	0.900645072651482193
7802	139	140	0.925312118212558876
7803	140	140	0.904440457056256308
7805	143	140	0.919262485811564112
7806	144	140	0.917908599517072599
7807	145	140	0.785845952354376931
7808	109	141	0.881301661313651619
7810	111	141	0.931615393695751082
7811	112	141	0.945203040097125191
7812	113	141	0.94331826462899826
7814	141	141	0.881559332967587816
7815	115	141	0.943340981953967983
7816	116	141	0.910555622427298816
7818	118	141	0.928110118230690007
7819	119	141	0.950359920444553752
7820	120	141	0.906702484891675708
7821	121	141	0.943495180282153068
7823	123	141	0.938811223368485104
7824	124	141	0.960775497016561286
7825	125	141	0.94195784582908515
7827	127	141	0.963875026121713607
7828	128	141	0.918261145838424997
7829	129	141	0.934426225627860818
7831	131	141	0.922256131459658568
7832	132	141	0.931134280705054218
7833	133	141	0.922758067249362712
7834	134	141	0.933402200657832748
7836	136	141	0.943893676555142669
7837	137	141	0.943506433232976005
7838	138	141	0.895638721051446041
7840	140	141	0.892652503985345902
7841	142	141	0.917827357367905106
7842	143	141	0.896313361573997103
7844	145	141	0.761984688820310896
7845	109	142	0.861044470049499688
7846	110	142	0.867473963523008651
7847	111	142	0.900435187841799767
7849	113	142	0.918224724221327282
7850	114	142	0.862956093175429761
7851	141	142	0.852164439933035145
7853	116	142	0.879108391767687292
7854	117	142	0.890667482045384706
7855	118	142	0.887221507358378569
7857	120	142	0.895030448391440081
7858	121	142	0.911869883213573318
7859	122	142	0.83690170802522279
7860	123	142	0.893096420558900372
7862	125	142	0.916050711606765655
7863	126	142	0.870012040541644383
7864	127	142	0.927562794307968397
7866	129	142	0.911440570927496196
7867	130	142	0.926542489834847327
7868	131	142	0.888290027363455303
7870	133	142	0.905416733978777977
7871	134	142	0.914271633754048962
7872	135	142	0.921846662642089809
7873	136	142	0.897649580009680981
7875	138	142	0.889333303860027735
7876	139	142	0.905820208051611564
7877	140	142	0.860973261042185301
7879	143	142	0.862775203058757989
7880	144	142	0.869896783002087837
7881	145	142	0.730653479767997327
7883	110	143	0.916427572450875139
7884	111	143	0.928817024437130545
7885	112	143	0.93206717650133819
7886	113	143	0.934072833047082995
7888	141	143	0.914606965321536625
7889	115	143	0.937308977535112997
7890	116	143	0.925432787745287033
7892	118	143	0.927337156790712824
7893	119	143	0.937223242386444944
7894	120	143	0.927853287295475448
7896	122	143	0.901497311418148595
7897	123	143	0.939945210413326127
7898	124	143	0.950018331330919508
7899	125	143	0.949452388867004005
7901	127	143	0.945894730812226747
7902	128	143	0.918877689770361328
7903	129	143	0.929703249829200273
7905	131	143	0.924337514311585839
7906	132	143	0.919378343898711425
7907	133	143	0.918020940630308147
7909	135	143	0.948741122489710098
1	1	1	0.889749652764136423
4	4	1	0.896893733739745014
8	8	1	0.881430887120450923
13	12	1	0.887906285260689931
17	16	1	0.911739115858222537
21	20	1	0.793029738699547959
26	26	1	0.816583866974458505
30	30	1	0.879188324393679221
34	34	1	0.870450568580370287
39	39	1	0.890936509961916312
43	41	1	0.879516139329724167
47	45	1	0.889375934078534769
52	50	1	0.877654191886090285
56	54	1	0.910012906984908554
60	60	1	0.89264004757295845
65	65	1	0.877306496494367871
69	69	1	0.883067844376384636
73	72	1	0.86532409703842883
78	77	1	0.69995373864098831
82	81	1	0.845730044477483789
86	85	1	0.90095206700818864
91	90	1	0.914934749978747353
95	94	1	0.90744662334569659
99	98	1	0.690871973334039713
104	104	1	0.881301661313651619
108	108	1	0.879263825041189606
112	4	2	0.898829250338534225
117	9	2	0.935447068976292595
121	12	2	0.917714230874030923
125	16	2	0.929208740489018248
130	21	2	0.920668724371673686
134	26	2	0.846889194216883912
138	30	2	0.908955608193406039
140	32	2	0.914164015830396304
141	33	2	0.89174289832229503
142	34	2	0.908095495043943934
143	35	2	0.911417918114305725
144	36	2	0.931713764914250286
145	37	2	0.927068274692966154
146	38	2	0.830930416917988857
147	39	2	0.900462046703607299
148	40	2	0.928562956129765804
149	56	2	0.909800034545279246
150	57	2	0.886795791212169116
151	41	2	0.92964271716194713
152	42	2	0.917918251275569363
153	43	2	0.909859730625942276
154	44	2	0.925952255589310491
155	45	2	0.913388691386414875
156	46	2	0.933691448739972119
157	47	2	0.915158108572548867
158	48	2	0.889296778528892662
159	49	2	0.915546039640620868
160	50	2	0.925952255589310491
161	51	2	0.857366244829298685
162	52	2	0.921853121576263423
163	53	2	0.84679073270450067
164	54	2	0.907511948120084178
165	55	2	0.910517178882412126
166	58	2	0.920668724371673686
167	59	2	0.918460840114138199
168	60	2	0.932519351592582257
169	61	2	0.932863816872787299
170	62	2	0.689615602769276914
171	63	2	0.689615602769276914
172	64	2	0.915610395826310985
173	65	2	0.915358026008256442
174	66	2	0.917760747010764044
175	67	2	0.326762279636230446
176	68	2	0.909951268353860532
177	69	2	0.899886928980132117
178	70	2	0.901135565274745143
179	100	2	0.575270121420510372
180	71	2	0.917343876582009332
181	72	2	0.908080668383076328
182	73	2	0.913507315115114626
183	74	2	0.913509967510862664
184	75	2	0.857366244829298685
185	76	2	0.87080027412437544
186	77	2	0.733235901708038429
189	80	2	0.90848963906914626
193	84	2	0.909859730625942276
198	89	2	0.923364272025315014
202	93	2	0.914658866299282836
206	97	2	0.911251781764945479
211	103	2	0.920744673442148498
215	107	2	0.926259346219252211
219	3	3	0.909284053414702087
224	8	3	0.919417902004754484
228	25	3	0.897431503156367216
232	15	3	0.638130114757768152
237	20	3	0.814217683335191955
241	24	3	0.896690696009616928
245	29	3	0.919890308431084436
250	34	3	0.929364440429817362
254	38	3	0.849785589760077342
258	57	3	0.919130072842100798
263	45	3	0.929038193432605186
267	49	3	0.900646941247655652
271	53	3	0.897701275737621707
276	60	3	0.935875226185498565
280	64	3	0.936223487443263114
284	68	3	0.946011609910468509
289	72	3	0.912677284326584126
293	76	3	0.910361161915852035
297	80	3	0.92187081444082275
302	85	3	0.938250249475073739
306	89	3	0.936861458348589471
310	93	3	0.935452652741983859
315	98	3	0.690440547725920561
319	103	3	0.934747801530188327
323	107	3	0.961225987004993399
325	1	4	0.900875563182027328
326	2	4	0.94923506630487553
327	3	4	0.950206407768844241
328	4	4	0.950222218564235832
329	5	4	0.935414294008619418
330	6	4	0.965055977247466057
331	7	4	0.955040212975684866
332	8	4	0.932293185133395874
333	9	4	0.942509775342850298
334	10	4	0.922362155468610778
335	11	4	0.918581374075187029
336	25	4	0.908596881353379016
337	12	4	0.932865034369835366
7957	110	145	0.891413302732007362
7958	111	145	0.926560243001935957
7959	112	145	0.946471677286650492
7961	114	145	0.901504588890034819
7962	141	145	0.904133802348316307
7963	115	145	0.935590664710157505
7965	117	145	0.926455471948890885
7966	118	145	0.918795185665784109
7967	119	145	0.925877931347951266
7968	120	145	0.921301994010952363
7970	122	145	0.874773518189815746
7971	123	145	0.923426750410626496
7972	124	145	0.920277444554593704
7974	126	145	0.900479837822709572
7975	127	145	0.923313018255780382
7976	128	145	0.925230319586813232
7978	130	145	0.932160050387544459
7979	131	145	0.901854911561003725
7980	132	145	0.906109856495086574
7981	133	145	0.910940789910589688
7983	135	145	0.939119033901978484
7984	136	145	0.931316598675341667
7985	137	145	0.94154205074132058
7987	139	145	0.932073777305939988
7988	140	145	0.903267868371120497
7989	142	145	0.926765862185549016
7991	144	145	0.886287929936437902
7992	145	145	0.787166652323452842
338	13	4	0.763772139740231504
339	14	4	0.763772139740231504
340	15	4	0.654092677717089788
341	16	4	0.944596375380027053
342	17	4	0.883471277113478615
343	18	4	0.927676879248513608
344	19	4	0.930156732268702102
345	20	4	0.814985892842394977
346	21	4	0.923861999579194126
347	22	4	0.912710679930240021
348	23	4	0.934336390307544895
349	24	4	0.889363934548014878
350	26	4	0.877813494897578761
351	27	4	0.918526195396192957
352	28	4	0.914793817210692306
353	29	4	0.927718302730359823
354	30	4	0.911011953313738299
355	31	4	0.917957610543105651
356	32	4	0.956045825666536619
357	33	4	0.892834854036760883
358	34	4	0.915256697132924568
359	35	4	0.928666675269012587
360	36	4	0.925062314476867154
361	37	4	0.909938165156219281
362	38	4	0.860244756207557359
363	39	4	0.940611383543177859
364	40	4	0.927577724290398198
365	56	4	0.915782332618818473
366	57	4	0.907105785250865049
367	41	4	0.923549502137169909
368	42	4	0.926548944155096255
369	43	4	0.928164183564668455
370	44	4	0.915983237527939642
371	45	4	0.92490412712387915
374	48	4	0.950779205653145221
378	52	4	0.91902473589840028
383	59	4	0.912710679930240021
387	63	4	0.763772139740231504
391	67	4	0.379118965562707078
396	71	4	0.923548082403384041
400	75	4	0.879603962180148913
404	79	4	0.917709866401323127
409	84	4	0.928164183564668455
413	88	4	0.616333730727144924
417	92	4	0.935412357122436977
422	97	4	0.925066538941106131
426	102	4	0.951074899965857479
430	106	4	0.93206717650133819
435	3	5	0.920110424353536183
439	7	5	0.954871098287193298
443	11	5	0.950080984444733767
448	15	5	0.618243439797687033
452	19	5	0.96663540471362619
456	23	5	0.953954993725129818
461	29	5	0.930272394994782093
465	33	5	0.905449528953800042
469	37	5	0.938413909807848667
474	57	5	0.912342120165104409
478	44	5	0.929675690860606085
482	48	5	0.918585971065236429
487	53	5	0.864783341475538814
491	59	5	0.937017007872839924
495	63	5	0.723860646538343144
500	68	5	0.959507743706326077
504	71	5	0.940053395670450875
508	75	5	0.916669865926222793
510	77	5	0.774552065291511327
511	78	5	0.894764167645845987
512	79	5	0.928655977890697537
513	80	5	0.946561091737118887
514	81	5	0.933244938053024331
515	82	5	0.952884777075186817
516	83	5	0.932321013917349783
517	84	5	0.930526180736062747
518	85	5	0.953646805050937463
519	86	5	0.926742574358860871
520	87	5	0.914042562803901393
521	88	5	0.635112963000276087
522	89	5	0.950080984444733767
523	90	5	0.934575491912262302
524	91	5	0.944877777454288137
525	92	5	0.941537448194790794
526	93	5	0.948936846408248491
527	94	5	0.929887086314133304
528	95	5	0.925402985716184734
529	96	5	0.930661581017967698
530	97	5	0.92844316926681647
531	98	5	0.704913403702057018
532	99	5	0.951877509050867099
533	101	5	0.945629726442520635
534	102	5	0.941672202436721006
535	103	5	0.951858393618507659
536	104	5	0.94331826462899826
537	105	5	0.918224724221327282
538	106	5	0.934072833047082995
539	107	5	0.952793394905147806
540	108	5	0.934499877799058964
541	1	6	0.90927057094066166
542	2	6	0.926001515496943761
543	3	6	0.886886493905085005
544	4	6	0.926270088005122005
545	5	6	0.908910543344191968
546	6	6	0.907306999456250929
547	7	6	0.91231402847712495
548	8	6	0.901738944290164879
549	9	6	0.919010149780302488
550	10	6	0.903394847255159616
551	11	6	0.934849045566423675
552	25	6	0.883853614701342494
553	12	6	0.928117648466694867
554	13	6	0.652884736733833515
555	14	6	0.652884736733833515
556	15	6	0.640218477220739546
559	18	6	0.897459324294358152
563	22	6	0.885695664391331516
568	28	6	0.864589922916492948
572	32	6	0.910601056296587719
576	36	6	0.903510296434552052
581	56	6	0.890334772046218914
585	43	6	0.881032018561070829
589	47	6	0.894693413183770603
594	52	6	0.919155762507059437
598	58	6	0.904959033488801579
602	62	6	0.652884736733833515
607	67	6	0.403884659217082886
611	100	6	0.615171210856176764
615	74	6	0.89554288107631097
620	79	6	0.908242142607239122
624	83	6	0.912041125501709127
628	87	6	0.880488114895145224
633	92	6	0.893642264458124669
637	96	6	0.883185388638359825
641	101	6	0.882647261825140417
646	106	6	0.930391595335059218
650	2	7	0.908632211714704319
654	6	7	0.898691692478124748
659	11	7	0.913901678055187405
663	14	7	0.611439431381107457
667	18	7	0.878364653809611706
672	23	7	0.893966953709144474
676	28	7	0.85249140979424709
680	32	7	0.89456705315864582
685	37	7	0.880346409411332687
689	56	7	0.880407237011839094
693	43	7	0.870668835333360702
695	45	7	0.905243201363244432
696	46	7	0.916946294212354518
697	47	7	0.890415846597435001
698	48	7	0.886485211042329802
699	49	7	0.883013393650032397
700	50	7	0.890924097036571272
701	51	7	0.837739483784304406
702	52	7	0.896890746315450627
703	53	7	0.880390400463056944
704	54	7	0.922103695735445039
705	55	7	0.867772046034917754
706	58	7	0.888898858105628298
707	59	7	0.876931735466043638
708	60	7	0.92229925033149418
709	61	7	0.920065716024836
710	62	7	0.611439431381107457
711	63	7	0.611439431381107457
712	64	7	0.886228652730929767
713	65	7	0.891702232289640739
714	66	7	0.887525939478282067
715	67	7	0.39777430861112939
716	68	7	0.902689677282749403
717	69	7	0.887656111918983637
718	70	7	0.930188802809073678
719	100	7	0.580344627471042207
720	71	7	0.873120362502502578
721	72	7	0.856722372555551948
722	73	7	0.890915619378646162
723	74	7	0.889146473460215025
724	75	7	0.837739483784304406
725	76	7	0.900379372254846988
726	77	7	0.688342665692567968
727	78	7	0.822641180325632715
728	79	7	0.888139001373728143
729	80	7	0.878033430973777951
730	81	7	0.852822241903827272
731	82	7	0.917327970767223388
732	83	7	0.891805781187394508
733	84	7	0.870668835333360702
734	85	7	0.902036261141789586
735	86	7	0.901370744117406475
736	87	7	0.866009270448515611
737	88	7	0.608391187745342732
738	89	7	0.913901678055187405
739	90	7	0.903998280983120184
740	91	7	0.893644147579310655
741	92	7	0.883288493301700228
744	95	7	0.875164322401691508
748	99	7	0.90726264515183741
753	105	7	0.852164439933035145
757	1	8	0.897197212424457047
761	5	8	0.921389212654602607
766	10	8	0.928687051220329685
770	13	8	0.713612906041631412
774	17	8	0.908562682943929834
779	22	8	0.9306344333372355
783	27	8	0.937194371766586265
787	31	8	0.922209941022760549
792	36	8	0.939399949023372094
796	40	8	0.945404549827915552
800	42	8	0.928361666142220265
805	47	8	0.937584024379238046
809	51	8	0.884675259373303602
813	55	8	0.923948268359740421
818	62	8	0.713612906041631412
822	66	8	0.927220483871302514
826	70	8	0.927228073349393389
831	74	8	0.940357306916662528
835	78	8	0.876954333856722834
839	82	8	0.94795038715332347
844	87	8	0.915406756960273404
848	91	8	0.94317679739839444
852	95	8	0.92036331129172777
857	101	8	0.910400949997761111
861	105	8	0.894128245428137736
865	1	9	0.867038000998307856
870	6	9	0.901482917855244703
874	10	9	0.894392968004312339
878	13	9	0.700341353535226196
880	15	9	0.65329632365425605
881	16	9	0.917272224825711358
882	17	9	0.919210721942078757
883	18	9	0.931458190995448132
884	19	9	0.901816129529947053
885	20	9	0.791063027165414323
886	21	9	0.895125458500185989
887	22	9	0.886356618601572555
888	23	9	0.895779387365316926
889	24	9	0.877544398831448746
890	26	9	0.844240626362929847
891	27	9	0.907132412576444835
892	28	9	0.882038355325812651
893	29	9	0.920721928150618374
894	30	9	0.922923803552953448
895	31	9	0.882352390179187207
896	32	9	0.905947758705998862
897	33	9	0.887813898650728683
898	34	9	0.896336914266256723
899	35	9	0.903758579646508964
900	36	9	0.901828227931695592
901	37	9	0.894105335700736248
902	38	9	0.840446499701818617
903	39	9	0.907379532298522529
904	40	9	0.917718279910082146
905	56	9	0.904871260489465201
906	57	9	0.890747722454443669
907	41	9	0.912752300403968486
908	42	9	0.909729913369399679
909	43	9	0.90522102562196316
910	44	9	0.906530656402814716
911	45	9	0.906801664164681775
912	46	9	0.91740529043454544
913	47	9	0.918765861618796031
914	48	9	0.912164555239689867
915	49	9	0.913720924811895485
916	50	9	0.906530656402814716
917	51	9	0.846281813887202694
918	52	9	0.915008869304045902
919	53	9	0.848389775442520033
920	54	9	0.919054670051250966
921	55	9	0.897608912722355656
922	58	9	0.895125458500185989
923	59	9	0.886356618601572555
924	60	9	0.926117770040813193
925	61	9	0.926466044681762524
926	62	9	0.700341353535226196
929	65	9	0.895360820482177466
933	69	9	0.901758440943589368
938	73	9	0.891268643123254711
942	77	9	0.72798666883630947
946	81	9	0.875695764253252684
951	86	9	0.885907864975633563
955	90	9	0.953969541354279249
957	92	9	0.91901037515672146
964	99	9	0.909297176004439711
968	104	9	0.910555622427298816
972	108	9	0.892715098896531445
977	5	10	0.90387645230694813
981	9	10	0.926635599626494555
985	12	10	0.928249247064058314
990	17	10	0.874821650696069542
994	21	10	0.924942007464579774
998	26	10	0.87440157585178846
1003	31	10	0.903467529357317334
1007	35	10	0.911242547574880213
1011	39	10	0.908645366057540316
1016	42	10	0.913450730488328921
1020	46	10	0.941211283244612562
1024	50	10	0.89452233908805201
1029	55	10	0.896625596354496901
1033	61	10	0.922814396149448157
1037	65	10	0.924229552404053245
1042	70	10	0.919507506131483465
1046	73	10	0.926701101262459082
1050	77	10	0.722596576522122391
1055	82	10	0.942191120140741689
1059	86	10	0.921793320554574747
1063	90	10	0.910041358883894147
1065	92	10	0.917234377524856481
1066	93	10	0.92461459807194657
1067	94	10	0.917719429323811342
1068	95	10	0.90073271506407715
1069	96	10	0.900046027744928367
1070	97	10	0.909071581734429812
1071	98	10	0.655047559616923958
1072	99	10	0.930603048778903097
1073	101	10	0.904872519398638442
1074	102	10	0.931609353341900426
1075	103	10	0.926966077269110178
1076	104	10	0.918457737494380866
1077	105	10	0.890667482045384706
1078	106	10	0.91289576150178342
1079	107	10	0.929911973332249842
1080	108	10	0.926455471948890885
1081	1	11	0.893654079256641531
1082	2	11	0.953985403336831239
1083	3	11	0.897031907742134149
1084	4	11	0.926445786863651644
1085	5	11	0.896266290330626214
1086	6	11	0.912644453611939355
1087	7	11	0.937580557107163481
1088	8	11	0.917479205585614022
1089	9	11	0.9466945535647322
1090	10	11	0.929797864871790836
1091	11	11	0.942243921605783519
1092	25	11	0.893744951580156655
1093	12	11	0.940881656885918294
1094	13	11	0.696599635242774462
1095	14	11	0.696599635242774462
1096	15	11	0.598965978208281236
1097	16	11	0.946841400302009695
1098	17	11	0.909766793289962128
1099	18	11	0.910344874131395865
1100	19	11	0.960530648733438075
1101	20	11	0.799615395002161611
1102	21	11	0.926629933683621565
1103	22	11	0.926820358231693064
1104	23	11	0.938042866134102038
1105	24	11	0.88380367842516383
1106	26	11	0.882057772292001441
1107	27	11	0.936452890890178358
1108	28	11	0.890712865391594444
1109	29	11	0.916584448717152722
1110	30	11	0.929295937691034024
1111	31	11	0.907518965691467949
1114	34	11	0.929705568262020887
1118	38	11	0.841076730307115494
1123	41	11	0.953566795856121141
1127	45	11	0.94222375778365286
1131	49	11	0.891932204829753883
1136	54	11	0.913623946997769165
1140	60	11	0.945212652954312005
1144	64	11	0.927008531966506899
1149	69	11	0.914867728663282476
1153	72	11	0.90920494005104302
1157	76	11	0.903743177409008891
1162	81	11	0.917425850871746995
1166	85	11	0.930828749432012104
1170	89	11	0.942243921605783519
1175	94	11	0.924192854700006783
1179	98	11	0.692140997096560184
1183	103	11	0.939674365828740643
1188	108	11	0.918795185665784109
1192	4	12	0.925963722604022488
1196	8	12	0.934079190055589481
1201	12	12	0.957646971708237205
1205	16	12	0.951586496356059852
1209	20	12	0.81842521874413543
1214	26	12	0.894049291063392482
1218	30	12	0.95836748776205305
1222	34	12	0.945385702123105909
1227	39	12	0.92390852917957389
1231	41	12	0.958942039562753146
1235	45	12	0.960840726713890092
1240	50	12	0.950653396467328049
1244	54	12	0.932073254537432505
1248	60	12	0.954849719056288238
1250	62	12	0.726473026728653437
1251	63	12	0.726473026728653437
1252	64	12	0.94795837674136163
1253	65	12	0.953037737817841069
1254	66	12	0.948329756901761689
1255	67	12	0.308981706127836764
1256	68	12	0.941615507293346532
1257	69	12	0.935659827250331366
1258	70	12	0.927052375695374242
1259	100	12	0.598216877954870885
1260	71	12	0.941363305144042761
1261	72	12	0.939851018831244889
1262	73	12	0.949582407361353464
1263	74	12	0.951505771602169759
1264	75	12	0.905204263583401447
1265	76	12	0.903329814685042365
1266	77	12	0.770600634034573684
1267	78	12	0.893513116503207083
1268	79	12	0.951589994782024218
1269	80	12	0.947571470376809333
1270	81	12	0.941186686243248971
1271	82	12	0.945532277205784033
1272	83	12	0.936413073016595376
1273	84	12	0.941078188547543992
1274	85	12	0.955351040230935644
1275	86	12	0.921676724603418984
1276	87	12	0.913409551410127918
1277	88	12	0.606635312005121219
1278	89	12	0.958337392323213355
1279	90	12	0.927341669367118038
1280	91	12	0.946110858400284416
1281	92	12	0.943490507096918063
1282	93	12	0.948826940493662008
1283	94	12	0.946936574573760348
1284	95	12	0.937919135982277941
1285	96	12	0.939677644216046826
1286	97	12	0.919772566010536585
1287	98	12	0.731732704679329493
1288	99	12	0.955397968676000242
1289	101	12	0.927153939102639213
1290	102	12	0.928659429456675123
1291	103	12	0.949007729180840864
1292	104	12	0.950359920444553752
1293	105	12	0.9091816159236219
1294	106	12	0.937223242386444944
1295	107	12	0.949125640321764719
1296	108	12	0.925877931347951266
1299	3	13	0.914591247989827272
1303	7	13	0.930578787820921072
1308	25	13	0.895006865156552589
1312	15	13	0.616216735994860931
1316	19	13	0.918122059044052641
1321	24	13	0.896007535159287549
1325	29	13	0.901673960860443491
1329	33	13	0.907205065329741211
1334	38	13	0.844628212037664472
1338	57	13	0.886828712983057654
1342	44	13	0.888167590989102029
1347	49	13	0.867798132329499872
1351	53	13	0.876961317489433512
1355	59	13	0.892826096244159872
1360	64	13	0.913901137772336725
1364	68	13	0.933086606458857104
1368	71	13	0.899179970886538671
1373	76	13	0.924561478777014334
1377	80	13	0.909597479900030148
1381	84	13	0.8959984478321662
1386	89	13	0.92009522765343088
1390	93	13	0.911203825866780726
1394	97	13	0.924559840171398584
1399	103	13	0.917378131971109401
1403	107	13	0.941968156198553341
1407	3	14	0.910080442616041041
1412	8	14	0.909490479025396148
1416	25	14	0.874490218553587995
1420	15	14	0.621626599937706081
1425	20	14	0.812127469611389596
1429	24	14	0.879657857605655402
1433	29	14	0.927173885538650655
1435	31	14	0.921553970364103803
1436	32	14	0.938194475373111958
1437	33	14	0.878031237421471489
1438	34	14	0.926825779378009695
1439	35	14	0.928579251305197917
1440	36	14	0.928169252356946251
1441	37	14	0.926397590054162556
1442	38	14	0.840985177456104904
1443	39	14	0.937518406891911793
1444	40	14	0.928936996449349239
1445	56	14	0.926328165901165068
1446	57	14	0.901605724186501312
1447	41	14	0.930435375575580648
1448	42	14	0.92028837484825432
1449	43	14	0.926952115934510545
1450	44	14	0.913501416056474946
1451	45	14	0.928251577793642979
1452	46	14	0.948518779777959287
1453	47	14	0.927233633332994134
1454	48	14	0.917829289169729501
1455	49	14	0.90304601981231214
1456	50	14	0.913501416056474946
1457	51	14	0.878813489778696999
1458	52	14	0.925722684797370743
1459	53	14	0.865718700242829264
1460	54	14	0.928115138435002929
1461	55	14	0.914970609271206547
1462	58	14	0.923880800741869179
1463	59	14	0.91979643759748686
1464	60	14	0.919078102982841094
1465	61	14	0.919571275245681052
1466	62	14	0.76386952553925036
1467	63	14	0.76386952553925036
1468	64	14	0.940516861880558608
1469	65	14	0.92621289470940571
1470	66	14	0.95004008173018939
1471	67	14	0.283986811424549179
1472	68	14	0.914838166822501853
1473	69	14	0.926900510683947965
1474	70	14	0.891308036245234581
1475	100	14	0.556243691989474875
1476	71	14	0.928889895239896402
1477	72	14	0.921328836191291356
1478	73	14	0.928600235820671305
1479	74	14	0.924931113346184719
1480	75	14	0.878813489778696999
1481	76	14	0.891366059203896888
1484	79	14	0.917867133325220186
1488	83	14	0.92028837484825432
1493	88	14	0.600778636661776555
1497	92	14	0.944413850143806299
1501	96	14	0.908944859369816616
1506	102	14	0.918153116326629992
1510	106	14	0.915344554986126324
1514	2	15	0.894737909651004193
1519	7	15	0.877804695291582893
1523	11	15	0.891079861290801079
1527	14	15	0.617324715947316083
1532	19	15	0.871239881964682716
1536	23	15	0.872608576252186685
1540	28	15	0.853150530584264599
1545	33	15	0.888582755667304158
1549	37	15	0.8695615940348006
1553	56	15	0.857815575955354515
1558	44	15	0.870472034270249551
1562	48	15	0.888479247336340983
1566	52	15	0.877540582200290631
1571	59	15	0.870993065955928181
1575	63	15	0.617324715947316083
1579	67	15	0.396202427874883134
1584	71	15	0.864178446244345033
1588	75	15	0.816102173263026809
1592	79	15	0.866585102757707171
1597	84	15	0.866563572993208742
1601	88	15	0.611101143465567209
1605	92	15	0.871241171472703968
1610	97	15	0.903020050885376957
1614	102	15	0.877143972559300211
1618	106	15	0.901497311418148595
1620	108	15	0.874773518189815746
1621	1	16	0.892858906157385168
1622	2	16	0.9466441850010201
1623	3	16	0.916897047096572715
1624	4	16	0.923711663825626417
1625	5	16	0.922065820603840236
1626	6	16	0.922175782354727858
1627	7	16	0.938580395341528595
1628	8	16	0.914372733404700044
1629	9	16	0.952373519983041206
1630	10	16	0.933759452002597912
1631	11	16	0.934484758717233244
1632	25	16	0.903112126304415619
1633	12	16	0.936668964933657588
1634	13	16	0.71496856416382204
1635	14	16	0.71496856416382204
1636	15	16	0.619142250796064886
1637	16	16	0.949409532722030325
1638	17	16	0.89365726830747827
1639	18	16	0.922015073406947439
1640	19	16	0.94316513620358633
1641	20	16	0.809554384961907458
1642	21	16	0.9315005911731008
1643	22	16	0.927597039236242371
1644	23	16	0.940194111877453942
1645	24	16	0.888163055821765357
1646	26	16	0.869236051982325342
1647	27	16	0.94522788369322952
1648	28	16	0.914885653427335077
1649	29	16	0.931374181291205083
1650	30	16	0.921050420721745589
1651	31	16	0.919146262319771923
1652	32	16	0.941860869331997419
1653	33	16	0.901892978055893968
1654	34	16	0.926039401415123309
1655	35	16	0.942288046165925541
1656	36	16	0.938615309507977447
1657	37	16	0.928840335958001306
1658	38	16	0.880665834098436684
1659	39	16	0.937561934107083883
1660	40	16	0.941471284082542992
1661	56	16	0.913422023945251182
1662	57	16	0.914516454821343583
1663	41	16	0.936844064351383676
1664	42	16	0.934546635424841399
1665	43	16	0.927097353776473065
1666	44	16	0.924943922172910327
1669	47	16	0.927981600547042262
1673	51	16	0.893486220833971001
1678	58	16	0.9315005911731008
1682	62	16	0.71496856416382204
1686	66	16	0.932766570631753611
1691	100	16	0.593981340817322456
1695	74	16	0.935445743567321575
1699	78	16	0.888024933231491342
1704	83	16	0.934546635424841399
1708	87	16	0.896404596169848578
1712	91	16	0.939523582854660089
1717	96	16	0.923072086722068752
1721	101	16	0.912413346897224864
1725	105	16	0.893096420558900372
1730	2	17	0.964247422768884421
1734	6	17	0.939333609055130081
1738	10	17	0.936896106829978703
1743	14	17	0.78634729295858663
1747	18	17	0.959296684457293658
1751	22	17	0.949891031040891676
1756	28	17	0.945766715931397495
1760	32	17	0.954362958901448843
1764	36	17	0.95577174061910497
1769	56	17	0.958232361389992349
1773	43	17	0.956823700563592006
1777	47	17	0.943985573688427837
1782	52	17	0.96267383277476648
1786	58	17	0.949436453395991142
1790	62	17	0.78634729295858663
1795	67	17	0.320180331393811357
1799	100	17	0.591732607215066819
1803	74	17	0.946869108201410903
1805	76	17	0.903184937724484493
1806	77	17	0.777851575593751399
1807	78	17	0.904496754436047157
1808	79	17	0.962905474929769745
1809	80	17	0.948930354701286172
1810	81	17	0.946342400710947218
1811	82	17	0.947632604679337187
1812	83	17	0.950597499956491898
1813	84	17	0.956823700563592006
1814	85	17	0.967408206227977074
1815	86	17	0.923369950377152193
1816	87	17	0.921754079481627131
1817	88	17	0.619163340730581879
1818	89	17	0.96174851146158169
1819	90	17	0.947843364682571465
1820	91	17	0.960425311308142682
1821	92	17	0.959864939556280938
1822	93	17	0.958036799396293048
1823	94	17	0.949663764435308866
1824	95	17	0.952562507104132261
1825	96	17	0.943690628042616053
1826	97	17	0.920737186387308171
1827	98	17	0.731568817707313301
1828	99	17	0.95456386419908823
1829	101	17	0.932306828343738903
1830	102	17	0.923609403003112228
1831	103	17	0.952512542953135477
1832	104	17	0.960775497016561286
1833	105	17	0.916060935852596514
1834	106	17	0.950018331330919508
1835	107	17	0.949112062885558494
1836	108	17	0.920277444554593704
1837	1	18	0.921418189094850404
1838	2	18	0.968630792781226879
1839	3	18	0.939576157048489402
1840	4	18	0.937756341451580155
1841	5	18	0.94974193084300107
1842	6	18	0.952942724497907845
1843	7	18	0.951596849014508583
1844	8	18	0.941277845492015208
1845	9	18	0.9572608318051955
1846	10	18	0.937837043835757278
1847	11	18	0.94622588895337012
1848	25	18	0.921362454696515676
1849	12	18	0.949411429891596548
1850	13	18	0.733253032863131482
1851	14	18	0.733253032863131482
1854	17	18	0.902750875768574823
1858	21	18	0.950875159008614745
1863	27	18	0.941103779483839831
1867	31	18	0.930807804076135614
1871	35	18	0.952908280589551238
1876	40	18	0.947366007428173562
1880	42	18	0.949789525631641207
1884	46	18	0.952164860020362713
1889	51	18	0.897509541745079242
1893	55	18	0.93515176176286019
1897	61	18	0.949207386225299654
1902	66	18	0.95138037006686349
1906	70	18	0.93810921872407671
1910	73	18	0.945747106826726247
1915	78	18	0.895497686137351034
1919	82	18	0.964095230250676227
1923	86	18	0.942522905206621409
1928	91	18	0.952394255208038221
1932	95	18	0.936475408106733131
1936	99	18	0.948702029175277572
1941	105	18	0.916050711606765655
1945	1	19	0.914644529563184316
1949	5	19	0.909308338079165224
1954	10	19	0.895340947068542725
1958	13	19	0.650415436127303348
1962	17	19	0.889615341719316222
1967	22	19	0.889861119103968479
1971	27	19	0.906358258700054265
1975	31	19	0.874674852259719415
1980	36	19	0.906373324992145846
1984	40	19	0.903311760497040539
1988	42	19	0.909069033756801037
1990	44	19	0.905127850490293095
1991	45	19	0.9123331689873172
1992	46	19	0.926209506367173363
1993	47	19	0.895583382240873083
1994	48	19	0.908540970808597526
1995	49	19	0.874200078786097845
1996	50	19	0.905127850490293095
1997	51	19	0.853995868943620007
1998	52	19	0.915296660911746551
1999	53	19	0.863507129339302737
2000	54	19	0.91877140296305615
2001	55	19	0.881969134370150676
2002	58	19	0.9082172936809223
2003	59	19	0.889861119103968479
2004	60	19	0.925677141665011916
2005	61	19	0.923116978736305382
2006	62	19	0.650415436127303348
2007	63	19	0.650415436127303348
2008	64	19	0.893654389719933384
2009	65	19	0.89964485883728984
2010	66	19	0.891789968015734957
2011	67	19	0.402339154013702238
2012	68	19	0.913263280925098342
2013	69	19	0.897614254746414986
2014	70	19	0.939525929046708286
2015	100	19	0.616368052837463321
2016	71	19	0.893649785135862018
2017	72	19	0.873438032184873481
2018	73	19	0.900909707683060335
2019	74	19	0.899211546385719873
2020	75	19	0.853995868943620007
2021	76	19	0.920318959059075681
2022	77	19	0.706142334633438673
2023	78	19	0.839836391438614327
2024	79	19	0.905029297498043728
2025	80	19	0.896062669609186901
2026	81	19	0.869786905897722784
2027	82	19	0.928523791938596244
2028	83	19	0.909069033756801037
2029	84	19	0.882686968836993713
2030	85	19	0.902744697699943033
2031	86	19	0.916596898971228091
2032	87	19	0.886336808663310438
2033	88	19	0.626815979269308987
2034	89	19	0.927050730561410408
2035	90	19	0.907821238032638478
2036	91	19	0.897436356561914117
2039	94	19	0.911336655471403745
2043	98	19	0.696104871268713676
2048	104	19	0.890897463753075547
2052	108	19	0.900479837822709572
2056	4	20	0.924930012407706226
2061	9	20	0.970880122706982873
2065	12	20	0.964382101401796143
2069	16	20	0.956436146580707414
2074	21	20	0.954340557334369066
2078	26	20	0.909939238670605888
2082	30	20	0.963537547086311008
2087	35	20	0.960849121977062848
2091	39	20	0.947705156967024509
2095	41	20	0.959291182135836418
2100	46	20	0.949817641807004787
2104	50	20	0.956174887747823221
2108	54	20	0.939047139252198848
2113	61	20	0.949462791517351024
2117	65	20	0.956204086457408398
2121	69	20	0.953904141788497029
2126	73	20	0.955018757534458973
2130	77	20	0.792888268615136838
2134	81	20	0.959419527319090748
2139	86	20	0.923179260505045618
2143	90	20	0.941528180718299357
2147	94	20	0.948560163188577277
2152	99	20	0.956540054129526918
2156	104	20	0.963875026121713607
2160	108	20	0.923313018255780382
2165	5	21	0.917833811121398946
2169	9	21	0.939765623552797802
2173	12	21	0.939363472659254573
2175	14	21	0.698641488693816926
2176	15	21	0.621810136294179916
2177	16	21	0.948230282740048169
2178	17	21	0.892145977055222916
2179	18	21	0.905672184794684254
2180	19	21	0.954882748538878334
2181	20	21	0.805670444260103702
2182	21	21	0.934867196674697976
2183	22	21	0.920911586590505538
2184	23	21	0.937747587157581108
2185	24	21	0.885933560581542934
2186	26	21	0.87587199152816031
2187	27	21	0.927195572158181602
2188	28	21	0.897380363891216115
2189	29	21	0.907903892506510934
2190	30	21	0.915728302750933754
2191	31	21	0.91216182873714069
2192	32	21	0.944345326499114845
2193	33	21	0.892746022443895226
2194	34	21	0.927634991745009962
2195	35	21	0.915463502086858227
2196	36	21	0.930156170277534389
2197	37	21	0.921253302369911209
2198	38	21	0.830080168287258835
2199	39	21	0.907594803306988274
2200	40	21	0.927210999207621955
2201	56	21	0.918210554366368892
2202	57	21	0.893542606452932486
2203	41	21	0.945096245962988135
2204	42	21	0.921452639965192666
2205	43	21	0.909214133113298573
2206	44	21	0.913114765353276847
2207	45	21	0.937210045648247614
2208	46	21	0.952553861810736646
2209	47	21	0.90879893925501809
2210	48	21	0.910273881145906461
2211	49	21	0.874856015705912649
2212	50	21	0.913114765353276847
2213	51	21	0.886146663961318692
2214	52	21	0.930948975445905047
2215	53	21	0.876990233265756536
2216	54	21	0.920090642909737189
2217	55	21	0.902897388037072757
2218	58	21	0.934867196674697976
2219	59	21	0.920911586590505538
2220	60	21	0.932525570454702968
2221	61	21	0.932043829700211268
2224	64	21	0.923964579736698322
2228	68	21	0.935954924425707713
2233	72	21	0.906482000188142956
2237	76	21	0.926336681682444318
2241	80	21	0.935039695908904123
2246	85	21	0.929059325002573155
2250	89	21	0.932104309997851099
2254	93	21	0.934281210203489532
2259	98	21	0.673920030104951939
2263	103	21	0.935140102652974869
2267	107	21	0.943136285389118423
2272	4	22	0.942033076451081253
2276	8	22	0.937937753974254051
2280	25	22	0.920290875082391491
2285	16	22	0.950248955420658126
2289	20	22	0.859781611120085887
2293	24	22	0.907752900827998199
2298	30	22	0.940812686608977211
2302	34	22	0.944158338119305496
2306	38	22	0.862529221130954982
2311	41	22	0.962058368024035215
2315	45	22	0.953986283777506383
2319	49	22	0.896225303812551943
2324	54	22	0.933524668700707383
2328	60	22	0.943833968094269005
2332	64	22	0.935239163231249448
2337	69	22	0.938767001368323362
2341	72	22	0.923069286031254044
2345	76	22	0.919394814693222595
2350	81	22	0.932335155794638659
2354	85	22	0.950997108666606583
2358	89	22	0.952969338399715205
2360	91	22	0.935580142675202842
2361	92	22	0.929579859285083798
2362	93	22	0.934944326740723475
2363	94	22	0.936775780408355963
2364	95	22	0.93004818163004721
2365	96	22	0.926700450926549069
2366	97	22	0.928996691638482641
2367	98	22	0.720488915393456941
2368	99	22	0.95165947078817581
2369	101	22	0.935570603941068057
2370	102	22	0.933240106432876804
2371	103	22	0.93962981903680165
2372	104	22	0.934426225627860818
2373	105	22	0.911440570927496196
2374	106	22	0.929703249829200273
2375	107	22	0.950954429276352542
2376	108	22	0.92938970239322527
2377	1	23	0.916736058744142324
2378	2	23	0.965236189844800418
2379	3	23	0.907375846346118675
2380	4	23	0.940891950798185994
2381	5	23	0.920799961650578869
2382	6	23	0.93832923914655364
2383	7	23	0.948203387225023508
2384	8	23	0.93930411467380226
2385	9	23	0.95787080576810768
2386	10	23	0.937916963737640774
2387	11	23	0.952853222316085935
2388	25	23	0.90048976611336351
2389	12	23	0.960803549962138015
2390	13	23	0.724546140384341064
2391	14	23	0.724546140384341064
2392	15	23	0.646646561006842702
2393	16	23	0.947003618963863425
2394	17	23	0.912252244311717697
2395	18	23	0.919624337325716468
2396	19	23	0.964769533190641626
2397	20	23	0.829090423065878324
2398	21	23	0.934842077589898013
2399	22	23	0.930549193173231148
2400	23	23	0.952062220091955846
2401	24	23	0.903431091492200689
2402	26	23	0.914449744722434565
2403	27	23	0.938274316461926938
2404	28	23	0.903277351311102206
2405	29	23	0.922830165155223758
2406	30	23	0.93001802928899191
2409	33	23	0.891699408928422477
2413	37	23	0.934913048371072697
2418	57	23	0.915136505370738318
2422	44	23	0.922166864690692867
2426	48	23	0.907460076984737296
2431	53	23	0.866946788024353987
2435	59	23	0.930549193173231148
2439	63	23	0.724546140384341064
2444	68	23	0.966447659106669632
2448	71	23	0.92888610384485748
2452	75	23	0.907980155896740193
2457	80	23	0.951082523657291401
2461	84	23	0.918420836522409356
2465	88	23	0.631240411332644191
2470	93	23	0.938624609993587877
2474	97	23	0.923455147717226477
2478	102	23	0.937389373961439842
2483	107	23	0.949364938921986479
2487	3	24	0.902181234255507447
2491	7	24	0.921443822961684589
2496	25	24	0.874398519193718915
2500	15	24	0.604925436110077763
2504	19	24	0.928475389472219748
2509	24	24	0.87271347996141091
2513	29	24	0.912037971945076187
2517	33	24	0.892619529529845024
2522	38	24	0.836216919422368976
2526	57	24	0.894479486209343033
2530	44	24	0.899786468249918814
2535	49	24	0.897005316421976451
2539	53	24	0.861542408574502483
2543	59	24	0.90695394061065171
2545	61	24	0.926681190790231812
2546	62	24	0.683065969288894403
2547	63	24	0.683065969288894403
2548	64	24	0.922923692555401964
2549	65	24	0.915522376434214746
2550	66	24	0.921010902944534582
2551	67	24	0.29878782213857108
2552	68	24	0.919897190469962878
2553	69	24	0.905023263559873836
2554	70	24	0.905752158503791205
2555	100	24	0.564744057677193156
2556	71	24	0.904831355972070428
2557	72	24	0.89620692112028022
2558	73	24	0.916758907914594134
2559	74	24	0.913151181930532352
2560	75	24	0.876363654336480558
2561	76	24	0.905522084604394317
2562	77	24	0.740835511680130732
2563	78	24	0.891291494221020941
2564	79	24	0.900226437911901267
2565	80	24	0.91074035375697282
2566	81	24	0.897373835623530458
2567	82	24	0.923015893500556239
2568	83	24	0.910005194428385233
2569	84	24	0.903094346293586869
2570	85	24	0.925926759815515643
2571	86	24	0.904472273857718778
2572	87	24	0.890864208557500037
2573	88	24	0.6054335681330969
2574	89	24	0.932981587128110079
2575	90	24	0.933470310459886821
2576	91	24	0.931676679889884896
2577	92	24	0.927007999869025157
2578	93	24	0.918205515963131269
2579	94	24	0.929618664260115191
2580	95	24	0.907384917108758349
2581	96	24	0.895905653867144047
2582	97	24	0.916161358807294546
2583	98	24	0.689459128439255386
2584	99	24	0.933333510020340595
2585	101	24	0.899216104568912655
2586	102	24	0.908087681048382556
2587	103	24	0.925447164096013353
2588	104	24	0.922256131459658568
2589	105	24	0.888290027363455303
2590	106	24	0.924337514311585839
2591	107	24	0.93934496562035863
2594	2	25	0.937231728659197461
2598	6	25	0.914503395308604694
2603	11	25	0.935112711200103419
2607	14	25	0.726754555738602925
2611	18	25	0.936118441871796825
2616	23	25	0.920981550520984737
2620	28	25	0.905978522877729842
2624	32	25	0.92622450092576547
2629	37	25	0.916581675253403838
2633	56	25	0.92027586176972731
2637	43	25	0.920542634047523789
2642	48	25	0.907910984729539794
2646	52	25	0.925797057899290232
2650	58	25	0.916703394863332299
2655	63	25	0.726754555738602925
2659	67	25	0.311804028521681487
2663	100	25	0.593121136454354936
2668	75	25	0.877512728800741826
2672	79	25	0.917954045673253005
2676	83	25	0.918251180312408266
2681	88	25	0.614512287396027923
2685	92	25	0.943016234212496585
2689	96	25	0.908906760978916095
2694	102	25	0.909870337277393637
2698	106	25	0.919378343898711425
2702	2	26	0.952719132030228844
2707	7	26	0.933401271059666193
2711	11	26	0.945940412583193502
2715	14	26	0.708957825649644935
2720	19	26	0.94849255386229081
2724	23	26	0.940315785856353448
2728	28	26	0.906087270743600848
2730	30	26	0.928460282829959072
2731	31	26	0.927799350637922626
2732	32	26	0.935525426846969266
2733	33	26	0.888295197062396125
2734	34	26	0.945421590158679104
2735	35	26	0.937857862522850749
2736	36	26	0.944806003066697597
2737	37	26	0.942083349061818454
2738	38	26	0.835275056054044063
2739	39	26	0.903520464056920325
2740	40	26	0.940444801772416628
2741	56	26	0.946998761735241557
2742	57	26	0.894524628071766803
2743	41	26	0.955812125819722413
2744	42	26	0.9245080010255462
2745	43	26	0.926351675379952777
2746	44	26	0.926969095409759025
2747	45	26	0.966747101841004652
2748	46	26	0.95488698193918331
2749	47	26	0.918398997239707859
2750	48	26	0.890901013486805837
2751	49	26	0.886551333344637205
2752	50	26	0.926969095409759025
2753	51	26	0.874481780624536076
2754	52	26	0.949126737524933151
2755	53	26	0.855991169983240763
2756	54	26	0.927352624787688984
2757	55	26	0.912929240179401247
2758	58	26	0.940198811694571313
2759	59	26	0.936426729475065223
2760	60	26	0.936599281353813873
2761	61	26	0.935698796124254217
2762	62	26	0.708957825649644935
2763	63	26	0.708957825649644935
2764	64	26	0.928254784470636585
2765	65	26	0.932304997277393466
2766	66	26	0.938116021332499272
2767	67	26	0.31110036735105645
2768	68	26	0.93355331955515608
2769	69	26	0.935525749980192223
2770	70	26	0.927469121457924262
2771	100	26	0.541991299263401616
2772	71	26	0.929308928692087366
2773	72	26	0.921097771055503722
2774	73	26	0.93771829289663533
2775	74	26	0.938141829720938625
2776	75	26	0.874481780624536076
2779	78	26	0.891983555677934303
2783	82	26	0.946380918559406759
2788	87	26	0.913527056227494416
2792	91	26	0.928193000005423485
2796	95	26	0.930833029274981238
2801	101	26	0.930647654078076036
2805	105	26	0.905416733978777977
2809	1	27	0.901348250984664867
2814	6	27	0.930774626941430649
2818	10	27	0.929334038493948356
2822	13	27	0.694374313888852401
2827	18	27	0.915755381447445393
2831	22	27	0.93657769972151661
2835	27	27	0.934985053196261129
2840	32	27	0.943305736057263311
2844	36	27	0.942230170719380755
2848	40	27	0.941110614663649758
2853	43	27	0.925368218925651909
2857	47	27	0.933035031988841856
2861	51	27	0.903220314846734484
2866	58	27	0.940039259981393149
2870	62	27	0.694374313888852401
2874	66	27	0.935058054484407042
2879	100	27	0.586993008154833462
2883	74	27	0.942504147688669747
2887	78	27	0.877524174278980329
2892	83	27	0.929019645179094855
2896	87	27	0.907761016038281188
2900	91	27	0.935134678078476167
2905	96	27	0.927698212157621827
2909	101	27	0.934622238748478384
2913	105	27	0.914271633754048962
2915	107	27	0.949462638966368622
2916	108	27	0.926754291591164292
2917	1	28	0.928449189059739166
2918	2	28	0.976252837430316212
2919	3	28	0.928436567303265958
2920	4	28	0.950467260865044183
2921	5	28	0.935134990575739899
2922	6	28	0.952653695371176057
2923	7	28	0.963730132436962816
2924	8	28	0.947883757398580662
2925	9	28	0.963969455873115555
2926	10	28	0.945575218366519699
2927	11	28	0.961286423161939574
2928	25	28	0.916575722201506515
2929	12	28	0.965968292145082841
2930	13	28	0.746999791049337003
2931	14	28	0.746999791049337003
2932	15	28	0.631438594927620223
2933	16	28	0.963463944492145452
2934	17	28	0.921063520443475503
2935	18	28	0.934145841382080677
2936	19	28	0.963118918094974741
2937	20	28	0.822685807138943459
2938	21	28	0.948614270616460531
2939	22	28	0.939335386639676306
2940	23	28	0.955235846594107985
2941	24	28	0.916613668863034858
2942	26	28	0.90670700732015741
2943	27	28	0.939433701318346803
2944	28	28	0.91993100854887655
2945	29	28	0.94287503051204391
2946	30	28	0.940808417297970156
2947	31	28	0.931153826751105251
2948	32	28	0.965147317336923827
2949	33	28	0.909156112884813794
2950	34	28	0.94992576184813271
2951	35	28	0.949634667739081451
2952	36	28	0.938974776825501678
2953	37	28	0.938914055341425025
2954	38	28	0.85923124409513485
2955	39	28	0.94290055093782621
2956	40	28	0.953514928761163061
2957	56	28	0.945878949400783431
2958	57	28	0.925634546647052026
2959	41	28	0.97310529352945152
2960	42	28	0.94146167515240442
2961	43	28	0.938070084322956022
2964	46	28	0.959312442988954017
2968	50	28	0.938603440673391964
2973	55	28	0.926155894404155799
2977	61	28	0.953938253103487899
2981	65	28	0.949613619034773926
2986	70	28	0.939316152001736016
2990	73	28	0.950903283214358241
2994	77	28	0.761667330246947216
2999	82	28	0.963926539595353682
3003	86	28	0.94064067780595384
3007	90	28	0.939688379611284819
3012	95	28	0.937484385754971949
3016	99	28	0.963309261644357484
3020	104	28	0.946201235162327903
3025	1	29	0.897871117943031205
3029	5	29	0.923783291526619865
3033	9	29	0.953409691364112355
3038	13	29	0.721243826548889633
3042	17	29	0.917340591914306169
3046	21	29	0.94183692345216985
3051	27	29	0.9432663798962031
3055	31	29	0.928301355456293775
3059	35	29	0.934831047799564718
3064	40	29	0.953612793996397201
3068	42	29	0.933673962156228887
3072	46	29	0.947468423019350414
3077	51	29	0.883824940003526738
3081	55	29	0.926367379524576928
3085	61	29	0.952968955833820797
3090	66	29	0.935049261123141684
3094	70	29	0.926726406752092502
3098	73	29	0.944311592870986649
3100	75	29	0.883824940003526738
3101	76	29	0.906334459914525437
3102	77	29	0.760413500287169253
3103	78	29	0.881159554820396318
3104	79	29	0.937051253660740935
3105	80	29	0.941060715945927218
3106	81	29	0.926017684453505519
3107	82	29	0.949449902582292338
3108	83	29	0.933673962156228887
3109	84	29	0.932803695396459354
3110	85	29	0.944018202588300492
3111	86	29	0.92898354180200049
3112	87	29	0.918177658700279897
3113	88	29	0.607861064956854991
3114	89	29	0.94723414265773187
3115	90	29	0.925289893708513667
3116	91	29	0.949377317061786963
3117	92	29	0.944529061876757337
3118	93	29	0.946395707120718188
3119	94	29	0.941437378894871113
3120	95	29	0.930420661958834549
3121	96	29	0.930440274683716151
3122	97	29	0.92432803324039059
3123	98	29	0.714487865754948492
3124	99	29	0.949665462513074043
3125	101	29	0.91452730181115327
3126	102	29	0.935980148168771175
3127	103	29	0.952371487250438298
3128	104	29	0.943893676555142669
3129	105	29	0.897649580009680981
3130	106	29	0.938727144920664225
3131	107	29	0.949764801104937106
3132	108	29	0.931316598675341667
3133	1	30	0.913976475067791561
3134	2	30	0.961276704179725106
3135	3	30	0.916438850616193346
3136	4	30	0.950899626167006295
3137	5	30	0.931872165364928784
3138	6	30	0.935241749925868837
3139	7	30	0.952694796563063662
3140	8	30	0.941249075617916486
3141	9	30	0.955638722690420161
3142	10	30	0.942060645635952376
3143	11	30	0.942134742493783151
3144	25	30	0.915955959807859155
3145	12	30	0.952429065477621517
3146	13	30	0.704175753963072193
3149	16	30	0.952506055647896921
3153	20	30	0.837938556195002793
3158	26	30	0.890005622383197137
3162	30	30	0.928580862212008085
3166	34	30	0.931142327597062391
3171	39	30	0.93059433642298206
3175	41	30	0.953244118915266059
3179	45	30	0.944209634485985272
3184	50	30	0.915712487860439905
3188	54	30	0.942297715301143812
3192	60	30	0.940364302611616631
3197	65	30	0.955946937463243329
3201	69	30	0.936911029590923317
3205	72	30	0.918665896778255942
3210	77	30	0.764053984230739225
3214	81	30	0.922344405717337334
3218	85	30	0.943410392421004884
3223	90	30	0.910329419264989559
3227	94	30	0.933443928950217106
3231	98	30	0.699392034859328993
3236	104	30	0.943506433232976005
3240	108	30	0.94154205074132058
3244	4	31	0.912681836472861052
3249	9	31	0.909639714074222394
3253	12	31	0.915262985176585442
3257	16	31	0.913269282544648786
3262	21	31	0.894136669960214459
3266	26	31	0.862736302614340422
3270	30	31	0.886944335853111721
3275	35	31	0.896572089843280295
3279	39	31	0.891211470225056757
3283	41	31	0.91401375820591646
3285	43	31	0.874522962434740037
3286	44	31	0.856459048851326288
3287	45	31	0.894144709584754449
3288	46	31	0.919082591403907245
3289	47	31	0.900401376385464691
3290	48	31	0.870428507989111422
3291	49	31	0.832103437264551493
3292	50	31	0.856459048851326288
3293	51	31	0.922846616918377771
3294	52	31	0.906863107491025833
3295	53	31	0.822302162256650981
3296	54	31	0.899858441638160422
3297	55	31	0.860186814780136699
3298	58	31	0.894136669960214459
3299	59	31	0.892065675917024459
3300	60	31	0.888405408791937301
3301	61	31	0.88952181437034672
3302	62	31	0.659426309055660576
3303	63	31	0.659426309055660576
3304	64	31	0.901633711215179656
3305	65	31	0.900064935885849238
3306	66	31	0.886844390584986098
3307	67	31	0.290211332572427816
3308	68	31	0.911796479042977337
3309	69	31	0.890544516188592206
3310	70	31	0.891396034452190178
3311	100	31	0.576088729953687539
3312	71	31	0.885587291389991815
3313	72	31	0.87068925393705654
3314	73	31	0.900532173142515768
3315	74	31	0.898070210313240413
3316	75	31	0.922846616918377771
3317	76	31	0.893124675018779346
3318	77	31	0.711566811404490629
3319	78	31	0.825250905435344406
3320	79	31	0.85552415157822248
3321	80	31	0.892822906185585241
3322	81	31	0.865700730432202414
3323	82	31	0.927072298271804707
3324	83	31	0.874678130952123656
3325	84	31	0.874522962434740037
3326	85	31	0.909128516207386772
3327	86	31	0.899019448216169081
3328	87	31	0.884864823887319907
3329	88	31	0.563645244038997295
3330	89	31	0.90367917240564366
3331	90	31	0.910367039746779572
3334	93	31	0.900996348045288165
3338	97	31	0.870285764730672873
3343	103	31	0.900645072651482193
3347	107	31	0.908850174194199445
3351	3	32	0.905682030536256955
3356	8	32	0.922741782049686377
3360	25	32	0.900972051469841606
3364	15	32	0.641128262267975924
3369	20	32	0.826678899247580867
3373	24	32	0.896751637558461101
3377	29	32	0.914427501546520305
3382	34	32	0.915959676204847084
3386	38	32	0.851732590977856918
3390	57	32	0.910673226568812777
3395	45	32	0.922890810455009869
3399	49	32	0.88933048835601769
3403	53	32	0.896890795352805803
3408	60	32	0.926782786075917242
3412	64	32	0.941440108848962787
3416	68	32	0.931768785346200112
3417	69	32	0.928390927075359418
3425	76	32	0.907903617934362583
3429	80	32	0.905316144434031855
3434	85	32	0.939104643612738266
3438	89	32	0.925760188784706783
3442	93	32	0.932570216276148223
3447	98	32	0.685251221987520198
3451	103	32	0.925312118212558876
3455	107	32	0.936760018337093769
3460	4	33	0.914185885774427498
3464	8	33	0.896114544592745532
3468	25	33	0.879535167688006214
3470	13	33	0.644150839371809392
3471	14	33	0.644150839371809392
3472	15	33	0.631948872426587371
3473	16	33	0.926733449226843087
3474	17	33	0.897128395010115876
3475	18	33	0.893273144757863791
3476	19	33	0.924323567285620706
3477	20	33	0.774056904903165699
3478	21	33	0.90147782946956434
3479	22	33	0.890867978932449733
3480	23	33	0.90718418012746882
3481	24	33	0.871288774762789764
3482	26	33	0.835505202655351553
3483	27	33	0.918579874663361995
3484	28	33	0.863775938808896915
3485	29	33	0.8941601102471326
3486	30	33	0.902701916256258619
3487	31	33	0.873026591570188026
3488	32	33	0.911300610693253965
3489	33	33	0.887799745647744776
3490	34	33	0.894388651556696668
3491	35	33	0.893868619871005521
3492	36	33	0.903710337669448971
3493	37	33	0.903530029469117313
3494	38	33	0.820036548008910016
3495	39	33	0.888448447002949782
3496	40	33	0.90616619923854691
3497	56	33	0.905208366635891548
3498	57	33	0.880773270960405474
3499	41	33	0.927435847144969849
3500	42	33	0.906288901531193236
3501	43	33	0.884451033628245509
3502	44	33	0.906988969300943082
3503	45	33	0.917563722576831275
3504	46	33	0.920522143486461553
3505	47	33	0.892893240172913272
3506	48	33	0.904830700573744484
3507	49	33	0.885207664733839716
3508	50	33	0.906988969300943082
3509	51	33	0.85458722208860638
3510	52	33	0.911116545352827933
3511	53	33	0.87658622210224646
3512	54	33	0.919817091707844314
3513	55	33	0.877222703980755414
3514	58	33	0.90147782946956434
3515	59	33	0.890867978932449733
3516	60	33	0.923337164716348191
3519	63	33	0.644150839371809392
3523	67	33	0.369782874934283301
3528	71	33	0.894430725539946292
3532	75	33	0.85458722208860638
3536	79	33	0.906164164559293717
3541	84	33	0.884451033628245509
3545	88	33	0.646431439427509691
3549	92	33	0.901055822974784371
3554	97	33	0.910558275079381696
3558	102	33	0.901411514976450334
3562	106	33	0.91073347069596311
3567	3	34	0.902813814121138258
3571	7	34	0.93891424053407635
3575	11	34	0.946518175601774536
3580	15	34	0.625421138602587745
3584	19	34	0.952486099862761004
3588	23	34	0.941103043352879198
3593	29	34	0.91215146937998004
3597	33	34	0.89071010145175844
3601	37	34	0.923784720703231699
3606	57	34	0.905883281656276518
3610	44	34	0.914923212382082851
3614	48	34	0.903003845957814799
3619	53	34	0.865520419405843566
3623	59	34	0.91777003836792681
3627	63	34	0.706142327803867653
3632	68	34	0.958660200303806942
3636	71	34	0.915872330796808742
3640	75	34	0.898887720219741504
3645	80	34	0.937929435446620108
3649	84	34	0.906875077251221073
3653	88	34	0.621620188403624763
3655	90	34	0.920408393137276293
3656	91	34	0.933400364365815971
3657	92	34	0.928284262326579901
3658	93	34	0.924478454748574263
3659	94	34	0.92167559924791409
3660	95	34	0.918734828543087412
3661	96	34	0.917850274886499173
3662	97	34	0.920670968610337814
3663	98	34	0.69704417728121415
3664	99	34	0.951177375539587033
3665	101	34	0.93924542835148439
3666	102	34	0.931270542337006013
3667	103	34	0.926774017788634885
3668	104	34	0.917827357367905106
3669	105	34	0.91772397268856154
3670	106	34	0.926978947447234858
3671	107	34	0.942591305489682174
3672	108	34	0.926765862185549016
3673	1	35	0.914071863880959734
3674	2	35	0.926821762024778395
3675	3	35	0.890327539661439848
3676	4	35	0.926149160157265117
3677	5	35	0.906476259003354712
3678	6	35	0.903686493599375806
3679	7	35	0.912827742636001971
3680	8	35	0.903580395754756349
3681	9	35	0.920635569513533092
3682	10	35	0.907617295740516195
3683	11	35	0.934371761689467228
3684	25	35	0.886031680895429719
3685	12	35	0.929619120834272894
3686	13	35	0.639614053150460049
3687	14	35	0.639614053150460049
3688	15	35	0.619753099461279211
3689	16	35	0.933490915831814094
3690	17	35	0.895756043497986321
3691	18	35	0.89339762555136959
3692	19	35	0.913995477473534601
3693	20	35	0.779922582964338917
3694	21	35	0.911130219486894988
3695	22	35	0.890500338440874839
3696	23	35	0.905025914986408719
3697	24	35	0.871861782656147777
3698	26	35	0.823076666690211844
3699	27	35	0.918224312839905799
3700	28	35	0.862669600631896571
3701	29	35	0.891324265146574701
3704	32	35	0.912956670197855313
3708	36	35	0.910161060385786924
3713	56	35	0.888096781054681594
3717	43	35	0.880901554273187837
3721	47	35	0.898034366100782688
3726	52	35	0.928824554686508819
3730	58	35	0.911130219486894988
3734	62	35	0.639614053150460049
3739	67	35	0.392133385965287407
3743	100	35	0.594353852403170735
3747	74	35	0.900491663381504659
3752	79	35	0.910230437183335961
3756	83	35	0.909872699289001607
3760	87	35	0.874770520901195558
3765	92	35	0.892799474229087675
3769	96	35	0.885708005037531443
3773	101	35	0.88559857502118533
3778	106	35	0.928231223301078878
3782	2	36	0.919783160860668025
3786	6	36	0.90103868424024669
3791	11	36	0.897113804006799409
3795	14	36	0.655094196237066217
3799	18	36	0.871561246091019481
3804	23	36	0.916227070177386693
3808	28	36	0.872797805217690348
3812	32	36	0.907963991355180577
3817	37	36	0.902683313193629822
3821	56	36	0.87015209174875574
3825	43	36	0.883815733632738465
3830	48	36	0.87086077780773008
3834	52	36	0.915166520974626918
3838	58	36	0.906605773884734512
3840	60	36	0.907990079815333861
3841	61	36	0.905397019409309833
3842	62	36	0.655094196237066217
3843	63	36	0.655094196237066217
3844	64	36	0.88604936433847914
3845	65	36	0.918682094337598731
3846	66	36	0.871775146241655419
3847	67	36	0.324590414840252917
3848	68	36	0.909025866042780795
3849	69	36	0.893430391908158761
3850	70	36	0.892195447694439925
3851	100	36	0.550245272173471744
3852	71	36	0.886656320171493095
3853	72	36	0.889047831499625518
3854	73	36	0.91556011920618019
3855	74	36	0.92038135758565609
3856	75	36	0.869531381458390151
3857	76	36	0.870597458248460798
3858	77	36	0.718901013277669532
3859	78	36	0.844504242279849326
3860	79	36	0.891100620118344344
3861	80	36	0.906576226962730769
3862	81	36	0.890972512974276154
3863	82	36	0.916390321540884401
3864	83	36	0.887079488710968866
3865	84	36	0.883815733632738465
3866	85	36	0.888064991867481335
3867	86	36	0.897915133734267346
3868	87	36	0.8817961419660445
3869	88	36	0.56691601713069284
3870	89	36	0.897113804006799409
3871	90	36	0.858239196777690116
3872	91	36	0.899864702911920666
3873	92	36	0.894934647327392696
3874	93	36	0.912910450359179837
3875	94	36	0.896266045809589573
3876	95	36	0.869685200375103662
3877	96	36	0.891030341921176583
3878	97	36	0.887229158153805764
3879	98	36	0.652306033916619898
3880	99	36	0.90654149389139127
3881	101	36	0.900826062007950124
3882	102	36	0.893103617238857561
3883	103	36	0.917908599517072599
3884	104	36	0.899802436299745101
3885	105	36	0.869896783002087837
3886	106	36	0.88869035637320426
3889	1	37	0.820619546212838613
3893	5	37	0.803627815937402623
3898	10	37	0.742694658609326264
3902	13	37	0.514577482971655287
3906	17	37	0.784744730556094727
3911	22	37	0.782447524838321473
3915	27	37	0.794645530502985364
3919	31	37	0.755123984479308619
3924	36	37	0.802189421313498685
3928	40	37	0.786123925730317863
3932	42	37	0.805355199405882627
3937	47	37	0.781760980419384133
3941	51	37	0.710152745372147787
3945	55	37	0.777606303629889584
3950	62	37	0.514577482971655287
3954	66	37	0.758534326490614585
3958	70	37	0.836377763694041154
3963	74	37	0.768099032983112995
3967	78	37	0.691533462880154048
3971	82	37	0.795576582282575662
3976	87	37	0.75173133333897646
3980	91	37	0.765988358918509693
3984	95	37	0.758449047594712544
3989	101	37	0.751002655400138441
3993	105	37	0.730653479767997327
3997	109	38	0.889749652764136423
4002	114	38	0.90927057094066166
4006	117	38	0.895352608216211654
4010	121	38	0.878333993769848886
4015	126	38	0.914644529563184316
4019	130	38	0.916736058744142324
4023	134	38	0.901348250984664867
4025	136	38	0.897871117943031205
4026	137	38	0.913976475067791561
4027	138	38	0.866495594509266609
4028	139	38	0.902808591048178344
4029	140	38	0.898554024651458061
4030	142	38	0.914519540933420028
4031	143	38	0.914071863880959734
4032	144	38	0.864049632808612356
4033	145	38	0.820619546212838613
4034	109	39	0.902433373920852211
4035	110	39	0.929565756342767058
4036	111	39	0.954526624666274803
4037	112	39	0.94923506630487553
4038	113	39	0.966644040552434469
4039	114	39	0.926001515496943761
4040	141	39	0.908632211714704319
4041	115	39	0.956419492980826402
4042	116	39	0.92029745436105781
4043	117	39	0.951093646974873419
4044	118	39	0.953985403336831239
4045	119	39	0.958823193244929262
4046	120	39	0.940178964965215358
4047	121	39	0.941754774457884025
4048	122	39	0.894737909651004193
4049	123	39	0.9466441850010201
4050	124	39	0.964247422768884421
4051	125	39	0.968630792781226879
4052	126	39	0.927594507092111331
4053	127	39	0.965546786348299713
4054	128	39	0.956845847406421202
4055	129	39	0.958335478191079448
4056	130	39	0.965236189844800418
4057	131	39	0.936291239630581251
4058	132	39	0.937231728659197461
4059	133	39	0.952719132030228844
4060	134	39	0.957671351780109537
4061	135	39	0.976252837430316212
4062	136	39	0.957610590706411746
4063	137	39	0.961276704179725106
4064	138	39	0.925566741001378701
4065	139	39	0.947204161881561535
4066	140	39	0.926921437926302549
4067	142	39	0.953962499189721869
4068	143	39	0.926821762024778395
4069	144	39	0.919783160860668025
4070	145	39	0.794097868396601791
4071	109	40	0.898730932363643542
4074	112	40	0.950206407768844241
4078	115	40	0.924537376664427368
4083	120	40	0.914591247989827272
4087	124	40	0.937150809194324697
4091	128	40	0.899486086933745099
4096	133	40	0.899311177176846832
4100	137	40	0.916438850616193346
4104	142	40	0.902813814121138258
4109	110	41	0.898829250338534225
4113	114	41	0.926270088005122005
4117	117	41	0.934611634715822648
4122	122	41	0.893941908780535144
4126	126	41	0.925183973925610026
4130	130	41	0.940891950798185994
4135	135	41	0.950467260865044183
4139	139	41	0.937274214583231458
4143	144	41	0.906476092803905176
4148	112	42	0.935414294008619418
4152	115	42	0.921389212654602607
4156	119	42	0.917085814851344105
4161	124	42	0.920316135092197007
4165	128	42	0.917833811121398946
4169	132	42	0.910196742604919673
4174	137	42	0.931872165364928784
4178	142	42	0.919837806136565961
4182	109	43	0.905667463055907396
4187	114	43	0.907306999456250929
4191	117	43	0.931967647352155093
4195	121	43	0.942781642919034657
4200	126	43	0.908794837018619517
4204	130	43	0.93832923914655364
4208	134	43	0.930774626941430649
4210	136	43	0.93627495379369885
4211	137	43	0.935241749925868837
4212	138	43	0.895987711380506591
4213	139	43	0.937837692170045645
4214	140	43	0.904303097737268913
4215	142	43	0.932805339815957257
4216	143	43	0.903686493599375806
4217	144	43	0.90103868424024669
4218	145	43	0.781474082309290718
4219	109	44	0.902906518849192485
4220	110	44	0.911323006161708693
4221	111	44	0.94350457344641725
4222	112	44	0.955040212975684866
4223	113	44	0.954871098287193298
4224	114	44	0.91231402847712495
4225	141	44	0.893730938219098325
4226	115	44	0.945927556504694289
4227	116	44	0.911088045067976804
4228	117	44	0.937850211780737908
4229	118	44	0.937580557107163481
4230	119	44	0.944159526098932611
4231	120	44	0.930578787820921072
4232	121	44	0.939889542802854971
4233	122	44	0.877804695291582893
4234	123	44	0.938580395341528595
4235	124	44	0.952660223823432295
4236	125	44	0.951596849014508583
4237	126	44	0.913908082274983546
4238	127	44	0.958801813722307661
4239	128	44	0.943768310595525017
4240	129	44	0.94401673525060037
4241	130	44	0.948203387225023508
4242	131	44	0.921443822961684589
4243	132	44	0.925679430905282041
4244	133	44	0.933401271059666193
4245	134	44	0.94039833931062955
4246	135	44	0.963730132436962816
4247	136	44	0.944987431748070317
4248	137	44	0.952694796563063662
4249	138	44	0.912955797366059141
4250	139	44	0.939202703145183726
4251	140	44	0.91095696525300518
4252	142	44	0.93891424053407635
4253	143	44	0.912827742636001971
4254	144	44	0.901472025431970692
4255	145	44	0.781529092196215136
4256	109	45	0.881430887120450923
4259	112	45	0.932293185133395874
4263	115	45	0.926303046131015329
4268	120	45	0.924007393744880723
4272	124	45	0.934471406230547696
4276	128	45	0.922986748298970427
4281	133	45	0.937336530295114878
4285	137	45	0.941249075617916486
4289	142	45	0.93494685523126142
4294	110	46	0.935447068976292595
4298	114	46	0.919010149780302488
4302	117	46	0.926635599626494555
4307	122	46	0.887861097124340137
4311	126	46	0.910104782080556118
4315	130	46	0.95787080576810768
4320	135	46	0.963969455873115555
4324	139	46	0.947040159900206624
4328	144	46	0.902954503267981101
4333	112	47	0.922362155468610778
4337	115	47	0.928687051220329685
4341	119	47	0.934563294909628195
4346	124	47	0.936896106829978703
4350	128	47	0.915922339038826583
4354	132	47	0.923440958941217027
4359	137	47	0.942060645635952376
4363	142	47	0.928579932234474992
4367	109	48	0.888240881035292307
4372	114	48	0.934849045566423675
4376	117	48	0.915008994886409965
4380	121	48	0.929329905772591114
4385	126	48	0.927050730561410408
4389	130	48	0.952853222316085935
4393	134	48	0.951276286691394302
4395	136	48	0.94723414265773187
4396	137	48	0.942134742493783151
4397	138	48	0.90367917240564366
4398	139	48	0.925760188784706783
4399	140	48	0.924316861629816633
4400	142	48	0.946518175601774536
4401	143	48	0.934371761689467228
4402	144	48	0.897113804006799409
4403	145	48	0.787060818443350629
4404	109	49	0.866396610158975733
4405	110	49	0.875876909064022158
4406	111	49	0.897431503156367216
4407	112	49	0.908596881353379016
4408	113	49	0.905874710112170689
4409	114	49	0.883853614701342494
4410	141	49	0.894699644546403938
4411	115	49	0.911267236894404586
4412	116	49	0.893255366842855669
4413	117	49	0.881395574651180569
4414	118	49	0.893744951580156655
4415	119	49	0.926228294858234991
4416	120	49	0.895006865156552589
4417	121	49	0.874490218553587995
4418	122	49	0.857782763687968908
4419	123	49	0.903112126304415619
4420	124	49	0.916196009723383997
4421	125	49	0.921362454696515676
4422	126	49	0.884201874395280529
4423	127	49	0.914902415415450587
4424	128	49	0.882065755167098065
4425	129	49	0.920290875082391491
4426	130	49	0.90048976611336351
4427	131	49	0.874398519193718915
4428	132	49	0.868780252730211311
4429	133	49	0.900525890536484241
4430	134	49	0.919254712891897863
4431	135	49	0.916575722201506515
4432	136	49	0.908964243775743919
4433	137	49	0.915955959807859155
4434	138	49	0.87311421355157437
4435	139	49	0.900972051469841606
4436	140	49	0.879535167688006214
4437	142	49	0.899046978906878791
4438	143	49	0.886031680895429719
4439	144	49	0.847792903317258983
4440	145	49	0.810623315077380835
4441	109	50	0.887906285260689931
4444	112	50	0.932865034369835366
4448	115	50	0.940411778476284765
4453	120	50	0.932197287331584912
4457	124	50	0.95703281647216687
4461	128	50	0.939363472659254573
4466	133	50	0.950301930388360083
4470	137	50	0.952429065477621517
4474	142	50	0.953136806389370816
4479	110	51	0.689615602769276914
4483	114	51	0.652884736733833515
4487	117	51	0.701623942111829102
4492	122	51	0.617324715947316083
4496	126	51	0.650415436127303348
4500	130	51	0.724546140384341064
4505	135	51	0.746999791049337003
4509	139	51	0.713412490679786737
4513	144	51	0.655094196237066217
4518	112	52	0.763772139740231504
4522	115	52	0.713612906041631412
4526	119	52	0.726473026728653437
4531	124	52	0.78634729295858663
4535	128	52	0.698641488693816926
4539	132	52	0.726754555738602925
4544	137	52	0.704175753963072193
4548	142	52	0.706142327803867653
4552	109	53	0.623430965160098216
4557	114	53	0.640218477220739546
4561	117	53	0.613266441660916928
4565	121	53	0.621626599937706081
4570	126	53	0.643367500755696931
4574	130	53	0.646646561006842702
4578	134	53	0.618447670529431281
4580	136	53	0.623212774946611203
4581	137	53	0.622440664869323368
4582	138	53	0.581049187744024587
4583	139	53	0.641128262267975924
4584	140	53	0.631948872426587371
4585	142	53	0.625421138602587745
4586	143	53	0.619753099461279211
4587	144	53	0.581620556151534962
4588	145	53	0.555171960611660631
4589	109	54	0.911739115858222537
4590	110	54	0.929208740489018248
4591	111	54	0.945588526945678742
4592	112	54	0.944596375380027053
4593	113	54	0.948805623261634201
4594	114	54	0.935791609928390167
4595	141	54	0.925076658656375672
4596	115	54	0.942974736413173531
4597	116	54	0.917272224825711358
4598	117	54	0.936388800478758276
4599	118	54	0.946841400302009695
4600	119	54	0.951586496356059852
4601	120	54	0.936609730458289991
4602	121	54	0.936841827613726363
4603	122	54	0.911664009264150699
4604	123	54	0.949409532722030325
4605	124	54	0.95942271233594667
4606	125	54	0.963391525237115687
4607	126	54	0.932369358364640521
4608	127	54	0.956436146580707414
4609	128	54	0.948230282740048169
4610	129	54	0.950248955420658126
4611	130	54	0.947003618963863425
4612	131	54	0.933158736890520202
4613	132	54	0.913858333491328945
4614	133	54	0.949423193529478016
4615	134	54	0.948771596485485036
4616	135	54	0.963463944492145452
4617	136	54	0.947119652146070634
4618	137	54	0.952506055647896921
4619	138	54	0.913269282544648786
4620	139	54	0.944816815673378718
4621	140	54	0.926733449226843087
4622	142	54	0.94484247015297318
4623	143	54	0.933490915831814094
4624	144	54	0.899608253221221066
4625	145	54	0.79766912393538103
4626	109	55	0.846630962456674352
4629	112	55	0.883471277113478615
4633	115	55	0.908562682943929834
4638	120	55	0.86945036195482972
4642	124	55	0.9402512724932095
4646	128	55	0.892145977055222916
4651	133	55	0.906008519951596702
4652	134	55	0.914996874222366197
4659	142	55	0.902305628235628765
6866	128	115	0.757193332858711488
6871	133	115	0.804787869609066453
6875	137	115	0.764053984230739225
6879	142	115	0.739632274860828054
6884	110	116	0.861160278104725618
6888	114	116	0.841192690300347157
6892	117	116	0.863254841552991814
6897	122	116	0.825284390602722961
6901	126	116	0.839836391438614327
6905	130	116	0.878947915412423675
6910	135	116	0.893901730468965594
6914	139	116	0.876017356385370372
6918	144	116	0.844504242279849326
6923	112	117	0.917709866401323127
6927	115	117	0.930142032001765706
6931	119	117	0.951589994782024218
6936	124	117	0.962905474929769745
6940	128	117	0.909823210867047538
6944	132	117	0.917954045673253005
6949	137	117	0.918662276976646375
6953	142	117	0.912853069108099713
6957	109	118	0.865582329221967428
6962	114	118	0.894028033081422646
6966	117	118	0.920147635538570707
6970	121	118	0.92409891760390428
7021	135	119	0.935035799301843218
7022	136	119	0.926017684453505519
7023	137	119	0.922344405717337334
7024	138	119	0.865700730432202414
7025	139	119	0.889045438226952589
7026	140	119	0.871625922653514795
7027	142	119	0.917880768478626763
7028	143	119	0.871101239303994412
7029	144	119	0.890972512974276154
7030	145	119	0.727071728438673737
7031	109	120	0.901082686821516377
7034	112	120	0.944461964107966456
7038	115	120	0.94795038715332347
7043	120	120	0.947436216707257639
7047	124	120	0.947632604679337187
7051	128	120	0.947257853462136201
7056	133	120	0.946380918559406759
7060	137	120	0.95985760960121802
7064	142	120	0.94633909896821311
7069	110	121	0.917918251275569363
7073	114	121	0.912041125501709127
7077	117	121	0.913450730488328921
7082	122	121	0.885951957133538137
7086	126	121	0.909069033756801037
7090	130	121	0.926051307381075661
7095	135	121	0.94146167515240442
7099	139	121	0.911590909856584086
7103	144	121	0.887079488710968866
7108	112	122	0.928164183564668455
7112	115	122	0.928879416109434697
7116	119	122	0.941078188547543992
7121	124	122	0.956823700563592006
7125	128	122	0.909214133113298573
7129	132	122	0.920542634047523789
7134	137	122	0.924134778716598992
7138	142	122	0.906875077251221073
7142	109	123	0.90095206700818864
7147	114	123	0.901892648376675599
7151	117	123	0.924031578642666496
7152	118	123	0.930828749432012104
7153	119	123	0.955351040230935644
7154	120	123	0.921658796587374707
7168	134	123	0.947528923624844421
7170	136	123	0.944018202588300492
7171	137	123	0.943410392421004884
7172	138	123	0.909128516207386772
7173	139	123	0.939104643612738266
7174	140	123	0.909553852082344294
7175	142	123	0.949510126653808406
7176	143	123	0.899592772185802803
7177	144	123	0.888064991867481335
7178	145	123	0.765705975359863511
7179	109	124	0.877415709879967975
7180	110	124	0.889337525399342299
7181	111	124	0.937783584770029544
7182	112	124	0.929837116416148191
7183	113	124	0.926742574358860871
7184	114	124	0.911585042091005771
7185	141	124	0.901370744117406475
7186	115	124	0.926100881168638534
7187	116	124	0.885907864975633563
7188	117	124	0.921793320554574747
7189	118	124	0.917324234688820406
7190	119	124	0.921676724603418984
7191	120	124	0.928190511597204115
7192	121	124	0.906545303625481136
7193	122	124	0.889635530483886439
7194	123	124	0.916372438159331892
7195	124	124	0.923369950377152193
7196	125	124	0.942522905206621409
7197	126	124	0.916596898971228091
7198	127	124	0.923179260505045618
7199	128	124	0.931092415305573295
7200	129	124	0.92987636374485505
7201	130	124	0.936524347308552385
7202	131	124	0.904472273857718778
7203	132	124	0.893927434322832615
7204	133	124	0.922667449992938593
7205	134	124	0.928660625615548518
7206	135	124	0.94064067780595384
7207	136	124	0.92898354180200049
7208	137	124	0.937047327838703148
7209	138	124	0.899019448216169081
7210	139	124	0.924995523317337698
7211	140	124	0.902891370822018535
7212	142	124	0.932446013362895565
7213	143	124	0.905592792171141303
7214	144	124	0.897915133734267346
7215	145	124	0.790868676469866694
7216	109	125	0.850654965491948079
7219	112	125	0.909821434482306901
7223	115	125	0.915406756960273404
7228	120	125	0.899319073341331543
7232	124	125	0.921754079481627131
7236	128	125	0.909372320677105384
7241	133	125	0.913527056227494416
7245	137	125	0.927439433541372704
7249	142	125	0.904803341415109763
7254	110	126	0.594657441412622112
7258	114	126	0.640916348902627497
7262	117	126	0.585995361692935979
7267	122	126	0.611101143465567209
7271	126	126	0.626815979269308987
7275	130	126	0.631240411332644191
7280	135	126	0.61599982095488004
7284	139	126	0.633451983458786394
7288	144	126	0.56691601713069284
7293	112	127	0.918581374075187029
7297	115	127	0.938502743801638672
7301	119	127	0.958337392323213355
7306	124	127	0.96174851146158169
7310	128	127	0.932104309997851099
7314	132	127	0.935112711200103419
7319	137	127	0.942134742493783151
7323	142	127	0.946518175601774536
7327	109	128	0.914934749978747353
7332	114	128	0.91298090110477681
7336	117	128	0.910041358883894147
7340	121	128	0.940273001207962644
7345	126	128	0.907821238032638478
7349	130	128	0.927379256637982263
7353	134	128	0.92513594573231106
7355	136	128	0.925289893708513667
7356	137	128	0.910329419264989559
7357	138	128	0.910367039746779572
7358	139	128	0.92655950142687038
7359	140	128	0.910899444130140012
7360	142	128	0.920408393137276293
7361	143	128	0.905375465749235664
7362	144	128	0.858239196777690116
7363	145	128	0.760810435533688656
7364	109	129	0.888078282265025276
7365	110	129	0.919750240988675194
7366	111	129	0.941611983880681902
7367	112	129	0.941585643923650628
7368	113	129	0.944877777454288137
7369	114	129	0.903789951590919793
7370	141	129	0.893644147579310655
7371	115	129	0.94317679739839444
7372	116	129	0.924978765964645011
7373	117	129	0.92636865151103398
7374	118	129	0.930161911387852869
7375	119	129	0.946110858400284416
7376	120	129	0.917968638866648479
7377	121	129	0.947091513548519726
7378	122	129	0.881502871665574617
7379	123	129	0.939523582854660089
7380	124	129	0.960425311308142682
7381	125	129	0.952394255208038221
7382	126	129	0.897436356561914117
7383	127	129	0.962360469259186724
7384	128	129	0.933012069278469913
7385	129	129	0.935580142675202842
7386	130	129	0.946716211770540106
7387	131	129	0.931676679889884896
7388	132	129	0.944094486650823739
7389	133	129	0.928193000005423485
7390	134	129	0.935134678078476167
7391	135	129	0.95447925901650843
7392	136	129	0.949377317061786963
7393	137	129	0.938330848787311211
7394	138	129	0.896431251692881292
7395	139	129	0.933602031959887446
7396	140	129	0.90998829018795413
7397	142	129	0.933400364365815971
7398	143	129	0.903143389420905995
7399	144	129	0.899864702911920666
7400	145	129	0.765988358918509693
7401	109	130	0.879617315605928041
7404	112	130	0.935412357122436977
7408	115	130	0.937894421694095981
7413	120	130	0.909019365784182964
7417	124	130	0.959864939556280938
7421	128	130	0.926203933133550095
7426	133	130	0.92405920935482444
7430	137	130	0.934685950411004773
7434	142	130	0.928284262326579901
7439	110	131	0.914658866299282836
7443	114	131	0.892129848524936264
7447	117	131	0.92461459807194657
7452	122	131	0.86367677525948594
7456	126	131	0.899103584317024973
7460	130	131	0.938624609993587877
7465	135	131	0.953218007029906222
7469	139	131	0.932570216276148223
7473	144	131	0.912910450359179837
7478	112	132	0.950083020019237723
7482	115	132	0.940022714716730157
7486	119	132	0.946936574573760348
7491	124	132	0.949663764435308866
7495	128	132	0.916542983575119985
7499	132	132	0.929053695904711874
7504	137	132	0.933443928950217106
7508	142	132	0.92167559924791409
7512	109	133	0.879699392112243683
7517	114	133	0.890600186807747107
7521	117	133	0.90073271506407715
7525	121	133	0.926407515005989501
7530	126	133	0.884639548065743409
7534	130	133	0.929909304993120522
7538	134	133	0.926087199126827132
7540	136	133	0.930420661958834549
7541	137	133	0.911873775093041128
7542	138	133	0.861771371283049148
7543	139	133	0.905485409354789605
7544	140	133	0.891588397225790308
7545	142	133	0.918734828543087412
7546	143	133	0.886145193039391987
7547	144	133	0.869685200375103662
7548	145	133	0.758449047594712544
7549	109	134	0.872918660168292559
7550	110	134	0.905959425087303094
7551	111	134	0.909528040164577001
7552	112	134	0.918892659390127098
7553	113	134	0.930661581017967698
7554	114	134	0.883185388638359825
7555	141	134	0.879301757683403573
7556	115	134	0.924947256163043185
7557	116	134	0.895115872081255648
7558	117	134	0.900046027744928367
7559	118	134	0.907547978938711752
7560	119	134	0.939677644216046826
7561	120	134	0.897237741941392497
7562	121	134	0.908944859369816616
7563	122	134	0.867555204736750629
7564	123	134	0.923072086722068752
7565	124	134	0.943690628042616053
7566	125	134	0.942159307365038057
7567	126	134	0.886915051868555793
7568	127	134	0.948319639227391598
7569	128	134	0.902690584142714525
7570	129	134	0.926700450926549069
7571	130	134	0.926022112009764586
7572	131	134	0.895905653867144047
7573	132	134	0.908906760978916095
7574	133	134	0.924826095908646839
7575	134	134	0.927698212157621827
7576	135	134	0.934527698703356169
7577	136	134	0.930440274683716151
7578	137	134	0.928682997687788059
7579	138	134	0.880950979347581042
7580	139	134	0.901473227206150529
7581	140	134	0.882492052824725315
7582	142	134	0.917850274886499173
7583	143	134	0.885708005037531443
7584	144	134	0.891030341921176583
7585	145	134	0.78713135489178232
7586	109	135	0.914542555625674658
7589	112	135	0.925066538941106131
7593	115	135	0.920299718180513149
7598	120	135	0.924559840171398584
7602	124	135	0.920737186387308171
7606	128	135	0.927559669013590993
7611	133	135	0.925023121823451921
7615	137	135	0.92110096103367034
7619	142	135	0.920670968610337814
7624	110	136	0.699485930424996627
7628	114	136	0.696135717738459614
7632	117	136	0.655047559616923958
7637	122	136	0.683621898419166429
7641	126	136	0.696104871268713676
7645	130	136	0.695553283950629653
7650	135	136	0.705802008752048571
7654	139	136	0.685251221987520198
7658	144	136	0.652306033916619898
7663	112	137	0.924516156374467046
7667	115	137	0.944378862020145982
7671	119	137	0.955397968676000242
7676	124	137	0.95456386419908823
7680	128	137	0.947297355964621279
7684	132	137	0.931716357303447817
7689	137	137	0.94991434985174672
7693	142	137	0.951177375539587033
7697	109	138	0.872132838991123593
7702	114	138	0.882647261825140417
7706	117	138	0.904872519398638442
7710	121	138	0.916768078975023881
7715	126	138	0.885896418170699529
7719	130	138	0.946842378065137713
7723	134	138	0.934622238748478384
7725	136	138	0.91452730181115327
7726	137	138	0.937322415820532773
7727	138	138	0.884526642258558926
7728	139	138	0.913828711818023831
7729	140	138	0.881646490403522165
7730	142	138	0.93924542835148439
7731	143	138	0.88559857502118533
7732	144	138	0.900826062007950124
7733	145	138	0.751002655400138441
7734	109	139	0.882509970372128083
7735	110	139	0.894378201899611036
7736	111	139	0.928965373005589901
7737	112	139	0.951074899965857479
7738	113	139	0.941672202436721006
7739	114	139	0.902465884387818384
7740	141	139	0.903040436840642169
7741	115	139	0.940296451099602915
7742	116	139	0.893823994008341449
7743	117	139	0.931609353341900426
7744	118	139	0.923934695589337385
7745	119	139	0.928659429456675123
7746	120	139	0.925592462824520124
7747	121	139	0.918153116326629992
7748	122	139	0.877143972559300211
7749	123	139	0.929470347693404642
7750	124	139	0.923609403003112228
7751	125	139	0.940252082152104207
7752	126	139	0.90260618368663359
7753	127	139	0.927092453822716323
7754	128	139	0.929263190052890042
7755	129	139	0.933240106432876804
7756	130	139	0.937389373961439842
7757	131	139	0.908087681048382556
7758	132	139	0.909870337277393637
7759	133	139	0.914906297836776128
7760	134	139	0.929848920692223913
7761	135	139	0.943845428683899867
7762	136	139	0.935980148168771175
7763	137	139	0.947499938941413378
7764	138	139	0.912750849819183196
7765	139	139	0.934702331639408524
7766	140	139	0.901411514976450334
7767	142	139	0.931270542337006013
7768	143	139	0.906643623598806236
7769	144	139	0.893103617238857561
7770	145	139	0.781472340316842318
7771	109	140	0.879534414945901344
7774	112	140	0.944378405396683163
7778	115	140	0.951326880390897078
7783	120	140	0.917378131971109401
7787	124	140	0.952512542953135477
7791	128	140	0.935140102652974869
7796	133	140	0.932595595842979463
7800	137	140	0.952106677635138898
7804	142	140	0.926774017788634885
7809	110	141	0.918292658805103135
7813	114	141	0.891026476131257739
7817	117	141	0.918457737494380866
7822	122	141	0.865538491898964923
7826	126	141	0.890897463753075547
7830	130	141	0.929793760087755494
7835	135	141	0.946201235162327903
7839	139	141	0.927524541508586209
7843	144	141	0.899802436299745101
7848	112	142	0.912394136801472189
7852	115	142	0.894128245428137736
7856	119	142	0.9091816159236219
7861	124	142	0.916060935852596514
7865	128	142	0.89572013669821049
7869	132	142	0.904759459966090196
7874	137	142	0.922741528374904196
7878	142	142	0.91772397268856154
7882	109	143	0.891900999890335444
7887	114	143	0.930391595335059218
7891	117	143	0.91289576150178342
7895	121	143	0.915344554986126324
7900	126	143	0.923203688164818681
7904	130	143	0.930409083441729012
7908	134	143	0.930949378289354867
7910	136	143	0.938727144920664225
7911	137	143	0.941007448827020587
7912	138	143	0.904222688247744766
7913	139	143	0.933344724396231729
7914	140	143	0.91073347069596311
7915	142	143	0.926978947447234858
7916	143	143	0.928231223301078878
7917	144	143	0.88869035637320426
7918	145	143	0.797400405046331917
7919	109	144	0.909740993147797661
7920	110	144	0.926259346219252211
7921	111	144	0.961225987004993399
7922	112	144	0.947434185220034308
7923	113	144	0.952793394905147806
7924	114	144	0.920475905254026006
7925	141	144	0.912817166358744991
7926	115	144	0.943579625145399947
7927	116	144	0.911113619294031007
7928	117	144	0.929911973332249842
7929	118	144	0.937239838549590587
7930	119	144	0.949125640321764719
7931	120	144	0.941968156198553341
7932	121	144	0.935733184053617606
7933	122	144	0.902710281526587277
7934	123	144	0.94526942247374357
7935	124	144	0.949112062885558494
7936	125	144	0.956686508708703309
7937	126	144	0.915710031311517625
7938	127	144	0.951999077180377684
7939	128	144	0.943136285389118423
7940	129	144	0.950954429276352542
7941	130	144	0.949364938921986479
7942	131	144	0.93934496562035863
7943	132	144	0.928146085188559233
7944	133	144	0.937633237287314736
7945	134	144	0.949462638966368622
7946	135	144	0.955460070498099112
7947	136	144	0.949764801104937106
7948	137	144	0.958581893061038581
7949	138	144	0.908850174194199445
7950	139	144	0.936760018337093769
7951	140	144	0.918253108813325447
7952	142	144	0.942591305489682174
7953	143	144	0.926237421166384411
7954	144	144	0.923559611214652798
7955	145	144	0.788396053770787808
7956	109	145	0.879263825041189606
7960	113	145	0.934499877799058964
7964	116	145	0.892715098896531445
7969	121	145	0.910749604845948468
7973	125	145	0.938178947626886917
7977	129	145	0.92938970239322527
7982	134	145	0.926754291591164292
7986	138	145	0.907853795783990392
7990	143	145	0.904457673127207928
\.


--
-- Data for Name: methods; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.methods (id, name, snippet, syntax, description, docs_url, language_id) FROM stdin;
1	Array::[]	Array.[]( 1, 'a', /^A/)  # => [1, "a", /^A/]\nArray[ 1, 'a', /^A/ ]    # => [1, "a", /^A/]\n[ 1, 'a', /^A/ ]         # => [1, "a", /^A/]\n	[](*args)	Returns a new array populated with the given objects.\n	https://ruby-doc.org/core-2.6/Array.html#method-c-5B-5D	1
2	Array::new	first_array = ["Matz", "Guido"]\n\nsecond_array = Array.new(first_array) #=> ["Matz", "Guido"]\n\nfirst_array.equal? second_array       #=> false\n	new(size=0, default=nil)\nnew(array)\nnew(size) {|index| block }\n	Returns a new array.\nIn the first form, if no arguments are sent, the new array will be empty.\nWhen a size and an optional default are sent, an\narray is created with size copies of default. \nTake notice that all elements will reference the same object\ndefault.\nThe second form creates a copy of the array passed as a parameter (the\narray is generated by calling #to_ary on the parameter).\nIn the last form, an array of the given size is created.  Each element in\nthis array is created by passing the element's index to the given block\nand storing the return value.\nWhen sending the second parameter, the same object will be used as the\nvalue for all the array elements:\nSince all the Array elements store the same hash,\nchanges to one of them will affect them all.\nIf multiple copies are what you want, you should use the block version\nwhich uses the result of that block each time an element of the array needs\nto be initialized:\n	https://ruby-doc.org/core-2.6/Array.html#method-c-new	1
3	Array::try_convert	Array.try_convert([1])   #=> [1]\nArray.try_convert("1")   #=> nil\n\nif tmp = Array.try_convert(arg)\n  # the argument is an array\nelsif tmp = String.try_convert(arg)\n  # the argument is a string\nend\n	try_convert(obj) → array or nil\n	Tries to convert obj into an array, using to_ary\nmethod.  Returns the converted array or nil if\nobj cannot be converted for any reason. This method can be\nused to check if an argument is an array.\n	https://ruby-doc.org/core-2.6/Array.html#method-c-try_convert	1
4	Array#&	[ 1, 1, 3, 5 ] & [ 3, 2, 1 ]                 #=> [ 1, 3 ]\n[ 'a', 'b', 'b', 'z' ] & [ 'a', 'b', 'c' ]   #=> [ 'a', 'b' ]\n	ary & other_ary      → new_ary\n	Set Intersection — Returns a new array containing unique elements common to\nthe two arrays. The order is preserved from the original array.\nIt compares elements using their hash and eql? methods for efficiency.\nSee also #uniq.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-26	1
5	Array#*	[ 1, 2, 3 ] * 3    #=> [ 1, 2, 3, 1, 2, 3, 1, 2, 3 ]\n[ 1, 2, 3 ] * ","  #=> "1,2,3"\n	ary * int     → new_ary\nary * str     → new_string\n	Repetition — With a String argument, equivalent\nto ary.join(str).\nOtherwise, returns a new array built by concatenating the int\ncopies of self.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-2A	1
6	Array#+	[ 1, 2, 3 ] + [ 4, 5 ]    #=> [ 1, 2, 3, 4, 5 ]\na = [ "a", "b", "c" ]\nc = a + [ "d", "e", "f" ]\nc                         #=> [ "a", "b", "c", "d", "e", "f" ]\na                         #=> [ "a", "b", "c" ]\n	ary + other_ary   → new_ary\n	Concatenation — Returns a new array built by concatenating the two arrays\ntogether to produce a third array.\nNote that\nis the same as\nThis means that it produces a new array. As a consequence, repeated use of\n+= on arrays can be quite inefficient.\nSee also #concat.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-2B	1
7	Array#-	[ 1, 1, 2, 2, 3, 3, 4, 5 ] - [ 1, 2, 4 ]  #=>  [ 3, 3, 5 ]\n	ary - other_ary    → new_ary\n	Array Difference\nReturns a new array that is a copy of the original array, removing any\nitems that also appear in other_ary. The order is preserved\nfrom the original array.\nIt compares elements using their hash and eql? methods for efficiency.\nIf you need set-like behavior, see the library class Set.\nSee also #difference.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-2D	1
8	Array#<<	a = [ 1, 2 ]\na << "c" << "d" << [ 3, 4 ]\n        #=>  [ 1, 2, "c", "d", [ 3, 4 ] ]\na\n        #=>  [ 1, 2, "c", "d", [ 3, 4 ] ]\n	ary << obj            → ary\n	Append—Pushes the given object on to the end of this array. This expression\nreturns the array itself, so several appends may be chained together.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-3C-3C	1
9	Array#<=>	[ "a", "a", "c" ]    <=> [ "a", "b", "c" ]   #=> -1\n[ 1, 2, 3, 4, 5, 6 ] <=> [ 1, 2 ]            #=> +1\n[ 1, 2 ]             <=> [ 1, :two ]         #=> nil\n	ary <=> other_ary   →  -1, 0, +1 or nil\n	Comparison — Returns an integer (-1, 0, or\n+1) if this array is less than, equal to, or greater than\nother_ary.\nEach object in each array is compared (using the <=> operator).\nArrays are compared in an “element-wise” manner; the first element of\nary is compared with the first one of other_ary\nusing the <=> operator, then each of the second elements, etc… As\nsoon as the result of any such comparison is non zero (i.e. the two\ncorresponding elements are not equal), that result is returned for the\nwhole array comparison.\nIf all the elements are equal, then the result is based on a comparison of\nthe array lengths. Thus, two arrays are “equal” according to\nArray#<=> if, and only if, they have the same length and the value of\neach element is equal to the value of the corresponding element in the\nother array.\nnil is returned if the other_ary is not an array\nor if the comparison of two elements returned nil.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-3C-3D-3E	1
10	Array#==	[ "a", "c" ]    == [ "a", "c", 7 ]     #=> false\n[ "a", "c", 7 ] == [ "a", "c", 7 ]     #=> true\n[ "a", "c", 7 ] == [ "a", "d", "f" ]   #=> false\n	ary == other_ary   →   bool\n	Equality — Two arrays are equal if they contain the same number of elements\nand if each element is equal to (according to Object#==) the corresponding\nelement in other_ary.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-3D-3D	1
11	Array#[]	a = [ "a", "b", "c", "d", "e" ]\na[2] +  a[0] + a[1]    #=> "cab"\na[6]                   #=> nil\na[1, 2]                #=> [ "b", "c" ]\na[1..3]                #=> [ "b", "c", "d" ]\na[4..7]                #=> [ "e" ]\na[6..10]               #=> nil\na[-3, 3]               #=> [ "c", "d", "e" ]\n# special cases\na[5]                   #=> nil\na[6, 1]                #=> nil\na[5, 1]                #=> []\na[5..10]               #=> []\n	ary[index]                → obj     or nil\nary[start, length]        → new_ary or nil\nary[range]                → new_ary or nil\nslice(index)          → obj     or nil\nslice(start, length)  → new_ary or nil\nslice(range)          → new_ary or nil\n	Element Reference — Returns the element at index, or returns a\nsubarray starting at the start index and continuing for\nlength elements, or returns a subarray specified by\nrange of indices.\nNegative indices count backward from the end of the array (-1 is the last\nelement).  For start and range cases the starting\nindex is just before an element.  Additionally, an empty array is returned\nwhen the starting index for an element range is at the end of the array.\nReturns nil if the index (or starting index) are out of range.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-5B-5D	1
25	Array#compact!	[ "a", nil, "b", nil, "c" ].compact! #=> [ "a", "b", "c" ]\n[ "a", "b", "c" ].compact!           #=> nil\n	compact!    → ary  or  nil\n	Removes nil elements from the array.\nReturns nil if no changes were made, otherwise returns the\narray.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-compact-21	1
12	Array#[]=	a = Array.new\na[4] = "4";                 #=> [nil, nil, nil, nil, "4"]\na[0, 3] = [ 'a', 'b', 'c' ] #=> ["a", "b", "c", nil, "4"]\na[1..2] = [ 1, 2 ]          #=> ["a", 1, 2, nil, "4"]\na[0, 2] = "?"               #=> ["?", 2, nil, "4"]\na[0..2] = "A"               #=> ["A", "4"]\na[-1]   = "Z"               #=> ["A", "Z"]\na[1..-1] = nil              #=> ["A", nil]\na[1..-1] = []               #=> ["A"]\na[0, 0] = [ 1, 2 ]          #=> [1, 2, "A"]\na[3, 0] = "B"               #=> [1, 2, "A", "B"]\n	ary[index]         = obj                      →  obj\nary[start, length] = obj or other_ary or nil  →  obj or other_ary or nil\nary[range]         = obj or other_ary or nil  →  obj or other_ary or nil\n	Element Assignment — Sets the element at index, or replaces a\nsubarray from the start index for length\nelements, or replaces a subarray specified by the range of\nindices.\nIf indices are greater than the current capacity of the array, the array\ngrows automatically.  Elements are inserted into the array at\nstart if length is zero.\nNegative indices will count backward from the end of the array.  For\nstart and range cases the starting index is just\nbefore an element.\nAn IndexError is raised if a negative index\npoints past the beginning of the array.\nSee also #push, and #unshift.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-5B-5D-3D	1
13	Array#all?		all? [{|obj| block}  ]   → true or false\nall?(pattern)            → true or false\n	See also Enumerable#all?\n	https://ruby-doc.org/core-2.6/Array.html#method-i-all-3F	1
14	Array#any?		any? [{|obj| block}  ]   → true or false\nany?(pattern)            → true or false\n	See also Enumerable#any?\n	https://ruby-doc.org/core-2.6/Array.html#method-i-any-3F	1
15	Array#append		append(*args)	Alias for: push	https://ruby-doc.org/core-2.6/Array.html#method-i-append	1
16	Array#assoc	s1 = [ "colors", "red", "blue", "green" ]\ns2 = [ "letters", "a", "b", "c" ]\ns3 = "foo"\na  = [ s1, s2, s3 ]\na.assoc("letters")  #=> [ "letters", "a", "b", "c" ]\na.assoc("foo")      #=> nil\n	assoc(obj)   → element_ary  or  nil\n	Searches through an array whose elements are also arrays comparing\nobj with the first element of each contained array using\nobj.==.\nReturns the first contained array that matches (that is, the first\nassociated array), or nil if no match is found.\nSee also #rassoc\n	https://ruby-doc.org/core-2.6/Array.html#method-i-assoc	1
17	Array#at	a = [ "a", "b", "c", "d", "e" ]\na.at(0)     #=> "a"\na.at(-1)    #=> "e"\n	at(index)   →   obj  or nil\n	Returns the element at index. A negative index counts from the\nend of self. Returns nil if the index is out of\nrange. See also #[].\n	https://ruby-doc.org/core-2.6/Array.html#method-i-at	1
18	Array#bsearch	ary = [0, 4, 7, 10, 12]\nary.bsearch {|x| x >=   4 } #=> 4\nary.bsearch {|x| x >=   6 } #=> 7\nary.bsearch {|x| x >=  -1 } #=> 0\nary.bsearch {|x| x >= 100 } #=> nil\n	bsearch {|x| block }  → elem\n	By using binary search, finds a value from this array which meets the given\ncondition in O(log n) where n is the size of the array.\nYou can use this method in two modes: a find-minimum mode and a find-any\nmode.  In either case, the elements of the array must be monotone (or\nsorted) with respect to the block.\nIn find-minimum mode (this is a good choice for typical use cases), the\nblock must always return true or false, and there must be an index i (0\n<= i <= ary.size) so that:\nthe block returns false for any element whose index is less than i, and\nthe block returns true for any element whose index is greater than or equal\nto i.\nThis method returns the i-th element.  If i is equal to ary.size, it\nreturns nil.\nIn find-any mode (this behaves like libc's bsearch(3)), the block must\nalways return a number, and there must be two indices i and j (0 <= i\n<= j <= ary.size) so that:\nthe block returns a positive number for ary if 0 <= k\n< i,\nthe block returns zero for ary if i <= k < j, and\nthe block returns a negative number for ary if j <= k\n< ary.size.\nUnder this condition, this method returns any element whose index is within\ni…j.  If i is equal to j (i.e., there is no element that satisfies the\nblock), this method returns nil.\nYou must not mix the two modes at a time; the block must always return\neither true/false, or always return a number.  It is undefined which value\nis actually picked up at each iteration.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-bsearch	1
19	Array#bsearch_index		bsearch_index {|x| block }  → int or nil\n	By using binary search, finds an index of a value from this array which\nmeets the given condition in O(log n) where n is the size of the array.\nIt supports two modes, depending on the nature of the block. They are\nexactly the same as in the case of the bsearch method, with the only\ndifference being that this method returns the index of the element instead\nof the element itself. For more details consult the documentation for bsearch.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-bsearch_index	1
20	Array#clear	a = [ "a", "b", "c", "d", "e" ]\na.clear    #=> [ ]\n	clear    → ary\n	Removes all elements from self.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-clear	1
21	Array#collect	a = [ "a", "b", "c", "d" ]\na.collect {|x| x + "!"}           #=> ["a!", "b!", "c!", "d!"]\na.map.with_index {|x, i| x * i}   #=> ["", "b", "cc", "ddd"]\na                                 #=> ["a", "b", "c", "d"]\n	collect {|item| block}    → new_ary\ncollect                   → Enumerator\n	Invokes the given block once for each element of self.\nCreates a new array containing the values returned by the block.\nSee also Enumerable#collect.\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-collect	1
22	Array#collect!	a = [ "a", "b", "c", "d" ]\na.map! {|x| x + "!" }\na #=>  [ "a!", "b!", "c!", "d!" ]\na.collect!.with_index {|x, i| x[0...i] }\na #=>  ["", "b", "c!", "d!"]\n	collect! {|item| block }   → ary\ncollect!                   → Enumerator\n	Invokes the given block once for each element of self,\nreplacing the element with the value returned by the block.\nSee also Enumerable#collect.\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-collect-21	1
23	Array#combination	a = [1, 2, 3, 4]\na.combination(1).to_a  #=> [[1],[2],[3],[4]]\na.combination(2).to_a  #=> [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]\na.combination(3).to_a  #=> [[1,2,3],[1,2,4],[1,3,4],[2,3,4]]\na.combination(4).to_a  #=> [[1,2,3,4]]\na.combination(0).to_a  #=> [[]] # one combination of length 0\na.combination(5).to_a  #=> []   # no combinations of length 5\n	combination(n) {|c| block}      → ary\ncombination(n)                  → Enumerator\n	When invoked with a block, yields all combinations of length n\nof elements from the array and then returns the array itself.\nThe implementation makes no guarantees about the order in which the\ncombinations are yielded.\nIf no block is given, an Enumerator is\nreturned instead.\nExamples:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-combination	1
24	Array#compact	[ "a", nil, "b", nil, "c", nil ].compact\n                  #=> [ "a", "b", "c" ]\n	compact     → new_ary\n	Returns a copy of self with all nil elements\nremoved.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-compact	1
26	Array#concat	[ "a", "b" ].concat( ["c", "d"])   #=> [ "a", "b", "c", "d" ]\n[ "a" ].concat( ["b"], ["c", "d"]) #=> [ "a", "b", "c", "d" ]\n[ "a" ].concat #=> [ "a" ]\n\na = [ 1, 2, 3 ]\na.concat( [ 4, 5 ])\na                                 #=> [ 1, 2, 3, 4, 5 ]\n\na = [ 1, 2 ]\na.concat(a, a)                    #=> [1, 2, 1, 2, 1, 2]\n	concat(other_ary1, other_ary2, ...)   → ary\n	Appends the elements of other_arys to self.\nSee also Array#+.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-concat	1
27	Array#count	ary = [1, 2, 4, 2]\nary.count                  #=> 4\nary.count(2)               #=> 2\nary.count {|x| x%2 == 0}   #=> 3\n	count                   → int\ncount(obj)              → int\ncount {|item| block}    → int\n	Returns the number of elements.\nIf an argument is given, counts the number of elements which equal\nobj using ==.\nIf a block is given, counts the number of elements for which the block\nreturns a true value.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-count	1
28	Array#cycle	a = ["a", "b", "c"]\na.cycle {|x| puts x}       # print, a, b, c, a, b, c,.. forever.\na.cycle(2) {|x| puts x}    # print, a, b, c, a, b, c.\n	cycle(n=nil) {|obj| block}    → nil\ncycle(n=nil)                  → Enumerator\n	Calls the given block for each element n times or forever if\nnil is given.\nDoes nothing if a non-positive number is given or the array is empty.\nReturns nil if the loop has finished without getting\ninterrupted.\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-cycle	1
29	Array#delete	a = [ "a", "b", "b", "b", "c" ]\na.delete("b")                   #=> "b"\na                               #=> ["a", "c"]\na.delete("z")                   #=> nil\na.delete("z") {"not found"}     #=> "not found"\n	delete(obj)            → item or nil\ndelete(obj) {block}    → item or result of block\n	Deletes all items from self that are equal to\nobj.\nReturns the last deleted item, or nil if no matching item is\nfound.\nIf the optional code block is given, the result of the block is returned if\nthe item is not found.  (To remove nil elements and get an\ninformative return value, use #compact!)\n	https://ruby-doc.org/core-2.6/Array.html#method-i-delete	1
30	Array#delete_at	a = ["ant", "bat", "cat", "dog"]\na.delete_at(2)    #=> "cat"\na                 #=> ["ant", "bat", "dog"]\na.delete_at(99)   #=> nil\n	delete_at(index)  → obj or nil\n	Deletes the element at the specified index, returning that\nelement, or nil if the index is out of range.\nSee also #slice!\n	https://ruby-doc.org/core-2.6/Array.html#method-i-delete_at	1
31	Array#delete_if	scores = [ 97, 42, 75 ]\nscores.delete_if {|score| score < 80 }   #=> [97]\n	delete_if {|item| block}    → ary\ndelete_if                   → Enumerator\n	Deletes every element of self for which block evaluates to\ntrue.\nThe array is changed instantly every time the block is called, not after\nthe iteration is over.\nSee also #reject!\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-delete_if	1
32	Array#difference	[ 1, 1, 2, 2, 3, 3, 4, 5 ].difference([ 1, 2, 4 ])     #=> [ 3, 3, 5 ]\n[ 1, 'c', :s, 'yep' ].difference([ 1 ], [ 'a', 'c' ])  #=> [ :s, "yep" ]\n	difference(other_ary1, other_ary2, ...)   → ary\n	Array Difference\nReturns a new array that is a copy of the receiver, removing any items that\nalso appear in any of the arrays given as arguments. The order is preserved\nfrom the original array.\nIt compares elements using their hash and eql? methods for efficiency.\nIf you need set-like behavior, see the library class Set.\nSee also Array#-.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-difference	1
33	Array#dig	a = [[1, [2, 3]]]\n\na.dig(0, 1, 1)                    #=> 3\na.dig(1, 2, 3)                    #=> nil\na.dig(0, 0, 0)                    #=> TypeError: Integer does not have #dig method\n[42, {foo: :bar}].dig(1, :foo)    #=> :bar\n	dig(idx, ...)                 → object\n	Extracts the nested value specified by the sequence of idx objects\nby calling dig at each step, returning nil if any\nintermediate step is nil.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-dig	1
34	Array#drop	a = [1, 2, 3, 4, 5, 0]\na.drop(3)             #=> [4, 5, 0]\n	drop(n)               → new_ary\n	Drops first n elements from ary and returns the\nrest of the elements in an array.\nIf a negative number is given, raises an ArgumentError.\nSee also #take\n	https://ruby-doc.org/core-2.6/Array.html#method-i-drop	1
35	Array#drop_while	a = [1, 2, 3, 4, 5, 0]\na.drop_while {|i| i < 3 }   #=> [3, 4, 5, 0]\n	drop_while {|obj| block}     → new_ary\ndrop_while                  → Enumerator\n	Drops elements up to, but not including, the first element for which the\nblock returns nil or false and returns an array\ncontaining the remaining elements.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also #take_while\n	https://ruby-doc.org/core-2.6/Array.html#method-i-drop_while	1
36	Array#each	a = [ "a", "b", "c" ]\na.each {|x| print x, " -- " }\n	each {|item| block}    → ary\neach                   → Enumerator\n	Calls the given block once for each element in self, passing\nthat element as a parameter.  Returns the array itself.\nIf no block is given, an Enumerator is\nreturned.\nproduces:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-each	1
37	Array#each_index	a = [ "a", "b", "c" ]\na.each_index {|x| print x, " -- " }\n	each_index {|index| block}    → ary\neach_index                    → Enumerator\n	Same as #each, but passes the\nindex of the element instead of the element itself.\nAn Enumerator is returned if no block is\ngiven.\nproduces:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-each_index	1
38	Array#empty?	[].empty?   #=> true\n	empty?   → true or false\n	Returns true if self contains no elements.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-empty-3F	1
39	Array#eql?		eql?(other)  → true or false\n	Returns true if self and other are\nthe same object, or are both arrays with the same content (according to Object#eql?).\n	https://ruby-doc.org/core-2.6/Array.html#method-i-eql-3F	1
40	Array#fetch	a = [ 11, 22, 33, 44 ]\na.fetch(1)               #=> 22\na.fetch(-1)              #=> 44\na.fetch(4, 'cat')        #=> "cat"\na.fetch(100) {|i| puts "#{i} is out of bounds"}\n                         #=> "100 is out of bounds"\n	fetch(index)                    → obj\nfetch(index, default)           → obj\nfetch(index) {|index| block}    → obj\n	Tries to return the element at position index, but throws an\nIndexError exception if the referenced\nindex lies outside of the array bounds.  This error can be\nprevented by supplying a second argument, which will act as a\ndefault value.\nAlternatively, if a block is given it will only be executed when an invalid\nindex is referenced.\nNegative values of index count from the end of the array.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-fetch	1
56	Array#last	a = [ "w", "x", "y", "z" ]\na.last     #=> "z"\na.last(2)  #=> ["y", "z"]\n	last     →  obj or nil\nlast(n)  →  new_ary\n	Returns the last element(s) of self. If the array is empty,\nthe first form returns nil.\nSee also #first for the opposite\neffect.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-last	1
57	Array#length	[ 1, 2, 3, 4, 5 ].length   #=> 5\n[].length                  #=> 0\n	length → int\n	Returns the number of elements in self. May be zero.\nAlso aliased as: size	https://ruby-doc.org/core-2.6/Array.html#method-i-length	1
41	Array#fill	a = [ "a", "b", "c", "d" ]\na.fill("x")              #=> ["x", "x", "x", "x"]\na.fill("z", 2, 2)        #=> ["x", "x", "z", "z"]\na.fill("y", 0..1)        #=> ["y", "y", "z", "z"]\na.fill {|i| i*i}         #=> [0, 1, 4, 9]\na.fill(-2) {|i| i*i*i}   #=> [0, 1, 8, 27]\n	fill(obj)                                 → ary\nfill(obj, start [, length])               → ary\nfill(obj, range)                          → ary\nfill {|index| block}                      → ary\nfill(start [, length]) {|index| block}    → ary\nfill(range) {|index| block}               → ary\n	The first three forms set the selected elements of self (which\nmay be the entire array) to obj.\nA start of nil is equivalent to zero.\nA length of nil is equivalent to the length of\nthe array.\nThe last three forms fill the array with the value of the given block,\nwhich is passed the absolute index of each element to be filled.\nNegative values of start count from the end of the array,\nwhere -1 is the last element.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-fill	1
42	Array#filter	[1,2,3,4,5].select {|num| num.even? }     #=> [2, 4]\n\na = %w[ a b c d e f ]\na.select {|v| v =~ /[aeiou]/ }    #=> ["a", "e"]\n	filter {|item| block}   → new_ary\nfilter                  → Enumerator\n	Returns a new array containing all elements of ary for which\nthe given block returns a true value.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also Enumerable#select.\n#filter is an alias for #select.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-filter	1
43	Array#filter!		filter! {|item| block } → ary or nil\nfilter!                 → Enumerator\n	Invokes the given block passing in successive elements from\nself, deleting elements for which the block returns a\nfalse value.\nThe array may not be changed instantly every time the block is called.\nIf changes were made, it will return self, otherwise it\nreturns nil.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also #keep_if.\n#filter! is an alias for #select!.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-filter-21	1
44	Array#find_index	a = [ "a", "b", "c" ]\na.index("b")              #=> 1\na.index("z")              #=> nil\na.index {|x| x == "b"}    #=> 1\n	find_index(obj)             →  int or nil\nfind_index {|item| block}  →  int or nil\nfind_index                  →  Enumerator\n	Returns the index of the first object in ary such\nthat the object is == to obj.\nIf a block is given instead of an argument, returns the index of\nthe first object for which the block returns true.  Returns\nnil if no match is found.\nSee also #rindex.\nAn Enumerator is returned if neither a block\nnor argument is given.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-find_index	1
45	Array#first	a = [ "q", "r", "s", "t" ]\na.first     #=> "q"\na.first(2)  #=> ["q", "r"]\n	first     →   obj or nil\nfirst(n)  →   new_ary\n	Returns the first element, or the first n elements, of the\narray. If the array is empty, the first form returns nil, and\nthe second form returns an empty array. See also #last for the opposite effect.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-first	1
46	Array#flatten	s = [ 1, 2, 3 ]           #=> [1, 2, 3]\nt = [ 4, 5, 6, [7, 8] ]   #=> [4, 5, 6, [7, 8]]\na = [ s, t, 9, 10 ]       #=> [[1, 2, 3], [4, 5, 6, [7, 8]], 9, 10]\na.flatten                 #=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\na = [ 1, 2, [3, [4, 5] ] ]\na.flatten(1)              #=> [1, 2, 3, [4, 5]]\n	flatten → new_ary\nflatten(level) → new_ary\n	Returns a new array that is a one-dimensional flattening of\nself (recursively).\nThat is, for every element that is an array, extract its elements into the\nnew array.\nThe optional level argument determines the level of recursion\nto flatten.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-flatten	1
47	Array#flatten!	a = [ 1, 2, [3, [4, 5] ] ]\na.flatten!   #=> [1, 2, 3, 4, 5]\na.flatten!   #=> nil\na            #=> [1, 2, 3, 4, 5]\na = [ 1, 2, [3, [4, 5] ] ]\na.flatten!(1) #=> [1, 2, 3, [4, 5]]\n	flatten!        → ary or nil\nflatten!(level) → ary or nil\n	Flattens self in place.\nReturns nil if no modifications were made (i.e., the array\ncontains no subarrays.)\nThe optional level argument determines the level of recursion\nto flatten.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-flatten-21	1
48	Array#hash		hash   → integer\n	Compute a hash-code for this array.\nTwo arrays with the same content will have the same hash code (and will\ncompare using eql?).\nSee also Object#hash.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-hash	1
49	Array#include?	a = [ "a", "b", "c" ]\na.include?("b")   #=> true\na.include?("z")   #=> false\n	include?(object)   → true or false\n	Returns true if the given object is present in\nself (that is, if any element ==\nobject), otherwise returns false.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-include-3F	1
50	Array#index	a = [ "a", "b", "c" ]\na.index("b")              #=> 1\na.index("z")              #=> nil\na.index {|x| x == "b"}    #=> 1\n	index(obj)             →  int or nil\nindex {|item| block}   →  int or nil\nindex                  →  Enumerator\n	Returns the index of the first object in ary such\nthat the object is == to obj.\nIf a block is given instead of an argument, returns the index of\nthe first object for which the block returns true.  Returns\nnil if no match is found.\nSee also #rindex.\nAn Enumerator is returned if neither a block\nnor argument is given.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-index	1
51	Array#initialize_copy	a = [ "a", "b", "c", "d", "e" ]\na.replace([ "x", "y", "z" ])   #=> ["x", "y", "z"]\na                              #=> ["x", "y", "z"]\n	initialize_copy(other_ary)   → ary\n	Replaces the contents of self with the contents of\nother_ary, truncating or expanding if necessary.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-initialize_copy	1
52	Array#insert	a = %w{ a b c d }\na.insert(2, 99)         #=> ["a", "b", 99, "c", "d"]\na.insert(-2, 1, 2, 3)   #=> ["a", "b", 99, "c", 1, 2, 3, "d"]\n	insert(index, obj...)  → ary\n	Inserts the given values before the element with the given\nindex.\nNegative indices count backwards from the end of the array, where\n-1 is the last element. If a negative index is used, the given\nvalues will be inserted after that element, so using an index of\n-1 will insert the values at the end of the array.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-insert	1
53	Array#inspect	[ "a", "b", "c" ].to_s     #=> "[\\"a\\", \\"b\\", \\"c\\"]"\n	inspect  → string\nto_s     → string\n	Creates a string representation of self.\nAlso aliased as: to_s	https://ruby-doc.org/core-2.6/Array.html#method-i-inspect	1
54	Array#join	[ "a", "b", "c" ].join        #=> "abc"\n[ "a", "b", "c" ].join("-")   #=> "a-b-c"\n	join(separator=$,)    → str\n	Returns a string created by converting each element of the array to a\nstring, separated by the given separator. If the\nseparator is nil, it uses current\n$,. If both the separator and $, are\nnil, it uses an empty string.\nFor nested arrays, join is applied recursively:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-join	1
55	Array#keep_if	a = %w[ a b c d e f ]\na.keep_if {|v| v =~ /[aeiou]/ }    #=> ["a", "e"]\na                                  #=> ["a", "e"]\n	keep_if {|item| block}   → ary\nkeep_if                  → Enumerator\n	Deletes every element of self for which the given block\nevaluates to false, and returns self.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also #select!.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-keep_if	1
58	Array#map	a = [ "a", "b", "c", "d" ]\na.collect {|x| x + "!"}           #=> ["a!", "b!", "c!", "d!"]\na.map.with_index {|x, i| x * i}   #=> ["", "b", "cc", "ddd"]\na                                 #=> ["a", "b", "c", "d"]\n	map     {|item| block}    → new_ary\nmap                       → Enumerator\n	Invokes the given block once for each element of self.\nCreates a new array containing the values returned by the block.\nSee also Enumerable#collect.\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-map	1
59	Array#map!	a = [ "a", "b", "c", "d" ]\na.map! {|x| x + "!" }\na #=>  [ "a!", "b!", "c!", "d!" ]\na.collect!.with_index {|x, i| x[0...i] }\na #=>  ["", "b", "c!", "d!"]\n	map!     {|item| block }   → ary\nmap!                       → Enumerator\n	Invokes the given block once for each element of self,\nreplacing the element with the value returned by the block.\nSee also Enumerable#collect.\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-map-21	1
60	Array#max	ary = %w(albatross dog horse)\nary.max                                   #=> "horse"\nary.max {|a, b| a.length <=> b.length}    #=> "albatross"\n	max                     → obj\nmax {|a, b| block}      → obj\nmax(n)                  → array\nmax(n) {|a, b| block}   → array\n	Returns the object in ary with the maximum value. The first form\nassumes all objects implement Comparable; the second uses the\nblock to return a <=> b.\nIf the n argument is given, maximum n elements\nare returned as an array.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-max	1
61	Array#min	ary = %w(albatross dog horse)\nary.min                                   #=> "albatross"\nary.min {|a, b| a.length <=> b.length}    #=> "dog"\n	min                     → obj\nmin {| a,b | block }    → obj\nmin(n)                  → array\nmin(n) {| a,b | block } → array\n	Returns the object in ary with the minimum value. The first form\nassumes all objects implement Comparable; the second uses the\nblock to return a <=> b.\nIf the n argument is given, minimum n elements\nare returned as an array.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-min	1
62	Array#none?		none? [{|obj| block}  ]   → true or false\nnone?(pattern)            → true or false\n	See also Enumerable#none?\n	https://ruby-doc.org/core-2.6/Array.html#method-i-none-3F	1
63	Array#one?		one? [{|obj| block}  ]   → true or false\none?(pattern)            → true or false\n	See also Enumerable#one?\n	https://ruby-doc.org/core-2.6/Array.html#method-i-one-3F	1
64	Array#pack	a = [ "a", "b", "c" ]\nn = [ 65, 66, 67 ]\na.pack("A3A3A3")   #=> "a  b  c  "\na.pack("a3a3a3")   #=> "a\\000\\000b\\000\\000c\\000\\000"\nn.pack("ccc")      #=> "ABC"\n	pack( aTemplateString ) → aBinaryString\npack( aTemplateString, buffer: aBufferString ) → aBufferString\n	Packs the contents of arr into a binary sequence according to the\ndirectives in aTemplateString (see the table below) Directives\n“A,'' “a,'' and “Z'' may be followed by a count,\nwhich gives the width of the resulting field. The remaining directives also\nmay take a count, indicating the number of array elements to convert. If\nthe count is an asterisk (“*''), all remaining array\nelements will be converted. Any of the directives\n“sSiIlL'' may be followed by an underscore\n(“_'') or exclamation mark (“!'')\nto use the underlying platform's native size for the specified type;\notherwise, they use a platform-independent size. Spaces are ignored in the\ntemplate string. See also String#unpack.\nIf aBufferString is specified and its capacity is enough,\npack uses it as the buffer and returns it. When the offset is\nspecified by the beginning of aTemplateString, the result is\nfilled after the offset. If original contents of aBufferString\nexists and it's longer than the offset, the rest of\noffsetOfBuffer are overwritten by the result. If it's shorter,\nthe gap is filled with “\\0''.\nNote that “buffer:'' option does not guarantee not to allocate\nmemory in pack.  If the capacity of aBufferString is\nnot enough, pack allocates memory.\nDirectives for pack.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-pack	1
65	Array#permutation	a = [1, 2, 3]\na.permutation.to_a    #=> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\na.permutation(1).to_a #=> [[1],[2],[3]]\na.permutation(2).to_a #=> [[1,2],[1,3],[2,1],[2,3],[3,1],[3,2]]\na.permutation(3).to_a #=> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\na.permutation(0).to_a #=> [[]] # one permutation of length 0\na.permutation(4).to_a #=> []   # no permutations of length 4\n	permutation {|p| block}            → ary\npermutation                        → Enumerator\npermutation(n) {|p| block}         → ary\npermutation(n)                     → Enumerator\n	When invoked with a block, yield all permutations of length n\nof the elements of the array, then return the array itself.\nIf n is not specified, yield all permutations of all elements.\nThe implementation makes no guarantees about the order in which the\npermutations are yielded.\nIf no block is given, an Enumerator is\nreturned instead.\nExamples:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-permutation	1
66	Array#pop	a = [ "a", "b", "c", "d" ]\na.pop     #=> "d"\na.pop(2)  #=> ["b", "c"]\na         #=> ["a"]\n	pop    → obj or nil\npop(n) → new_ary\n	Removes the last element from self and returns it, or\nnil if the array is empty.\nIf a number n is given, returns an array of the last\nn elements (or less) just like array.slice!(-n,\nn) does. See also #push for\nthe opposite effect.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-pop	1
67	Array#prepend		prepend(*args)	Alias for: unshift	https://ruby-doc.org/core-2.6/Array.html#method-i-prepend	1
68	Array#product	[1,2,3].product([4,5])     #=> [[1,4],[1,5],[2,4],[2,5],[3,4],[3,5]]\n[1,2].product([1,2])       #=> [[1,1],[1,2],[2,1],[2,2]]\n[1,2].product([3,4],[5,6]) #=> [[1,3,5],[1,3,6],[1,4,5],[1,4,6],\n                           #     [2,3,5],[2,3,6],[2,4,5],[2,4,6]]\n[1,2].product()            #=> [[1],[2]]\n[1,2].product([])          #=> []\n	product(other_ary, ...)                → new_ary\nproduct(other_ary, ...) {|p| block}    → ary\n	Returns an array of all combinations of elements from all arrays.\nThe length of the returned array is the product of the length of\nself and the argument arrays.\nIf given a block, product will\nyield all combinations and return self instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-product	1
69	Array#push	a = [ "a", "b", "c" ]\na.push("d", "e", "f")\n        #=> ["a", "b", "c", "d", "e", "f"]\n[1, 2, 3].push(4).push(5)\n        #=> [1, 2, 3, 4, 5]\n	push(obj, ...)    → ary\nappend(obj, ...)  → ary\n	Append — Pushes the given object(s) on to the end of this array. This\nexpression returns the array itself, so several appends may be chained\ntogether. See also #pop for the\nopposite effect.\nAlso aliased as: append	https://ruby-doc.org/core-2.6/Array.html#method-i-push	1
70	Array#rassoc	a = [ [ 1, "one"], [2, "two"], [3, "three"], ["ii", "two"] ]\na.rassoc("two")    #=> [2, "two"]\na.rassoc("four")   #=> nil\n	rassoc(obj) → element_ary or nil\n	Searches through the array whose elements are also arrays.\nCompares obj with the second element of each contained array\nusing obj.==.\nReturns the first contained array that matches obj.\nSee also #assoc.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-rassoc	1
100	Array#to_s		to_s()	Alias for: inspect	https://ruby-doc.org/core-2.6/Array.html#method-i-to_s	1
71	Array#reject		reject  {|item| block }  → new_ary\nreject                   → Enumerator\n	Returns a new array containing the items in self for which the\ngiven block is not true. The ordering of non-rejected elements\nis maintained.\nSee also #delete_if\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-reject	1
72	Array#reject!		reject! {|item| block}    → ary or nil\nreject!                   → Enumerator\n	Deletes every element of self for which the block evaluates to\ntrue, if no changes were made returns nil.\nThe array may not be changed instantly every time the block is called.\nSee also Enumerable#reject\nand #delete_if.\nIf no block is given, an Enumerator is\nreturned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-reject-21	1
73	Array#repeated_combination	a = [1, 2, 3]\na.repeated_combination(1).to_a  #=> [[1], [2], [3]]\na.repeated_combination(2).to_a  #=> [[1,1],[1,2],[1,3],[2,2],[2,3],[3,3]]\na.repeated_combination(3).to_a  #=> [[1,1,1],[1,1,2],[1,1,3],[1,2,2],[1,2,3],\n                                #    [1,3,3],[2,2,2],[2,2,3],[2,3,3],[3,3,3]]\na.repeated_combination(4).to_a  #=> [[1,1,1,1],[1,1,1,2],[1,1,1,3],[1,1,2,2],[1,1,2,3],\n                                #    [1,1,3,3],[1,2,2,2],[1,2,2,3],[1,2,3,3],[1,3,3,3],\n                                #    [2,2,2,2],[2,2,2,3],[2,2,3,3],[2,3,3,3],[3,3,3,3]]\na.repeated_combination(0).to_a  #=> [[]] # one combination of length 0\n	repeated_combination(n) {|c| block}   → ary\nrepeated_combination(n)               → Enumerator\n	When invoked with a block, yields all repeated combinations of length\nn of elements from the array and then returns the array\nitself.\nThe implementation makes no guarantees about the order in which the\nrepeated combinations are yielded.\nIf no block is given, an Enumerator is\nreturned instead.\nExamples:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-repeated_combination	1
74	Array#repeated_permutation	a = [1, 2]\na.repeated_permutation(1).to_a  #=> [[1], [2]]\na.repeated_permutation(2).to_a  #=> [[1,1],[1,2],[2,1],[2,2]]\na.repeated_permutation(3).to_a  #=> [[1,1,1],[1,1,2],[1,2,1],[1,2,2],\n                                #    [2,1,1],[2,1,2],[2,2,1],[2,2,2]]\na.repeated_permutation(0).to_a  #=> [[]] # one permutation of length 0\n	repeated_permutation(n) {|p| block}   → ary\nrepeated_permutation(n)               → Enumerator\n	When invoked with a block, yield all repeated permutations of length\nn of the elements of the array, then return the array itself.\nThe implementation makes no guarantees about the order in which the\nrepeated permutations are yielded.\nIf no block is given, an Enumerator is\nreturned instead.\nExamples:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-repeated_permutation	1
75	Array#replace	a = [ "a", "b", "c", "d", "e" ]\na.replace([ "x", "y", "z" ])   #=> ["x", "y", "z"]\na                              #=> ["x", "y", "z"]\n	replace(other_ary)  → ary\n	Replaces the contents of self with the contents of\nother_ary, truncating or expanding if necessary.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-replace	1
76	Array#reverse	[ "a", "b", "c" ].reverse   #=> ["c", "b", "a"]\n[ 1 ].reverse               #=> [1]\n	reverse    → new_ary\n	Returns a new array containing self's elements in reverse\norder.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-reverse	1
77	Array#reverse!	a = [ "a", "b", "c" ]\na.reverse!       #=> ["c", "b", "a"]\na                #=> ["c", "b", "a"]\n	reverse!   → ary\n	Reverses self in place.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-reverse-21	1
78	Array#reverse_each	a = [ "a", "b", "c" ]\na.reverse_each {|x| print x, " " }\n	reverse_each {|item| block}    → ary\nreverse_each                   → Enumerator\n	Same as #each, but traverses\nself in reverse order.\nproduces:\n	https://ruby-doc.org/core-2.6/Array.html#method-i-reverse_each	1
79	Array#rindex	a = [ "a", "b", "b", "b", "c" ]\na.rindex("b")             #=> 3\na.rindex("z")             #=> nil\na.rindex {|x| x == "b"}   #=> 3\n	rindex(obj)             →  int or nil\nrindex {|item| block}   →  int or nil\nrindex                  →  Enumerator\n	Returns the index of the last object in self\n== to obj.\nIf a block is given instead of an argument, returns the index of\nthe first object for which the block returns true, starting\nfrom the last object.\nReturns nil if no match is found.\nSee also #index.\nIf neither block nor argument is given, an Enumerator is returned instead.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-rindex	1
80	Array#rotate	a = [ "a", "b", "c", "d" ]\na.rotate         #=> ["b", "c", "d", "a"]\na                #=> ["a", "b", "c", "d"]\na.rotate(2)      #=> ["c", "d", "a", "b"]\na.rotate(-3)     #=> ["b", "c", "d", "a"]\n	rotate(count=1)    → new_ary\n	Returns a new array by rotating self so that the element at\ncount is the first element of the new array.\nIf count is negative then it rotates in the opposite\ndirection, starting from the end of self where -1\nis the last element.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-rotate	1
81	Array#rotate!	a = [ "a", "b", "c", "d" ]\na.rotate!        #=> ["b", "c", "d", "a"]\na                #=> ["b", "c", "d", "a"]\na.rotate!(2)     #=> ["d", "a", "b", "c"]\na.rotate!(-3)    #=> ["a", "b", "c", "d"]\n	rotate!(count=1)   → ary\n	Rotates self in place so that the element at\ncount comes first, and returns self.\nIf count is negative then it rotates in the opposite\ndirection, starting from the end of the array where -1 is the\nlast element.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-rotate-21	1
82	Array#sample	a = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]\na.sample         #=> 7\na.sample(4)      #=> [6, 4, 2, 5]\n	sample                  → obj\nsample(random: rng)     → obj\nsample(n)               → new_ary\nsample(n, random: rng)  → new_ary\n	Choose a random element or n random elements from the array.\nThe elements are chosen by using random and unique indices into the array\nin order to ensure that an element doesn't repeat itself unless the\narray already contained duplicate elements.\nIf the array is empty the first form returns nil and the\nsecond form returns an empty array.\nThe optional rng argument will be used as the random number\ngenerator.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-sample	1
83	Array#select	[1,2,3,4,5].select {|num| num.even? }     #=> [2, 4]\n\na = %w[ a b c d e f ]\na.select {|v| v =~ /[aeiou]/ }    #=> ["a", "e"]\n	select {|item| block}   → new_ary\nselect                  → Enumerator\n	Returns a new array containing all elements of ary for which\nthe given block returns a true value.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also Enumerable#select.\n#filter is an alias for #select.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-select	1
84	Array#select!		select! {|item| block } → ary or nil\nselect!                 → Enumerator\n	Invokes the given block passing in successive elements from\nself, deleting elements for which the block returns a\nfalse value.\nThe array may not be changed instantly every time the block is called.\nIf changes were made, it will return self, otherwise it\nreturns nil.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also #keep_if.\n#filter! is an alias for #select!.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-select-21	1
85	Array#shift	args = [ "-m", "-q", "filename" ]\nargs.shift     #=> "-m"\nargs           #=> ["-q", "filename"]\n\nargs = [ "-m", "-q", "filename" ]\nargs.shift(2)  #=> ["-m", "-q"]\nargs           #=> ["filename"]\n	shift    → obj or nil\nshift(n) → new_ary\n	Removes the first element of self and returns it (shifting all\nother elements down by one). Returns nil if the array is\nempty.\nIf a number n is given, returns an array of the first\nn elements (or less) just like array.slice!(0, n)\ndoes. With ary containing only the remainder elements, not\nincluding what was shifted to new_ary. See also #unshift for the opposite effect.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-shift	1
86	Array#shuffle	a = [ 1, 2, 3 ]           #=> [1, 2, 3]\na.shuffle                 #=> [2, 3, 1]\na                         #=> [1, 2, 3]\n	shuffle              → new_ary\nshuffle(random: rng) → new_ary\n	Returns a new array with elements of self shuffled.\nThe optional rng argument will be used as the random number\ngenerator.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-shuffle	1
87	Array#shuffle!	a = [ 1, 2, 3 ]           #=> [1, 2, 3]\na.shuffle!                #=> [2, 3, 1]\na                         #=> [2, 3, 1]\n	shuffle!              → ary\nshuffle!(random: rng) → ary\n	Shuffles elements in self in place.\nThe optional rng argument will be used as the random number\ngenerator.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-shuffle-21	1
88	Array#size		size()	Alias for: length	https://ruby-doc.org/core-2.6/Array.html#method-i-size	1
89	Array#slice	a = [ "a", "b", "c", "d", "e" ]\na[2] +  a[0] + a[1]    #=> "cab"\na[6]                   #=> nil\na[1, 2]                #=> [ "b", "c" ]\na[1..3]                #=> [ "b", "c", "d" ]\na[4..7]                #=> [ "e" ]\na[6..10]               #=> nil\na[-3, 3]               #=> [ "c", "d", "e" ]\n# special cases\na[5]                   #=> nil\na[6, 1]                #=> nil\na[5, 1]                #=> []\na[5..10]               #=> []\n	slice(index)          → obj     or nil\nslice(start, length)  → new_ary or nil\nslice(range)          → new_ary or nil\n	Element Reference — Returns the element at index, or returns a\nsubarray starting at the start index and continuing for\nlength elements, or returns a subarray specified by\nrange of indices.\nNegative indices count backward from the end of the array (-1 is the last\nelement).  For start and range cases the starting\nindex is just before an element.  Additionally, an empty array is returned\nwhen the starting index for an element range is at the end of the array.\nReturns nil if the index (or starting index) are out of range.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-slice	1
90	Array#slice!	a = [ "a", "b", "c" ]\na.slice!(1)     #=> "b"\na               #=> ["a", "c"]\na.slice!(-1)    #=> "c"\na               #=> ["a"]\na.slice!(100)   #=> nil\na               #=> ["a"]\n	slice!(index)         → obj or nil\nslice!(start, length) → new_ary or nil\nslice!(range)         → new_ary or nil\n	Deletes the element(s) given by an index (optionally up to\nlength elements) or by a range.\nReturns the deleted object (or objects), or nil if the\nindex is out of range.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-slice-21	1
91	Array#sort	ary = [ "d", "a", "e", "c", "b" ]\nary.sort                     #=> ["a", "b", "c", "d", "e"]\nary.sort {|a, b| b <=> a}    #=> ["e", "d", "c", "b", "a"]\n	sort                   → new_ary\nsort {|a, b| block}    → new_ary\n	Returns a new array created by sorting self.\nComparisons for the sort will be done using the <=>\noperator or using an optional code block.\nThe block must implement a comparison between a and\nb and return an integer less than 0 when b\nfollows a, 0 when a and\nb are equivalent, or an integer greater than 0 when\na follows b.\nThe result is not guaranteed to be stable.  When the comparison of two\nelements returns 0, the order of the elements is\nunpredictable.\nSee also Enumerable#sort_by.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-sort	1
92	Array#sort!	ary = [ "d", "a", "e", "c", "b" ]\nary.sort!                     #=> ["a", "b", "c", "d", "e"]\nary.sort! {|a, b| b <=> a}    #=> ["e", "d", "c", "b", "a"]\n	sort!                   → ary\nsort! {|a, b| block}    → ary\n	Sorts self in place.\nComparisons for the sort will be done using the <=>\noperator or using an optional code block.\nThe block must implement a comparison between a and\nb and return an integer less than 0 when b\nfollows a, 0 when a and\nb are equivalent, or an integer greater than 0 when\na follows b.\nThe result is not guaranteed to be stable.  When the comparison of two\nelements returns 0, the order of the elements is\nunpredictable.\nSee also Enumerable#sort_by.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-sort-21	1
93	Array#sort_by!		sort_by! {|obj| block}      → ary\nsort_by!                    → Enumerator\n	Sorts self in place using a set of keys generated by mapping\nthe values in self through the given block.\nThe result is not guaranteed to be stable.  When two keys are equal, the\norder of the corresponding elements is unpredictable.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also Enumerable#sort_by.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-sort_by-21	1
94	Array#sum	[].sum                             #=> 0\n[].sum(0.0)                        #=> 0.0\n[1, 2, 3].sum                      #=> 6\n[3, 5.5].sum                       #=> 8.5\n[2.5, 3.0].sum(0.0) {|e| e * e }   #=> 15.25\n[Object.new].sum                   #=> TypeError\n	sum(init=0)                    → number\nsum(init=0) {|e| expr }        → number\n	Returns the sum of elements. For example, [e1, e2, e3].sum returns init +\ne1 + e2 + e3.\nIf a block is given, the block is applied to each element before addition.\nIf ary is empty, it returns init.\nThe (arithmetic) mean value of an array can be obtained as follows.\nThis method can be used for non-numeric objects by explicit init\nargument.\nHowever, #join and #flatten is faster than #sum for array of strings and array of\narrays.\n#sum method may not respect method\nredefinition of “+” methods such as Integer#+.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-sum	1
95	Array#take	a = [1, 2, 3, 4, 5, 0]\na.take(3)             #=> [1, 2, 3]\n	take(n)               → new_ary\n	Returns first n elements from the array.\nIf a negative number is given, raises an ArgumentError.\nSee also #drop\n	https://ruby-doc.org/core-2.6/Array.html#method-i-take	1
96	Array#take_while	a = [1, 2, 3, 4, 5, 0]\na.take_while {|i| i < 3}    #=> [1, 2]\n	take_while {|obj| block}    → new_ary\ntake_while                  → Enumerator\n	Passes elements to the block until the block returns nil or\nfalse, then stops iterating and returns an array of all prior\nelements.\nIf no block is given, an Enumerator is\nreturned instead.\nSee also #drop_while\n	https://ruby-doc.org/core-2.6/Array.html#method-i-take_while	1
97	Array#to_a		to_a     → ary\n	Returns self.\nIf called on a subclass of Array, converts the\nreceiver to an Array object.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-to_a	1
98	Array#to_ary		to_ary → ary\n	Returns self.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-to_ary	1
99	Array#to_h	[[:foo, :bar], [1, 2]].to_h\n  # => {:foo => :bar, 1 => 2}\n	to_h            → hash\nto_h { block }  → hash\n	Returns the result of interpreting ary as an array of [key,\nvalue] pairs.\nIf a block is given, the results of the block on each element of the array\nwill be used as pairs.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-to_h	1
101	Array#transpose	a = [[1,2], [3,4], [5,6]]\na.transpose   #=> [[1, 3, 5], [2, 4, 6]]\n	transpose → new_ary\n	Assumes that self is an array of arrays and transposes the\nrows and columns.\nIf the length of the subarrays don't match, an IndexError is raised.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-transpose	1
102	Array#union	[ "a", "b", "c" ].union( [ "c", "d", "a" ] )    #=> [ "a", "b", "c", "d" ]\n[ "a" ].union( ["e", "b"], ["a", "c", "b"] )    #=> [ "a", "e", "b", "c" ]\n[ "a" ].union #=> [ "a" ]\n	union(other_ary1, other_ary2, ...)   → ary\n	Set Union — Returns a new array by joining other_arys with\nself, excluding any duplicates and preserving the order from\nthe given arrays.\nIt compares elements using their hash and eql? methods for efficiency.\nSee also Array#|.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-union	1
103	Array#uniq	a = [ "a", "a", "b", "b", "c" ]\na.uniq   # => ["a", "b", "c"]\n\nb = [["student","sam"], ["student","george"], ["teacher","matz"]]\nb.uniq {|s| s.first}   # => [["student", "sam"], ["teacher", "matz"]]\n	uniq                → new_ary\nuniq {|item| ...}   → new_ary\n	Returns a new array by removing duplicate values in self.\nIf a block is given, it will use the return value of the block for\ncomparison.\nIt compares values using their hash\nand eql? methods for efficiency.\nself is traversed in order, and the first occurrence is kept.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-uniq	1
104	Array#uniq!	a = [ "a", "a", "b", "b", "c" ]\na.uniq!   # => ["a", "b", "c"]\n\nb = [ "a", "b", "c" ]\nb.uniq!   # => nil\n\nc = [["student","sam"], ["student","george"], ["teacher","matz"]]\nc.uniq! {|s| s.first}   # => [["student", "sam"], ["teacher", "matz"]]\n	uniq!                → ary or nil\nuniq! {|item| ...}   → ary or nil\n	Removes duplicate elements from self.\nIf a block is given, it will use the return value of the block for\ncomparison.\nIt compares values using their hash\nand eql? methods for efficiency.\nself is traversed in order, and the first occurrence is kept.\nReturns nil if no changes are made (that is, no duplicates are\nfound).\n	https://ruby-doc.org/core-2.6/Array.html#method-i-uniq-21	1
105	Array#unshift	a = [ "b", "c", "d" ]\na.unshift("a")   #=> ["a", "b", "c", "d"]\na.unshift(1, 2)  #=> [ 1, 2, "a", "b", "c", "d"]\n	unshift(obj, ...)  → ary\nprepend(obj, ...)  → ary\n	Prepends objects to the front of self, moving other elements\nupwards. See also #shift for the\nopposite effect.\nAlso aliased as: prepend	https://ruby-doc.org/core-2.6/Array.html#method-i-unshift	1
106	Array#values_at	a = %w{ a b c d e f }\na.values_at(1, 3, 5)          # => ["b", "d", "f"]\na.values_at(1, 3, 5, 7)       # => ["b", "d", "f", nil]\na.values_at(-1, -2, -2, -7)   # => ["f", "e", "e", nil]\na.values_at(4..6, 3...6)      # => ["e", "f", nil, "d", "e", "f"]\n	values_at(selector, ...)  → new_ary\n	Returns an array containing the elements in self corresponding\nto the given selector(s).\nThe selectors may be either integer indices or ranges.\nSee also #select.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-values_at	1
107	Array#zip	a = [ 4, 5, 6 ]\nb = [ 7, 8, 9 ]\n[1, 2, 3].zip(a, b)   #=> [[1, 4, 7], [2, 5, 8], [3, 6, 9]]\n[1, 2].zip(a, b)      #=> [[1, 4, 7], [2, 5, 8]]\na.zip([1, 2], [8])    #=> [[4, 1, 8], [5, 2, nil], [6, nil, nil]]\n	zip(arg, ...)                  → new_ary\nzip(arg, ...) {|arr| block}    → nil\n	Converts any arguments to arrays, then merges elements of self\nwith corresponding elements from each argument.\nThis generates a sequence of ary.size n-element\narrays, where n is one more than the count of arguments.\nIf the size of any argument is less than the size of the initial array,\nnil values are supplied.\nIf a block is given, it is invoked for each output array,\notherwise an array of arrays is returned.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-zip	1
108	Array#|	[ "a", "b", "c" ] | [ "c", "d", "a" ]    #=> [ "a", "b", "c", "d" ]\n[ "c", "d", "a" ] | [ "a", "b", "c" ]    #=> [ "c", "d", "a", "b" ]\n	ary | other_ary     → new_ary\n	Set Union — Returns a new array by joining ary with\nother_ary, excluding any duplicates and preserving the order\nfrom the given arrays.\nIt compares elements using their hash and eql? methods for efficiency.\nSee also #union.\n	https://ruby-doc.org/core-2.6/Array.html#method-i-7C	1
109	Array.from()	console.log(Array.from('foo'));\n// expected output: Array ["f", "o", "o"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n	Array.from(arrayLike [, mapFn [, thisArg]])\n	The Array.from() method creates a new, shallow-copied Array instance from an array-like or iterable object.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from	2
110	Array.isArray()	Array.isArray([1, 2, 3]);  // true\nArray.isArray({foo: 123}); // false\nArray.isArray('foobar');   // false\nArray.isArray(undefined);  // false\n	Array.isArray(value)	The Array.isArray() method determines whether the passed value is an Array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray	2
111	Array.of()	Array.of(7);       // [7] \nArray.of(1, 2, 3); // [1, 2, 3]\n\nArray(7);          // array of 7 empty slots\nArray(1, 2, 3);    // [1, 2, 3]\n	Array.of(element0[, element1[, ...[, elementN]]])	The Array.of() method creates a new Array instance from a variable number of arguments, regardless of number or type of the arguments.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of	2
112	Array.prototype.concat()	const array1 = ['a', 'b', 'c'];\nconst array2 = ['d', 'e', 'f'];\nconst array3 = array1.concat(array2);\n\nconsole.log(array3);\n// expected output: Array ["a", "b", "c", "d", "e", "f"]\n	const new_array = old_array.concat([value1[, value2[, ...[, valueN]]]])	The concat() method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a new array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat	2
113	Array.prototype.copyWithin()	const array1 = ['a', 'b', 'c', 'd', 'e'];\n\n// copy to index 0 the element at index 3\nconsole.log(array1.copyWithin(0, 3, 4));\n// expected output: Array ["d", "b", "c", "d", "e"]\n\n// copy to index 1 all elements from index 3 to the end\nconsole.log(array1.copyWithin(1, 3));\n// expected output: Array ["d", "d", "e", "d", "e"]\n	arr.copyWithin(target[, start[, end]])\n	The copyWithin() method shallow copies part of an array to another location in the same array and returns it without modifying its length.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin	2
114	Array.prototype.entries()	const array1 = ['a', 'b', 'c'];\n\nconst iterator1 = array1.entries();\n\nconsole.log(iterator1.next().value);\n// expected output: Array [0, "a"]\n\nconsole.log(iterator1.next().value);\n// expected output: Array [1, "b"]\n	array.entries()	The entries() method returns a new Array Iterator object that contains the key/value pairs for each index in the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries	2
141	Array.prototype.toString()	const array1 = [1, 2, 'a', '1a'];\n\nconsole.log(array1.toString());\n// expected output: "1,2,a,1a"\n	arr.toString()	The toString() method returns a string representing the specified array and its elements.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString	2
115	Array.prototype.every()	const isBelowThreshold = (currentValue) => currentValue < 40;\n\nconst array1 = [1, 30, 39, 29, 10, 13];\n\nconsole.log(array1.every(isBelowThreshold));\n// expected output: true\n	arr.every(callback(element[, index[, array]])[, thisArg])	The every() method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every	2
116	Array.prototype.fill()	const array1 = [1, 2, 3, 4];\n\n// fill with 0 from position 2 until position 4\nconsole.log(array1.fill(0, 2, 4));\n// expected output: [1, 2, 0, 0]\n\n// fill with 5 from position 1\nconsole.log(array1.fill(5, 1));\n// expected output: [1, 5, 5, 5]\n\nconsole.log(array1.fill(6));\n// expected output: [6, 6, 6, 6]\n	arr.fill(value[, start[, end]])\n	The fill() method changes all elements in an array to a static value, from a start index (default 0) to an end index (default array.length). It returns the modified array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill	2
117	Array.prototype.filter()	const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n\nconst result = words.filter(word => word.length > 6);\n\nconsole.log(result);\n// expected output: Array ["exuberant", "destruction", "present"]\n	let newArray = arr.filter(callback(element[, index, [array]])[, thisArg])\n	The filter() method creates a new array with all elements that pass the test implemented by the provided function.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter	2
118	Array.prototype.find()	const array1 = [5, 12, 8, 130, 44];\n\nconst found = array1.find(element => element > 10);\n\nconsole.log(found);\n// expected output: 12\n	arr.find(callback(element[, index[, array]])[, thisArg])	The find() method returns the value of the first element in the provided array that satisfies the provided testing function.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find	2
119	Array.prototype.findIndex()	const array1 = [5, 12, 8, 130, 44];\n\nconst isLargeNumber = (element) => element > 13;\n\nconsole.log(array1.findIndex(isLargeNumber));\n// expected output: 3\n	arr.findIndex(callback( element[, index[, array]] )[, thisArg])\n	The findIndex() method returns the index of the first element in the array that satisfies the provided testing function. Otherwise, it returns -1, indicating that no element passed the test.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex	2
120	Array.prototype.flat()	const arr1 = [1, 2, [3, 4]];\narr1.flat(); \n// [1, 2, 3, 4]\n\nconst arr2 = [1, 2, [3, 4, [5, 6]]];\narr2.flat();\n// [1, 2, 3, 4, [5, 6]]\n\nconst arr3 = [1, 2, [3, 4, [5, 6]]];\narr3.flat(2);\n// [1, 2, 3, 4, 5, 6]\n\nconst arr4 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\narr4.flat(Infinity);\n// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n	var newArray = arr.flat([depth]);	The flat() method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat	2
121	Array.prototype.flatMap()	let arr1 = [1, 2, 3, 4];\n\narr1.map(x => [x * 2]); \n// [[2], [4], [6], [8]]\n\narr1.flatMap(x => [x * 2]);\n// [2, 4, 6, 8]\n\n// only one level is flattened\narr1.flatMap(x => [[x * 2]]);\n// [[2], [4], [6], [8]]\n	var new_array = arr.flatMap(function callback(currentValue[, index[, array]]) {\n    // return element for new_array\n}[, thisArg])	The flatMap() method first maps each element using a mapping function, then flattens the result into a new array. It is identical to a map() followed by a flat() of depth 1, but flatMap() is often quite useful, as merging both into one method is slightly more efficient.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap	2
122	Array.prototype.forEach()	const array1 = ['a', 'b', 'c'];\n\narray1.forEach(element => console.log(element));\n\n// expected output: "a"\n// expected output: "b"\n// expected output: "c"\n	arr.forEach(callback(currentValue [, index [, array]])[, thisArg])	The forEach() method executes a provided function once for each array element.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach	2
123	Array.prototype.includes()	const array1 = [1, 2, 3];\n\nconsole.log(array1.includes(2));\n// expected output: true\n\nconst pets = ['cat', 'dog', 'bat'];\n\nconsole.log(pets.includes('cat'));\n// expected output: true\n\nconsole.log(pets.includes('at'));\n// expected output: false\n	arr.includes(valueToFind[, fromIndex])\n	The includes() method determines whether an array includes a certain value among its entries, returning true or false as appropriate.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes	2
124	Array.prototype.indexOf()	const beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];\n\nconsole.log(beasts.indexOf('bison'));\n// expected output: 1\n\n// start from index 2\nconsole.log(beasts.indexOf('bison', 2));\n// expected output: 4\n\nconsole.log(beasts.indexOf('giraffe'));\n// expected output: -1\n	arr.indexOf(searchElement[, fromIndex])	The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf	2
125	Array.prototype.join()	const elements = ['Fire', 'Air', 'Water'];\n\nconsole.log(elements.join());\n// expected output: "Fire,Air,Water"\n\nconsole.log(elements.join(''));\n// expected output: "FireAirWater"\n\nconsole.log(elements.join('-'));\n// expected output: "Fire-Air-Water"\n	arr.join([separator])	The join() method creates and returns a new string by concatenating all of the elements in an array (or an array-like object), separated by commas or a specified separator string. If the array has only one item, then that item will be returned without using the separator.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join	2
126	Array.prototype.keys()	const array1 = ['a', 'b', 'c'];\nconst iterator = array1.keys();\n\nfor (const key of iterator) {\n  console.log(key);\n}\n\n// expected output: 0\n// expected output: 1\n// expected output: 2\n	arr.keys()	The keys() method returns a new Array Iterator object that contains the keys for each index in the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys	2
127	Array.prototype.lastIndexOf()	const animals = ['Dodo', 'Tiger', 'Penguin', 'Dodo'];\n\nconsole.log(animals.lastIndexOf('Dodo'));\n// expected output: 3\n\nconsole.log(animals.lastIndexOf('Tiger'));\n// expected output: 1\n	arr.lastIndexOf(searchElement[, fromIndex])\n	The lastIndexOf() method returns the last index at which a given element can be found in the array, or -1 if it is not present. The array is searched backwards, starting at fromIndex.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf	2
128	Array.prototype.map()	const array1 = [1, 4, 9, 16];\n\n// pass a function to map\nconst map1 = array1.map(x => x * 2);\n\nconsole.log(map1);\n// expected output: Array [2, 8, 18, 32]\n	let new_array = arr.map(function callback( currentValue[, index[, array]]) {\n    // return element for new_array\n}[, thisArg])\n	The map() method creates a new array populated with the results of calling a provided function on every element in the calling array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map	2
129	Array.prototype.pop()	const plants = ['broccoli', 'cauliflower', 'cabbage', 'kale', 'tomato'];\n\nconsole.log(plants.pop());\n// expected output: "tomato"\n\nconsole.log(plants);\n// expected output: Array ["broccoli", "cauliflower", "cabbage", "kale"]\n\nplants.pop();\n\nconsole.log(plants);\n// expected output: Array ["broccoli", "cauliflower", "cabbage"]\n	arr.pop()	The pop() method removes the last element from an array and returns that element. This method changes the length of the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop	2
130	Array.prototype.push()	const animals = ['pigs', 'goats', 'sheep'];\n\nconst count = animals.push('cows');\nconsole.log(count);\n// expected output: 4\nconsole.log(animals);\n// expected output: Array ["pigs", "goats", "sheep", "cows"]\n\nanimals.push('chickens', 'cats', 'dogs');\nconsole.log(animals);\n// expected output: Array ["pigs", "goats", "sheep", "cows", "chickens", "cats", "dogs"]\n	arr.push(element1[, ...[, elementN]])	The push() method adds one or more elements to the end of an array and returns the new length of the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push	2
131	Array.prototype.reduce()	const array1 = [1, 2, 3, 4];\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n// 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer));\n// expected output: 10\n\n// 5 + 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer, 5));\n// expected output: 15\n	arr.reduce(callback( accumulator, currentValue[, index[, array]] )[, initialValue])\n	The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in a single output value.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce	2
132	Array.prototype.reduceRight()	const array1 = [[0, 1], [2, 3], [4, 5]].reduceRight(\n  (accumulator, currentValue) => accumulator.concat(currentValue)\n);\n\nconsole.log(array1);\n// expected output: Array [4, 5, 2, 3, 0, 1]\n	arr.reduceRight(callback(accumulator, currentValue[, index[, array]])[, initialValue])	The reduceRight() method applies a function against an accumulator and each value of the array (from right-to-left) to reduce it to a single value.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight	2
133	Array.prototype.reverse()	const array1 = ['one', 'two', 'three'];\nconsole.log('array1:', array1);\n// expected output: "array1:" Array ["one", "two", "three"]\n\nconst reversed = array1.reverse();\nconsole.log('reversed:', reversed);\n// expected output: "reversed:" Array ["three", "two", "one"]\n\n// Careful: reverse is destructive -- it changes the original array.\nconsole.log('array1:', array1);\n// expected output: "array1:" Array ["three", "two", "one"]\n	a.reverse()	The reverse() method reverses an array in place. The first array element becomes the last, and the last array element becomes the first.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse	2
134	Array.prototype.shift()	const array1 = [1, 2, 3];\n\nconst firstElement = array1.shift();\n\nconsole.log(array1);\n// expected output: Array [2, 3]\n\nconsole.log(firstElement);\n// expected output: 1\n	arr.shift()	The shift() method removes the first element from an array and returns that removed element. This method changes the length of the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift	2
135	Array.prototype.slice()	const animals = ['ant', 'bison', 'camel', 'duck', 'elephant'];\n\nconsole.log(animals.slice(2));\n// expected output: Array ["camel", "duck", "elephant"]\n\nconsole.log(animals.slice(2, 4));\n// expected output: Array ["camel", "duck"]\n\nconsole.log(animals.slice(1, 5));\n// expected output: Array ["bison", "camel", "duck", "elephant"]\n	arr.slice([begin[, end]])\n	The slice() method returns a shallow copy of a portion of an array into a new array object selected from begin to end (end not included) where begin and end represent the index of items in that array. The original array will not be modified.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice	2
136	Array.prototype.some()	const array = [1, 2, 3, 4, 5];\n\n// checks whether an element is even\nconst even = (element) => element % 2 === 0;\n\nconsole.log(array.some(even));\n// expected output: true\n	arr.some(callback(element[, index[, array]])[, thisArg])	The some() method tests whether at least one element in the array passes the test implemented by the provided function. It returns a Boolean value. 	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some	2
137	Array.prototype.sort()	const months = ['March', 'Jan', 'Feb', 'Dec'];\nmonths.sort();\nconsole.log(months);\n// expected output: Array ["Dec", "Feb", "Jan", "March"]\n\nconst array1 = [1, 30, 4, 21, 100000];\narray1.sort();\nconsole.log(array1);\n// expected output: Array [1, 100000, 21, 30, 4]\n	arr.sort([compareFunction])\n	The sort() method sorts the elements of an array in place and returns the sorted array. The default sort order is ascending, built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort	2
138	Array.prototype.splice()	const months = ['Jan', 'March', 'April', 'June'];\nmonths.splice(1, 0, 'Feb');\n// inserts at index 1\nconsole.log(months);\n// expected output: Array ["Jan", "Feb", "March", "April", "June"]\n\nmonths.splice(4, 1, 'May');\n// replaces 1 element at index 4\nconsole.log(months);\n// expected output: Array ["Jan", "Feb", "March", "April", "May"]\n	let arrDeletedItems = array.splice(start[, deleteCount[, item1[, item2[, ...]]]])\n	The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice	2
139	Array.prototype.toLocaleString()	const array1 = [1, 'a', new Date('21 Dec 1997 14:12:00 UTC')];\nconst localeString = array1.toLocaleString('en', {timeZone: "UTC"});\n\nconsole.log(localeString);\n// expected output: "1,a,12/21/1997, 2:12:00 PM",\n// This assumes "en" locale and UTC timezone - your results may vary\n	arr.toLocaleString([locales[, options]]);\n	The toLocaleString() method returns a string representing the elements of the array. The elements are converted to Strings using their toLocaleString methods and these Strings are separated by a locale-specific String (such as a comma “,”).	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString	2
140	Array.prototype.toSource()	arr.toSource()	arr.toSource()	The toSource() method returns a string representing the source code of the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toSource	2
142	Array.prototype.unshift()	const array1 = [1, 2, 3];\n\nconsole.log(array1.unshift(4, 5));\n// expected output: 5\n\nconsole.log(array1);\n// expected output: Array [4, 5, 1, 2, 3]\n	arr.unshift(element1[, ...[, elementN]])	The unshift() method adds one or more elements to the beginning of an array and returns the new length of the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift	2
143	Array.prototype.values()	const array1 = ['a', 'b', 'c'];\nconst iterator = array1.values();\n\nfor (const value of iterator) {\n  console.log(value);\n}\n\n// expected output: "a"\n// expected output: "b"\n// expected output: "c"\n	arr.values()	The values() method returns a new Array Iterator object that contains the values for each index in the array.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values	2
144	Array.prototype[@@iterator]()	arr[Symbol.iterator]()	arr[Symbol.iterator]()	The  @@iterator method is part of The iterable protocol, that defines how to synchronously iterate over a sequence of values.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator	2
145	get Array[@@species]	Array[Symbol.species]\n	Array[Symbol.species]\n	The Array[@@species] accessor property returns the Array constructor.	https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species	2
\.


--
-- Data for Name: search_results; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.search_results (id, method_id, target_language_id, source_language_id) FROM stdin;
1	109	1	2
2	110	1	2
3	111	1	2
4	112	1	2
5	113	1	2
6	114	1	2
7	141	1	2
8	115	1	2
9	116	1	2
10	117	1	2
11	118	1	2
12	119	1	2
13	120	1	2
14	121	1	2
15	122	1	2
16	123	1	2
17	124	1	2
18	125	1	2
19	126	1	2
20	127	1	2
21	128	1	2
22	129	1	2
23	130	1	2
24	131	1	2
25	132	1	2
26	133	1	2
27	134	1	2
28	135	1	2
29	136	1	2
30	137	1	2
31	138	1	2
32	139	1	2
33	140	1	2
34	142	1	2
35	143	1	2
36	144	1	2
37	145	1	2
38	1	2	1
39	2	2	1
40	3	2	1
41	4	2	1
42	5	2	1
43	6	2	1
44	7	2	1
45	8	2	1
46	9	2	1
47	10	2	1
48	11	2	1
49	25	2	1
50	12	2	1
51	13	2	1
52	14	2	1
53	15	2	1
54	16	2	1
55	17	2	1
56	18	2	1
57	19	2	1
58	20	2	1
59	21	2	1
60	22	2	1
61	23	2	1
62	24	2	1
63	26	2	1
64	27	2	1
65	28	2	1
66	29	2	1
67	30	2	1
68	31	2	1
69	32	2	1
70	33	2	1
71	34	2	1
72	35	2	1
73	36	2	1
74	37	2	1
75	38	2	1
76	39	2	1
77	40	2	1
78	56	2	1
79	57	2	1
80	41	2	1
81	42	2	1
82	43	2	1
83	44	2	1
84	45	2	1
85	46	2	1
86	47	2	1
87	48	2	1
88	49	2	1
89	50	2	1
90	51	2	1
91	52	2	1
92	53	2	1
93	54	2	1
94	55	2	1
95	58	2	1
96	59	2	1
97	60	2	1
98	61	2	1
99	62	2	1
100	63	2	1
101	64	2	1
102	65	2	1
103	66	2	1
104	67	2	1
105	68	2	1
106	69	2	1
107	70	2	1
108	100	2	1
109	71	2	1
110	72	2	1
111	73	2	1
112	74	2	1
113	75	2	1
114	76	2	1
115	77	2	1
116	78	2	1
117	79	2	1
118	80	2	1
119	81	2	1
120	82	2	1
121	83	2	1
122	84	2	1
123	85	2	1
124	86	2	1
125	87	2	1
126	88	2	1
127	89	2	1
128	90	2	1
129	91	2	1
130	92	2	1
131	93	2	1
132	94	2	1
133	95	2	1
134	96	2	1
135	97	2	1
136	98	2	1
137	99	2	1
138	101	2	1
139	102	2	1
140	103	2	1
141	104	2	1
142	105	2	1
143	106	2	1
144	107	2	1
145	108	2	1
\.


--
-- Name: languages_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.languages_id_seq', 2, true);


--
-- Name: method_results_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.method_results_id_seq', 7992, true);


--
-- Name: methods_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.methods_id_seq', 145, true);


--
-- Name: search_results_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.search_results_id_seq', 145, true);


--
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: languages languages_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.languages
    ADD CONSTRAINT languages_pkey PRIMARY KEY (id);


--
-- Name: method_results method_results_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.method_results
    ADD CONSTRAINT method_results_pkey PRIMARY KEY (id);


--
-- Name: methods methods_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.methods
    ADD CONSTRAINT methods_pkey PRIMARY KEY (id);


--
-- Name: search_results search_results_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_results
    ADD CONSTRAINT search_results_pkey PRIMARY KEY (id);


--
-- Name: method_results method_results_method_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.method_results
    ADD CONSTRAINT method_results_method_id_fkey FOREIGN KEY (method_id) REFERENCES public.methods(id);


--
-- Name: method_results method_results_search_result_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.method_results
    ADD CONSTRAINT method_results_search_result_id_fkey FOREIGN KEY (search_result_id) REFERENCES public.search_results(id);


--
-- Name: methods methods_language_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.methods
    ADD CONSTRAINT methods_language_id_fkey FOREIGN KEY (language_id) REFERENCES public.languages(id);


--
-- Name: search_results search_results_method_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_results
    ADD CONSTRAINT search_results_method_id_fkey FOREIGN KEY (method_id) REFERENCES public.methods(id);


--
-- Name: search_results search_results_source_language_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_results
    ADD CONSTRAINT search_results_source_language_id_fkey FOREIGN KEY (source_language_id) REFERENCES public.languages(id);


--
-- Name: search_results search_results_target_language_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.search_results
    ADD CONSTRAINT search_results_target_language_id_fkey FOREIGN KEY (target_language_id) REFERENCES public.languages(id);


--
-- PostgreSQL database dump complete
--

